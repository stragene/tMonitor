ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.LL_Init,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  24              	LL_Init:
  25              	.LFB741:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * @file           : main.c
   4:Src/main.c    ****   * @brief          : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE BEGIN Includes */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE BEGIN PV */
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  53:Src/main.c    **** static void LL_Init(void);
  54:Src/main.c    **** void SystemClock_Config(void);
  55:Src/main.c    **** static void MX_GPIO_Init(void);
  56:Src/main.c    **** static void MX_DMA_Init(void);
  57:Src/main.c    **** static void MX_SPI1_Init(void);
  58:Src/main.c    **** static void MX_USART1_UART_Init(void);
  59:Src/main.c    **** static void MX_IWDG_Init(void);
  60:Src/main.c    **** static void MX_RTC_Init(void);
  61:Src/main.c    **** static void MX_WWDG_Init(void);
  62:Src/main.c    **** static void MX_CRC_Init(void);
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN PFP */
  65:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END PFP */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE BEGIN 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE END 0 */
  72:Src/main.c    **** 
  73:Src/main.c    **** /**
  74:Src/main.c    ****   * @brief  The application entry point.
  75:Src/main.c    ****   *
  76:Src/main.c    ****   * @retval None
  77:Src/main.c    ****   */
  78:Src/main.c    **** int main(void)
  79:Src/main.c    **** {
  80:Src/main.c    ****     /* USER CODE BEGIN 1 */
  81:Src/main.c    **** 
  82:Src/main.c    ****     /* USER CODE END 1 */
  83:Src/main.c    **** 
  84:Src/main.c    ****     /* MCU Configuration----------------------------------------------------------*/
  85:Src/main.c    **** 
  86:Src/main.c    ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Src/main.c    ****     LL_Init();
  88:Src/main.c    **** 
  89:Src/main.c    ****     /* USER CODE BEGIN Init */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****     /* USER CODE END Init */
  92:Src/main.c    **** 
  93:Src/main.c    ****     /* Configure the system clock */
  94:Src/main.c    ****     SystemClock_Config();
  95:Src/main.c    **** 
  96:Src/main.c    ****     /* USER CODE BEGIN SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****     /* USER CODE END SysInit */
  99:Src/main.c    **** 
 100:Src/main.c    ****     /* Initialize all configured peripherals */
 101:Src/main.c    ****     MX_GPIO_Init();
 102:Src/main.c    ****     MX_DMA_Init();
 103:Src/main.c    ****     MX_SPI1_Init();
 104:Src/main.c    ****     MX_USART1_UART_Init();
 105:Src/main.c    ****     MX_IWDG_Init();
 106:Src/main.c    ****     MX_RTC_Init();
 107:Src/main.c    ****     MX_WWDG_Init();
 108:Src/main.c    ****     MX_CRC_Init();
 109:Src/main.c    ****     /* USER CODE BEGIN 2 */
 110:Src/main.c    **** 
 111:Src/main.c    ****     /* USER CODE END 2 */
 112:Src/main.c    **** 
 113:Src/main.c    ****     /* Infinite loop */
 114:Src/main.c    ****     /* USER CODE BEGIN WHILE */
 115:Src/main.c    ****     while (1)
 116:Src/main.c    ****     {
 117:Src/main.c    **** 
 118:Src/main.c    ****         /* USER CODE END WHILE */
 119:Src/main.c    **** 
 120:Src/main.c    ****         /* USER CODE BEGIN 3 */
 121:Src/main.c    ****     }
 122:Src/main.c    ****     /* USER CODE END 3 */
 123:Src/main.c    **** }
 124:Src/main.c    **** 
 125:Src/main.c    **** static void LL_Init(void)
 126:Src/main.c    **** {
  27              		.loc 1 126 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 82B0     		sub	sp, sp, #8
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              	.LVL0:
  36              	.LBB188:
  37              	.LBB189:
  38              		.file 2 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @file    stm32f0xx_ll_bus.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @verbatim                
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****                       ##### RCC Limitations #####
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 4


   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write 
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * are permitted provided that the following conditions are met:
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *      this list of conditions and the following disclaimer.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *      this list of conditions and the following disclaimer in the documentation
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *      and/or other materials provided with the distribution.
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *      may be used to endorse or promote products derived from this software
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *      without specific prior written permission.
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifndef __STM32F0xx_LL_BUS_H
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define __STM32F0xx_LL_BUS_H
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifdef __cplusplus
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** extern "C" {
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #include "stm32f0xx.h"
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @addtogroup STM32F0xx_LL_Driver
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 5


  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(RCC)
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DMA2)
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHBENR_DMA2EN
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DMA2*/
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBENR_SRAMEN
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLITFEN
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOA          RCC_AHBENR_GPIOAEN
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOB          RCC_AHBENR_GPIOBEN
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOC          RCC_AHBENR_GPIOCEN
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOD)
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOD          RCC_AHBENR_GPIODEN
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOD*/
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOE)
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOE          RCC_AHBENR_GPIOEEN
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOE*/
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOF          RCC_AHBENR_GPIOFEN
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TSC)
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TSC*/
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM2)
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM2*/
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 6


 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM6)
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM6*/
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM7)
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM7*/
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM14          RCC_APB1ENR_TIM14EN
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(SPI2)
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*SPI2*/
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART2)
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART2 */
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART3)
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART3 */
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART4)
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART4 */
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART5)
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART5 */
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(I2C2)
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*I2C2*/
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USB)
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USB */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CAN)
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN            RCC_APB1ENR_CANEN
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CAN*/
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CRS)
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CRS*/
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DAC)
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DAC*/
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CEC)
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APB1ENR_CECEN
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CEC*/
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ADC1           RCC_APB2ENR_ADC1EN
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART8)
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART8         RCC_APB2ENR_USART8EN
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART8*/
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART7)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 7


 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART7         RCC_APB2ENR_USART7EN
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART7*/
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART6)
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART6         RCC_APB2ENR_USART6EN
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART6*/
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART1         RCC_APB2ENR_USART1EN
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM15)
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM15*/
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_EnableClock\n
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_EnableClock\n
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_EnableClock\n
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_EnableClock\n
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_EnableClock\n
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_EnableClock\n
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_EnableClock\n
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_EnableClock\n
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_EnableClock\n
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_EnableClock
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 8


 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_IsEnabledClock\n
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_IsEnabledClock\n
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_IsEnabledClock\n
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_IsEnabledClock\n
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_IsEnabledClock\n
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_IsEnabledClock\n
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_IsEnabledClock\n
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_IsEnabledClock\n
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_IsEnabledClock
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->AHBENR, Periphs) == Periphs);
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_DisableClock\n
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_DisableClock\n
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_DisableClock\n
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 9


 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_DisableClock\n
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_DisableClock\n
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_DisableClock\n
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_DisableClock\n
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_DisableClock\n
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_DisableClock\n
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_DisableClock
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ForceReset\n
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ForceReset\n
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ForceReset\n
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ForceReset\n
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ForceReset\n
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ForceReset\n
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 10


 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ReleaseReset\n
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ReleaseReset\n
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ReleaseReset\n
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ReleaseReset\n
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ReleaseReset\n
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ReleaseReset\n
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1_GRP1 APB1 GRP1
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock (available in register 1).
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_EnableClock\n
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_EnableClock\n
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_EnableClock\n
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_EnableClock\n
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_EnableClock\n
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_EnableClock\n
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_EnableClock\n
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_EnableClock\n
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_EnableClock\n
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_EnableClock\n
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_EnableClock\n
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_EnableClock\n
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_EnableClock\n
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_EnableClock\n
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_EnableClock\n
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_EnableClock\n
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_EnableClock\n
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_EnableClock\n
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_EnableClock
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 11


 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not (available in register 1).
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_IsEnabledClock\n
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_IsEnabledClock\n
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_IsEnabledClock\n
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_IsEnabledClock\n
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_IsEnabledClock
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 12


 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->APB1ENR, Periphs) == Periphs);
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock (available in register 1).
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_DisableClock\n
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_DisableClock\n
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_DisableClock\n
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_DisableClock\n
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_DisableClock\n
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_DisableClock\n
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_DisableClock\n
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_DisableClock\n
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_DisableClock\n
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_DisableClock\n
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_DisableClock\n
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_DisableClock\n
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_DisableClock\n
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_DisableClock\n
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_DisableClock\n
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_DisableClock\n
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_DisableClock\n
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_DisableClock\n
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_DisableClock
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 13


 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset (available in register 1).
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ForceReset\n
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ForceReset\n
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ForceReset\n
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ForceReset\n
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ForceReset\n
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ForceReset\n
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ForceReset\n
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ForceReset\n
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ForceReset\n
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART4RST     LL_APB1_GRP1_ForceReset\n
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART5RST     LL_APB1_GRP1_ForceReset\n
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ForceReset\n
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ForceReset\n
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ForceReset\n
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CANRST        LL_APB1_GRP1_ForceReset\n
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CRSRST        LL_APB1_GRP1_ForceReset\n
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ForceReset\n
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ForceReset\n
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ForceReset
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 14


 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset (available in register 1).
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ReleaseReset\n
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ReleaseReset\n
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ReleaseReset\n
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ReleaseReset\n
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART4RST     LL_APB1_GRP1_ReleaseReset\n
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART5RST     LL_APB1_GRP1_ReleaseReset\n
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ReleaseReset\n
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CANRST        LL_APB1_GRP1_ReleaseReset\n
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CRSRST        LL_APB1_GRP1_ReleaseReset\n
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ReleaseReset\n
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ReleaseReset
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 15


 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1_GRP2 APB1 GRP2
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock (available in register 2).
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB1_GRP2_EnableClock\n
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      ADC1EN        LL_APB1_GRP2_EnableClock\n
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART8EN      LL_APB1_GRP2_EnableClock\n
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART7EN      LL_APB1_GRP2_EnableClock\n
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART6EN      LL_APB1_GRP2_EnableClock\n
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB1_GRP2_EnableClock\n
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB1_GRP2_EnableClock\n
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB1_GRP2_EnableClock\n
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB1_GRP2_EnableClock\n
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB1_GRP2_EnableClock\n
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB1_GRP2_EnableClock\n
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      DBGMCUEN      LL_APB1_GRP2_EnableClock
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_EnableClock(uint32_t Periphs)
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
  39              		.loc 2 684 0
  40 0002 0C4A     		ldr	r2, .L2
  41 0004 9169     		ldr	r1, [r2, #24]
  42 0006 0120     		movs	r0, #1
  43 0008 0143     		orrs	r1, r0
  44 000a 9161     		str	r1, [r2, #24]
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 16


  45              		.loc 2 686 0
  46 000c 9369     		ldr	r3, [r2, #24]
  47 000e 0340     		ands	r3, r0
  48 0010 0193     		str	r3, [sp, #4]
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
  49              		.loc 2 687 0
  50 0012 019B     		ldr	r3, [sp, #4]
  51              	.LVL1:
  52              	.LBE189:
  53              	.LBE188:
  54              	.LBB190:
  55              	.LBB191:
  56              		.file 3 "Drivers/CMSIS/Include/core_cm0.h"
   1:Drivers/CMSIS/Include/core_cm0.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0.h ****  * @file     core_cm0.h
   3:Drivers/CMSIS/Include/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm0.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm0.h **** 
   9:Drivers/CMSIS/Include/core_cm0.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm0.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm0.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm0.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm0.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm0.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm0.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm0.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm0.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm0.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm0.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm0.h ****    *
  21:Drivers/CMSIS/Include/core_cm0.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm0.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm0.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm0.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm0.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm0.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm0.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm0.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm0.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm0.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm0.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm0.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/core_cm0.h **** 
  34:Drivers/CMSIS/Include/core_cm0.h **** 
  35:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm0.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm0.h **** #endif
  40:Drivers/CMSIS/Include/core_cm0.h **** 
  41:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm0.h **** 
  44:Drivers/CMSIS/Include/core_cm0.h **** #include <stdint.h>
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 17


  45:Drivers/CMSIS/Include/core_cm0.h **** 
  46:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm0.h **** #endif
  49:Drivers/CMSIS/Include/core_cm0.h **** 
  50:Drivers/CMSIS/Include/core_cm0.h **** /**
  51:Drivers/CMSIS/Include/core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm0.h **** 
  54:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm0.h **** 
  57:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm0.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm0.h **** 
  60:Drivers/CMSIS/Include/core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm0.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm0.h ****  */
  63:Drivers/CMSIS/Include/core_cm0.h **** 
  64:Drivers/CMSIS/Include/core_cm0.h **** 
  65:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm0.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm0.h **** /**
  69:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup Cortex_M0
  70:Drivers/CMSIS/Include/core_cm0.h ****   @{
  71:Drivers/CMSIS/Include/core_cm0.h ****  */
  72:Drivers/CMSIS/Include/core_cm0.h **** 
  73:Drivers/CMSIS/Include/core_cm0.h **** /*  CMSIS CM0 definitions */
  74:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm0.h **** 
  79:Drivers/CMSIS/Include/core_cm0.h **** #define __CORTEX_M                (0x00U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm0.h **** 
  81:Drivers/CMSIS/Include/core_cm0.h **** 
  82:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm0.h **** 
  87:Drivers/CMSIS/Include/core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm0.h **** 
  92:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm0.h **** 
  97:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 18


 102:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm0.h **** 
 106:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm0.h **** 
 111:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm0.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm0.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm0.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm0.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm0.h **** 
 117:Drivers/CMSIS/Include/core_cm0.h **** #else
 118:Drivers/CMSIS/Include/core_cm0.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm0.h **** #endif
 120:Drivers/CMSIS/Include/core_cm0.h **** 
 121:Drivers/CMSIS/Include/core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm0.h ****     This core does not support an FPU at all
 123:Drivers/CMSIS/Include/core_cm0.h **** */
 124:Drivers/CMSIS/Include/core_cm0.h **** #define __FPU_USED       0U
 125:Drivers/CMSIS/Include/core_cm0.h **** 
 126:Drivers/CMSIS/Include/core_cm0.h **** #if defined ( __CC_ARM )
 127:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TARGET_FPU_VFP
 128:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 130:Drivers/CMSIS/Include/core_cm0.h **** 
 131:Drivers/CMSIS/Include/core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARM_PCS_VFP
 133:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm0.h **** 
 136:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
 137:Drivers/CMSIS/Include/core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 140:Drivers/CMSIS/Include/core_cm0.h **** 
 141:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
 142:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARMVFP__
 143:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 145:Drivers/CMSIS/Include/core_cm0.h **** 
 146:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TMS470__ )
 147:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 148:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 150:Drivers/CMSIS/Include/core_cm0.h **** 
 151:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 152:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __FPU_VFP__
 153:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 155:Drivers/CMSIS/Include/core_cm0.h **** 
 156:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 157:Drivers/CMSIS/Include/core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 158:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 19


 159:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 160:Drivers/CMSIS/Include/core_cm0.h **** 
 161:Drivers/CMSIS/Include/core_cm0.h **** #endif
 162:Drivers/CMSIS/Include/core_cm0.h **** 
 163:Drivers/CMSIS/Include/core_cm0.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:Drivers/CMSIS/Include/core_cm0.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:Drivers/CMSIS/Include/core_cm0.h **** 
 166:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 167:Drivers/CMSIS/Include/core_cm0.h **** }
 168:Drivers/CMSIS/Include/core_cm0.h **** #endif
 169:Drivers/CMSIS/Include/core_cm0.h **** 
 170:Drivers/CMSIS/Include/core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 171:Drivers/CMSIS/Include/core_cm0.h **** 
 172:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CMSIS_GENERIC
 173:Drivers/CMSIS/Include/core_cm0.h **** 
 174:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 176:Drivers/CMSIS/Include/core_cm0.h **** 
 177:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 178:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
 179:Drivers/CMSIS/Include/core_cm0.h **** #endif
 180:Drivers/CMSIS/Include/core_cm0.h **** 
 181:Drivers/CMSIS/Include/core_cm0.h **** /* check device defines and use defaults */
 182:Drivers/CMSIS/Include/core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 183:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __CM0_REV
 184:Drivers/CMSIS/Include/core_cm0.h ****     #define __CM0_REV               0x0000U
 185:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 186:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 187:Drivers/CMSIS/Include/core_cm0.h **** 
 188:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 189:Drivers/CMSIS/Include/core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 190:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 191:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 192:Drivers/CMSIS/Include/core_cm0.h **** 
 193:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 194:Drivers/CMSIS/Include/core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 195:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 196:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 197:Drivers/CMSIS/Include/core_cm0.h **** #endif
 198:Drivers/CMSIS/Include/core_cm0.h **** 
 199:Drivers/CMSIS/Include/core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 200:Drivers/CMSIS/Include/core_cm0.h **** /**
 201:Drivers/CMSIS/Include/core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 202:Drivers/CMSIS/Include/core_cm0.h **** 
 203:Drivers/CMSIS/Include/core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 204:Drivers/CMSIS/Include/core_cm0.h ****     \li to specify the access to peripheral variables.
 205:Drivers/CMSIS/Include/core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 206:Drivers/CMSIS/Include/core_cm0.h **** */
 207:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 208:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 209:Drivers/CMSIS/Include/core_cm0.h **** #else
 210:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 211:Drivers/CMSIS/Include/core_cm0.h **** #endif
 212:Drivers/CMSIS/Include/core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 213:Drivers/CMSIS/Include/core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 214:Drivers/CMSIS/Include/core_cm0.h **** 
 215:Drivers/CMSIS/Include/core_cm0.h **** /* following defines should be used for structure members */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 20


 216:Drivers/CMSIS/Include/core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 217:Drivers/CMSIS/Include/core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 218:Drivers/CMSIS/Include/core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 219:Drivers/CMSIS/Include/core_cm0.h **** 
 220:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group Cortex_M0 */
 221:Drivers/CMSIS/Include/core_cm0.h **** 
 222:Drivers/CMSIS/Include/core_cm0.h **** 
 223:Drivers/CMSIS/Include/core_cm0.h **** 
 224:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 225:Drivers/CMSIS/Include/core_cm0.h ****  *                 Register Abstraction
 226:Drivers/CMSIS/Include/core_cm0.h ****   Core Register contain:
 227:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register
 228:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Register
 229:Drivers/CMSIS/Include/core_cm0.h ****   - Core SCB Register
 230:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Register
 231:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 232:Drivers/CMSIS/Include/core_cm0.h **** /**
 233:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 234:Drivers/CMSIS/Include/core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 235:Drivers/CMSIS/Include/core_cm0.h **** */
 236:Drivers/CMSIS/Include/core_cm0.h **** 
 237:Drivers/CMSIS/Include/core_cm0.h **** /**
 238:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 239:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 240:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Core Register type definitions.
 241:Drivers/CMSIS/Include/core_cm0.h ****   @{
 242:Drivers/CMSIS/Include/core_cm0.h ****  */
 243:Drivers/CMSIS/Include/core_cm0.h **** 
 244:Drivers/CMSIS/Include/core_cm0.h **** /**
 245:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 246:Drivers/CMSIS/Include/core_cm0.h ****  */
 247:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 248:Drivers/CMSIS/Include/core_cm0.h **** {
 249:Drivers/CMSIS/Include/core_cm0.h ****   struct
 250:Drivers/CMSIS/Include/core_cm0.h ****   {
 251:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 252:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 253:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 254:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 255:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 256:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 257:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 258:Drivers/CMSIS/Include/core_cm0.h **** } APSR_Type;
 259:Drivers/CMSIS/Include/core_cm0.h **** 
 260:Drivers/CMSIS/Include/core_cm0.h **** /* APSR Register Definitions */
 261:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 262:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 263:Drivers/CMSIS/Include/core_cm0.h **** 
 264:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 265:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 266:Drivers/CMSIS/Include/core_cm0.h **** 
 267:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 268:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 269:Drivers/CMSIS/Include/core_cm0.h **** 
 270:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 271:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 272:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 21


 273:Drivers/CMSIS/Include/core_cm0.h **** 
 274:Drivers/CMSIS/Include/core_cm0.h **** /**
 275:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 276:Drivers/CMSIS/Include/core_cm0.h ****  */
 277:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 278:Drivers/CMSIS/Include/core_cm0.h **** {
 279:Drivers/CMSIS/Include/core_cm0.h ****   struct
 280:Drivers/CMSIS/Include/core_cm0.h ****   {
 281:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 282:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 283:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 284:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 285:Drivers/CMSIS/Include/core_cm0.h **** } IPSR_Type;
 286:Drivers/CMSIS/Include/core_cm0.h **** 
 287:Drivers/CMSIS/Include/core_cm0.h **** /* IPSR Register Definitions */
 288:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 289:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 290:Drivers/CMSIS/Include/core_cm0.h **** 
 291:Drivers/CMSIS/Include/core_cm0.h **** 
 292:Drivers/CMSIS/Include/core_cm0.h **** /**
 293:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 294:Drivers/CMSIS/Include/core_cm0.h ****  */
 295:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 296:Drivers/CMSIS/Include/core_cm0.h **** {
 297:Drivers/CMSIS/Include/core_cm0.h ****   struct
 298:Drivers/CMSIS/Include/core_cm0.h ****   {
 299:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 300:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 301:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 302:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 303:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 304:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 305:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 306:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 307:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 308:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 309:Drivers/CMSIS/Include/core_cm0.h **** } xPSR_Type;
 310:Drivers/CMSIS/Include/core_cm0.h **** 
 311:Drivers/CMSIS/Include/core_cm0.h **** /* xPSR Register Definitions */
 312:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 313:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 314:Drivers/CMSIS/Include/core_cm0.h **** 
 315:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 316:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 317:Drivers/CMSIS/Include/core_cm0.h **** 
 318:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 319:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 320:Drivers/CMSIS/Include/core_cm0.h **** 
 321:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 322:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 323:Drivers/CMSIS/Include/core_cm0.h **** 
 324:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 325:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 326:Drivers/CMSIS/Include/core_cm0.h **** 
 327:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 328:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 329:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 22


 330:Drivers/CMSIS/Include/core_cm0.h **** 
 331:Drivers/CMSIS/Include/core_cm0.h **** /**
 332:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 333:Drivers/CMSIS/Include/core_cm0.h ****  */
 334:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 335:Drivers/CMSIS/Include/core_cm0.h **** {
 336:Drivers/CMSIS/Include/core_cm0.h ****   struct
 337:Drivers/CMSIS/Include/core_cm0.h ****   {
 338:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 339:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 340:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 341:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 342:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 343:Drivers/CMSIS/Include/core_cm0.h **** } CONTROL_Type;
 344:Drivers/CMSIS/Include/core_cm0.h **** 
 345:Drivers/CMSIS/Include/core_cm0.h **** /* CONTROL Register Definitions */
 346:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 347:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 348:Drivers/CMSIS/Include/core_cm0.h **** 
 349:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CORE */
 350:Drivers/CMSIS/Include/core_cm0.h **** 
 351:Drivers/CMSIS/Include/core_cm0.h **** 
 352:Drivers/CMSIS/Include/core_cm0.h **** /**
 353:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 354:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 355:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 356:Drivers/CMSIS/Include/core_cm0.h ****   @{
 357:Drivers/CMSIS/Include/core_cm0.h ****  */
 358:Drivers/CMSIS/Include/core_cm0.h **** 
 359:Drivers/CMSIS/Include/core_cm0.h **** /**
 360:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 361:Drivers/CMSIS/Include/core_cm0.h ****  */
 362:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 363:Drivers/CMSIS/Include/core_cm0.h **** {
 364:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 365:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0[31U];
 366:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 367:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RSERVED1[31U];
 368:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 369:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED2[31U];
 370:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 371:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED3[31U];
 372:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED4[64U];
 373:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 374:Drivers/CMSIS/Include/core_cm0.h **** }  NVIC_Type;
 375:Drivers/CMSIS/Include/core_cm0.h **** 
 376:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_NVIC */
 377:Drivers/CMSIS/Include/core_cm0.h **** 
 378:Drivers/CMSIS/Include/core_cm0.h **** 
 379:Drivers/CMSIS/Include/core_cm0.h **** /**
 380:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 381:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 382:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 383:Drivers/CMSIS/Include/core_cm0.h ****   @{
 384:Drivers/CMSIS/Include/core_cm0.h ****  */
 385:Drivers/CMSIS/Include/core_cm0.h **** 
 386:Drivers/CMSIS/Include/core_cm0.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 23


 387:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 388:Drivers/CMSIS/Include/core_cm0.h ****  */
 389:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 390:Drivers/CMSIS/Include/core_cm0.h **** {
 391:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 392:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 393:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0;
 394:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 395:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 396:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 397:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED1;
 398:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 399:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 400:Drivers/CMSIS/Include/core_cm0.h **** } SCB_Type;
 401:Drivers/CMSIS/Include/core_cm0.h **** 
 402:Drivers/CMSIS/Include/core_cm0.h **** /* SCB CPUID Register Definitions */
 403:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 405:Drivers/CMSIS/Include/core_cm0.h **** 
 406:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 408:Drivers/CMSIS/Include/core_cm0.h **** 
 409:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 411:Drivers/CMSIS/Include/core_cm0.h **** 
 412:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 414:Drivers/CMSIS/Include/core_cm0.h **** 
 415:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 416:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm0.h **** 
 418:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 419:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 421:Drivers/CMSIS/Include/core_cm0.h **** 
 422:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 424:Drivers/CMSIS/Include/core_cm0.h **** 
 425:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0.h **** 
 428:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0.h **** 
 431:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 432:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0.h **** 
 434:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 435:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 436:Drivers/CMSIS/Include/core_cm0.h **** 
 437:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 438:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 439:Drivers/CMSIS/Include/core_cm0.h **** 
 440:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 441:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 442:Drivers/CMSIS/Include/core_cm0.h **** 
 443:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 24


 444:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm0.h **** 
 446:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 447:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 448:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 449:Drivers/CMSIS/Include/core_cm0.h **** 
 450:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 451:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 452:Drivers/CMSIS/Include/core_cm0.h **** 
 453:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 454:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 455:Drivers/CMSIS/Include/core_cm0.h **** 
 456:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 457:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 458:Drivers/CMSIS/Include/core_cm0.h **** 
 459:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 461:Drivers/CMSIS/Include/core_cm0.h **** 
 462:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Control Register Definitions */
 463:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 465:Drivers/CMSIS/Include/core_cm0.h **** 
 466:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 468:Drivers/CMSIS/Include/core_cm0.h **** 
 469:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 471:Drivers/CMSIS/Include/core_cm0.h **** 
 472:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 473:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 474:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm0.h **** 
 476:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 477:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm0.h **** 
 479:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 480:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm0.h **** 
 483:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SCB */
 484:Drivers/CMSIS/Include/core_cm0.h **** 
 485:Drivers/CMSIS/Include/core_cm0.h **** 
 486:Drivers/CMSIS/Include/core_cm0.h **** /**
 487:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 488:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 489:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 490:Drivers/CMSIS/Include/core_cm0.h ****   @{
 491:Drivers/CMSIS/Include/core_cm0.h ****  */
 492:Drivers/CMSIS/Include/core_cm0.h **** 
 493:Drivers/CMSIS/Include/core_cm0.h **** /**
 494:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 495:Drivers/CMSIS/Include/core_cm0.h ****  */
 496:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 497:Drivers/CMSIS/Include/core_cm0.h **** {
 498:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 499:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 500:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 25


 501:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 502:Drivers/CMSIS/Include/core_cm0.h **** } SysTick_Type;
 503:Drivers/CMSIS/Include/core_cm0.h **** 
 504:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 505:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 506:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 507:Drivers/CMSIS/Include/core_cm0.h **** 
 508:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 509:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 510:Drivers/CMSIS/Include/core_cm0.h **** 
 511:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 512:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 513:Drivers/CMSIS/Include/core_cm0.h **** 
 514:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 515:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 516:Drivers/CMSIS/Include/core_cm0.h **** 
 517:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Reload Register Definitions */
 518:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 519:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 520:Drivers/CMSIS/Include/core_cm0.h **** 
 521:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Current Register Definitions */
 522:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 523:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 524:Drivers/CMSIS/Include/core_cm0.h **** 
 525:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Calibration Register Definitions */
 526:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 527:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 528:Drivers/CMSIS/Include/core_cm0.h **** 
 529:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 530:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 531:Drivers/CMSIS/Include/core_cm0.h **** 
 532:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 533:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 534:Drivers/CMSIS/Include/core_cm0.h **** 
 535:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SysTick */
 536:Drivers/CMSIS/Include/core_cm0.h **** 
 537:Drivers/CMSIS/Include/core_cm0.h **** 
 538:Drivers/CMSIS/Include/core_cm0.h **** /**
 539:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 540:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 541:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 542:Drivers/CMSIS/Include/core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 543:Drivers/CMSIS/Include/core_cm0.h ****   @{
 544:Drivers/CMSIS/Include/core_cm0.h ****  */
 545:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 546:Drivers/CMSIS/Include/core_cm0.h **** 
 547:Drivers/CMSIS/Include/core_cm0.h **** 
 548:Drivers/CMSIS/Include/core_cm0.h **** /**
 549:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 550:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 551:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 552:Drivers/CMSIS/Include/core_cm0.h ****   @{
 553:Drivers/CMSIS/Include/core_cm0.h ****  */
 554:Drivers/CMSIS/Include/core_cm0.h **** 
 555:Drivers/CMSIS/Include/core_cm0.h **** /**
 556:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 557:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 26


 558:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of the bit field.
 559:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted value.
 560:Drivers/CMSIS/Include/core_cm0.h **** */
 561:Drivers/CMSIS/Include/core_cm0.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
 562:Drivers/CMSIS/Include/core_cm0.h **** 
 563:Drivers/CMSIS/Include/core_cm0.h **** /**
 564:Drivers/CMSIS/Include/core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 565:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 566:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of register.
 567:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted bit field value.
 568:Drivers/CMSIS/Include/core_cm0.h **** */
 569:Drivers/CMSIS/Include/core_cm0.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
 570:Drivers/CMSIS/Include/core_cm0.h **** 
 571:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 572:Drivers/CMSIS/Include/core_cm0.h **** 
 573:Drivers/CMSIS/Include/core_cm0.h **** 
 574:Drivers/CMSIS/Include/core_cm0.h **** /**
 575:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 576:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 577:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 578:Drivers/CMSIS/Include/core_cm0.h ****   @{
 579:Drivers/CMSIS/Include/core_cm0.h ****  */
 580:Drivers/CMSIS/Include/core_cm0.h **** 
 581:Drivers/CMSIS/Include/core_cm0.h **** /* Memory mapping of Cortex-M0 Hardware */
 582:Drivers/CMSIS/Include/core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 583:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 584:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 585:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 586:Drivers/CMSIS/Include/core_cm0.h **** 
 587:Drivers/CMSIS/Include/core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 588:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 589:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 590:Drivers/CMSIS/Include/core_cm0.h **** 
 591:Drivers/CMSIS/Include/core_cm0.h **** 
 592:Drivers/CMSIS/Include/core_cm0.h **** /*@} */
 593:Drivers/CMSIS/Include/core_cm0.h **** 
 594:Drivers/CMSIS/Include/core_cm0.h **** 
 595:Drivers/CMSIS/Include/core_cm0.h **** 
 596:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 597:Drivers/CMSIS/Include/core_cm0.h ****  *                Hardware Abstraction Layer
 598:Drivers/CMSIS/Include/core_cm0.h ****   Core Function Interface contains:
 599:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Functions
 600:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Functions
 601:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register Access Functions
 602:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 603:Drivers/CMSIS/Include/core_cm0.h **** /**
 604:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 605:Drivers/CMSIS/Include/core_cm0.h **** */
 606:Drivers/CMSIS/Include/core_cm0.h **** 
 607:Drivers/CMSIS/Include/core_cm0.h **** 
 608:Drivers/CMSIS/Include/core_cm0.h **** 
 609:Drivers/CMSIS/Include/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 610:Drivers/CMSIS/Include/core_cm0.h **** /**
 611:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 612:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 613:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 614:Drivers/CMSIS/Include/core_cm0.h ****   @{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 27


 615:Drivers/CMSIS/Include/core_cm0.h ****  */
 616:Drivers/CMSIS/Include/core_cm0.h **** 
 617:Drivers/CMSIS/Include/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
 618:Drivers/CMSIS/Include/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 619:Drivers/CMSIS/Include/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 620:Drivers/CMSIS/Include/core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 621:Drivers/CMSIS/Include/core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 622:Drivers/CMSIS/Include/core_cm0.h **** 
 623:Drivers/CMSIS/Include/core_cm0.h **** 
 624:Drivers/CMSIS/Include/core_cm0.h **** /**
 625:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Enable External Interrupt
 626:Drivers/CMSIS/Include/core_cm0.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
 627:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 628:Drivers/CMSIS/Include/core_cm0.h ****  */
 629:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 630:Drivers/CMSIS/Include/core_cm0.h **** {
 631:Drivers/CMSIS/Include/core_cm0.h ****   NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 632:Drivers/CMSIS/Include/core_cm0.h **** }
 633:Drivers/CMSIS/Include/core_cm0.h **** 
 634:Drivers/CMSIS/Include/core_cm0.h **** 
 635:Drivers/CMSIS/Include/core_cm0.h **** /**
 636:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Disable External Interrupt
 637:Drivers/CMSIS/Include/core_cm0.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
 638:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 639:Drivers/CMSIS/Include/core_cm0.h ****  */
 640:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
 641:Drivers/CMSIS/Include/core_cm0.h **** {
 642:Drivers/CMSIS/Include/core_cm0.h ****   NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 643:Drivers/CMSIS/Include/core_cm0.h **** }
 644:Drivers/CMSIS/Include/core_cm0.h **** 
 645:Drivers/CMSIS/Include/core_cm0.h **** 
 646:Drivers/CMSIS/Include/core_cm0.h **** /**
 647:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Pending Interrupt
 648:Drivers/CMSIS/Include/core_cm0.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
 649:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 650:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt status is not pending.
 651:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt status is pending.
 652:Drivers/CMSIS/Include/core_cm0.h ****  */
 653:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
 654:Drivers/CMSIS/Include/core_cm0.h **** {
 655:Drivers/CMSIS/Include/core_cm0.h ****   return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL
 656:Drivers/CMSIS/Include/core_cm0.h **** }
 657:Drivers/CMSIS/Include/core_cm0.h **** 
 658:Drivers/CMSIS/Include/core_cm0.h **** 
 659:Drivers/CMSIS/Include/core_cm0.h **** /**
 660:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Pending Interrupt
 661:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the pending bit of an external interrupt.
 662:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
 663:Drivers/CMSIS/Include/core_cm0.h ****  */
 664:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
 665:Drivers/CMSIS/Include/core_cm0.h **** {
 666:Drivers/CMSIS/Include/core_cm0.h ****   NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 667:Drivers/CMSIS/Include/core_cm0.h **** }
 668:Drivers/CMSIS/Include/core_cm0.h **** 
 669:Drivers/CMSIS/Include/core_cm0.h **** 
 670:Drivers/CMSIS/Include/core_cm0.h **** /**
 671:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Clear Pending Interrupt
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 28


 672:Drivers/CMSIS/Include/core_cm0.h ****   \details Clears the pending bit of an external interrupt.
 673:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 674:Drivers/CMSIS/Include/core_cm0.h ****  */
 675:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 676:Drivers/CMSIS/Include/core_cm0.h **** {
 677:Drivers/CMSIS/Include/core_cm0.h ****   NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 678:Drivers/CMSIS/Include/core_cm0.h **** }
 679:Drivers/CMSIS/Include/core_cm0.h **** 
 680:Drivers/CMSIS/Include/core_cm0.h **** 
 681:Drivers/CMSIS/Include/core_cm0.h **** /**
 682:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Interrupt Priority
 683:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the priority of an interrupt.
 684:Drivers/CMSIS/Include/core_cm0.h ****   \note    The priority cannot be set for every core interrupt.
 685:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 686:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]  priority  Priority to set.
 687:Drivers/CMSIS/Include/core_cm0.h ****  */
 688:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 689:Drivers/CMSIS/Include/core_cm0.h **** {
 690:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) < 0)
 691:Drivers/CMSIS/Include/core_cm0.h ****   {
 692:Drivers/CMSIS/Include/core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
  57              		.loc 3 692 0
  58 0014 084B     		ldr	r3, .L2+4
  59 0016 DA69     		ldr	r2, [r3, #28]
  60 0018 1202     		lsls	r2, r2, #8
  61 001a 120A     		lsrs	r2, r2, #8
  62 001c DA61     		str	r2, [r3, #28]
  63              	.LVL2:
  64              	.LBE191:
  65              	.LBE190:
  66              	.LBB192:
  67              	.LBB193:
  68 001e 196A     		ldr	r1, [r3, #32]
  69 0020 064A     		ldr	r2, .L2+8
  70 0022 0A40     		ands	r2, r1
  71 0024 1A62     		str	r2, [r3, #32]
  72              	.LVL3:
  73              	.LBE193:
  74              	.LBE192:
  75              	.LBB194:
  76              	.LBB195:
  77 0026 1A6A     		ldr	r2, [r3, #32]
  78 0028 1202     		lsls	r2, r2, #8
  79 002a 120A     		lsrs	r2, r2, #8
  80 002c 1A62     		str	r2, [r3, #32]
  81              	.LVL4:
  82              	.LBE195:
  83              	.LBE194:
 127:Src/main.c    **** 
 128:Src/main.c    ****     LL_APB1_GRP2_EnableClock(LL_APB1_GRP2_PERIPH_SYSCFG);
 129:Src/main.c    **** 
 130:Src/main.c    ****     /* System interrupt init*/
 131:Src/main.c    ****     /* SVC_IRQn interrupt configuration */
 132:Src/main.c    ****     NVIC_SetPriority(SVC_IRQn, 0);
 133:Src/main.c    ****     /* PendSV_IRQn interrupt configuration */
 134:Src/main.c    ****     NVIC_SetPriority(PendSV_IRQn, 0);
 135:Src/main.c    ****     /* SysTick_IRQn interrupt configuration */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 29


 136:Src/main.c    ****     NVIC_SetPriority(SysTick_IRQn, 0);
 137:Src/main.c    **** }
  84              		.loc 1 137 0
  85 002e 02B0     		add	sp, sp, #8
  86              		@ sp needed
  87 0030 7047     		bx	lr
  88              	.L3:
  89 0032 C046     		.align	2
  90              	.L2:
  91 0034 00100240 		.word	1073876992
  92 0038 00ED00E0 		.word	-536810240
  93 003c FFFF00FF 		.word	-16711681
  94              		.cfi_endproc
  95              	.LFE741:
  97              		.section	.text.MX_CRC_Init,"ax",%progbits
  98              		.align	2
  99              		.code	16
 100              		.thumb_func
 102              	MX_CRC_Init:
 103              	.LFB743:
 138:Src/main.c    **** 
 139:Src/main.c    **** /**
 140:Src/main.c    ****   * @brief System Clock Configuration
 141:Src/main.c    ****   * @retval None
 142:Src/main.c    ****   */
 143:Src/main.c    **** void SystemClock_Config(void)
 144:Src/main.c    **** {
 145:Src/main.c    **** 
 146:Src/main.c    ****     LL_FLASH_SetLatency(LL_FLASH_LATENCY_1);
 147:Src/main.c    **** 
 148:Src/main.c    ****     if (LL_FLASH_GetLatency() != LL_FLASH_LATENCY_1)
 149:Src/main.c    ****     {
 150:Src/main.c    ****         Error_Handler();
 151:Src/main.c    ****     }
 152:Src/main.c    ****     LL_RCC_HSI_Enable();
 153:Src/main.c    **** 
 154:Src/main.c    ****     /* Wait till HSI is ready */
 155:Src/main.c    ****     while (LL_RCC_HSI_IsReady() != 1)
 156:Src/main.c    ****     {
 157:Src/main.c    ****     }
 158:Src/main.c    ****     LL_RCC_HSI_SetCalibTrimming(16);
 159:Src/main.c    **** 
 160:Src/main.c    ****     LL_RCC_LSI_Enable();
 161:Src/main.c    **** 
 162:Src/main.c    ****     /* Wait till LSI is ready */
 163:Src/main.c    ****     while (LL_RCC_LSI_IsReady() != 1)
 164:Src/main.c    ****     {
 165:Src/main.c    ****     }
 166:Src/main.c    ****     LL_PWR_EnableBkUpAccess();
 167:Src/main.c    **** 
 168:Src/main.c    ****     LL_RCC_ForceBackupDomainReset();
 169:Src/main.c    **** 
 170:Src/main.c    ****     LL_RCC_ReleaseBackupDomainReset();
 171:Src/main.c    **** 
 172:Src/main.c    ****     LL_RCC_SetRTCClockSource(LL_RCC_RTC_CLKSOURCE_LSI);
 173:Src/main.c    **** 
 174:Src/main.c    ****     LL_RCC_EnableRTC();
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 30


 175:Src/main.c    **** 
 176:Src/main.c    ****     LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSI, LL_RCC_PLL_MUL_12, LL_RCC_PREDIV_DIV_2);
 177:Src/main.c    **** 
 178:Src/main.c    ****     LL_RCC_PLL_Enable();
 179:Src/main.c    **** 
 180:Src/main.c    ****     /* Wait till PLL is ready */
 181:Src/main.c    ****     while (LL_RCC_PLL_IsReady() != 1)
 182:Src/main.c    ****     {
 183:Src/main.c    ****     }
 184:Src/main.c    ****     LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 185:Src/main.c    **** 
 186:Src/main.c    ****     LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_1);
 187:Src/main.c    **** 
 188:Src/main.c    ****     LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 189:Src/main.c    **** 
 190:Src/main.c    ****     /* Wait till System clock is ready */
 191:Src/main.c    ****     while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL)
 192:Src/main.c    ****     {
 193:Src/main.c    ****     }
 194:Src/main.c    ****     LL_Init1msTick(48000000);
 195:Src/main.c    **** 
 196:Src/main.c    ****     LL_SYSTICK_SetClkSource(LL_SYSTICK_CLKSOURCE_HCLK);
 197:Src/main.c    **** 
 198:Src/main.c    ****     LL_SetSystemCoreClock(48000000);
 199:Src/main.c    **** 
 200:Src/main.c    ****     LL_RCC_SetUSARTClockSource(LL_RCC_USART1_CLKSOURCE_PCLK1);
 201:Src/main.c    **** 
 202:Src/main.c    ****     /* SysTick_IRQn interrupt configuration */
 203:Src/main.c    ****     NVIC_SetPriority(SysTick_IRQn, 0);
 204:Src/main.c    **** }
 205:Src/main.c    **** 
 206:Src/main.c    **** /* CRC init function */
 207:Src/main.c    **** static void MX_CRC_Init(void)
 208:Src/main.c    **** {
 104              		.loc 1 208 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109 0000 82B0     		sub	sp, sp, #8
 110              	.LCFI1:
 111              		.cfi_def_cfa_offset 8
 112              	.LVL5:
 113              	.LBB196:
 114              	.LBB197:
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 115              		.loc 2 246 0
 116 0002 0A4A     		ldr	r2, .L5
 117 0004 5169     		ldr	r1, [r2, #20]
 118 0006 4020     		movs	r0, #64
 119 0008 0143     		orrs	r1, r0
 120 000a 5161     		str	r1, [r2, #20]
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 121              		.loc 2 248 0
 122 000c 5369     		ldr	r3, [r2, #20]
 123 000e 0340     		ands	r3, r0
 124 0010 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 31


 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 125              		.loc 2 249 0
 126 0012 019B     		ldr	r3, [sp, #4]
 127              	.LVL6:
 128              	.LBE197:
 129              	.LBE196:
 130              	.LBB198:
 131              	.LBB199:
 132              		.file 4 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @file    stm32f0xx_ll_crc.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @brief   Header file of CRC LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #ifndef __STM32F0xx_LL_CRC_H
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define __STM32F0xx_LL_CRC_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #ifdef __cplusplus
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** extern "C" {
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #endif
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #include "stm32f0xx.h"
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 32


  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #if defined(CRC)
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /** @defgroup CRC_LL CRC
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /* Private macros ------------------------------------------------------------*/
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /* Exported constants --------------------------------------------------------*/
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /** @defgroup CRC_LL_Exported_Constants CRC Exported Constants
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @{
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #if  defined(CRC_PROG_POLYNOMIAL_SUPPORT)
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /** @defgroup CRC_LL_EC_POLYLENGTH Polynomial length
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @{
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_POLYLENGTH_32B              0x00000000U                              /*!< 32 bits Po
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_POLYLENGTH_16B              CRC_CR_POLYSIZE_0                        /*!< 16 bits Po
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_POLYLENGTH_8B               CRC_CR_POLYSIZE_1                        /*!< 8 bits Pol
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_POLYLENGTH_7B               (CRC_CR_POLYSIZE_1 | CRC_CR_POLYSIZE_0)  /*!< 7 bits Pol
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @}
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #endif
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /** @defgroup CRC_LL_EC_INDATA_REVERSE Input Data Reverse
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @{
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_INDATA_REVERSE_NONE         0x00000000U                              /*!< Input Data
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_INDATA_REVERSE_BYTE         CRC_CR_REV_IN_0                          /*!< Input Data
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_INDATA_REVERSE_HALFWORD     CRC_CR_REV_IN_1                          /*!< Input Data
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_INDATA_REVERSE_WORD         (CRC_CR_REV_IN_1 | CRC_CR_REV_IN_0)      /*!< Input Data
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @}
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /** @defgroup CRC_LL_EC_OUTDATA_REVERSE Output Data Reverse
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @{
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_OUTDATA_REVERSE_NONE        0x00000000U                               /*!< Output Da
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_OUTDATA_REVERSE_BIT         CRC_CR_REV_OUT                            /*!< Output Da
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @}
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #if  defined(CRC_PROG_POLYNOMIAL_SUPPORT)
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /** @defgroup CRC_LL_EC_Default_Polynomial_Value    Default CRC generating polynomial value
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @brief    Normal representation of this polynomial value is
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *           X^32 + X^26 + X^23 + X^22 + X^16 + X^12 + X^11 + X^10 +X^8 + X^7 + X^5 + X^4 + X^2 + 
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 33


 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_DEFAULT_CRC32_POLY          0x04C11DB7U                               /*!< Default C
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @}
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #endif
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /** @defgroup CRC_LL_EC_Default_InitValue    Default CRC computation initialization value
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @{
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_DEFAULT_CRC_INITVALUE       0xFFFFFFFFU                               /*!< Default C
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @}
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @}
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /* Exported macro ------------------------------------------------------------*/
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /** @defgroup CRC_LL_Exported_Macros CRC Exported Macros
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @{
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /** @defgroup CRC_LL_EM_WRITE_READ Common Write and read registers Macros
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @{
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @brief  Write a value in CRC register
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  __INSTANCE__ CRC Instance
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  __REG__ Register to be written
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  __VALUE__ Value to be written in the register
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @retval None
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @brief  Read a value in CRC register
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  __INSTANCE__ CRC Instance
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  __REG__ Register to be read
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @retval Register value
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #define LL_CRC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @}
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @}
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /* Exported functions --------------------------------------------------------*/
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /** @defgroup CRC_LL_Exported_Functions CRC Exported Functions
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @{
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 34


 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /** @defgroup CRC_LL_EF_Configuration CRC Configuration functions
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @brief  Reset the CRC calculation unit.
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @note   If Programmable Initial CRC value feature
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         is available, also set the Data Register to the value stored in the
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         CRC_INIT register, otherwise, reset Data Register to its default value.
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @rmtoll CR           RESET         LL_CRC_ResetCRCCalculationUnit
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @retval None
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** __STATIC_INLINE void LL_CRC_ResetCRCCalculationUnit(CRC_TypeDef *CRCx)
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** {
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   SET_BIT(CRCx->CR, CRC_CR_RESET);
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** }
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #if  defined(CRC_PROG_POLYNOMIAL_SUPPORT)
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @brief  Configure size of the polynomial.
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @note   This function is available only on devices supporting
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         Programmable Polynomial feature.
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @rmtoll CR           POLYSIZE      LL_CRC_SetPolynomialSize
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  PolySize This parameter can be one of the following values:
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_32B
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_16B
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_8B
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_7B
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @retval None
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** __STATIC_INLINE void LL_CRC_SetPolynomialSize(CRC_TypeDef *CRCx, uint32_t PolySize)
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** {
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   MODIFY_REG(CRCx->CR, CRC_CR_POLYSIZE, PolySize);
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** }
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @brief  Return size of the polynomial.
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @note   This function is available only on devices supporting
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         Programmable Polynomial feature.
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @rmtoll CR           POLYSIZE      LL_CRC_GetPolynomialSize
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @retval Returned value can be one of the following values:
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_32B
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_16B
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_8B
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_POLYLENGTH_7B
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** __STATIC_INLINE uint32_t LL_CRC_GetPolynomialSize(CRC_TypeDef *CRCx)
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** {
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   return (uint32_t)(READ_BIT(CRCx->CR, CRC_CR_POLYSIZE));
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** }
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** #endif
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 35


 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @brief  Configure the reversal of the bit order of the input data
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @rmtoll CR           REV_IN        LL_CRC_SetInputDataReverseMode
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  ReverseMode This parameter can be one of the following values:
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_NONE
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_BYTE
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_HALFWORD
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_WORD
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @retval None
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** __STATIC_INLINE void LL_CRC_SetInputDataReverseMode(CRC_TypeDef *CRCx, uint32_t ReverseMode)
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** {
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   MODIFY_REG(CRCx->CR, CRC_CR_REV_IN, ReverseMode);
 133              		.loc 4 232 0
 134 0014 064B     		ldr	r3, .L5+4
 135 0016 9A68     		ldr	r2, [r3, #8]
 136 0018 6021     		movs	r1, #96
 137 001a 8A43     		bics	r2, r1
 138 001c 9A60     		str	r2, [r3, #8]
 139              	.LVL7:
 140              	.LBE199:
 141              	.LBE198:
 142              	.LBB200:
 143              	.LBB201:
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** }
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @brief  Return type of reversal for input data bit order
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @rmtoll CR           REV_IN        LL_CRC_GetInputDataReverseMode
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @retval Returned value can be one of the following values:
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_NONE
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_BYTE
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_HALFWORD
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_INDATA_REVERSE_WORD
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** __STATIC_INLINE uint32_t LL_CRC_GetInputDataReverseMode(CRC_TypeDef *CRCx)
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** {
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   return (uint32_t)(READ_BIT(CRCx->CR, CRC_CR_REV_IN));
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** }
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** 
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** /**
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @brief  Configure the reversal of the bit order of the Output data
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @rmtoll CR           REV_OUT       LL_CRC_SetOutputDataReverseMode
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  CRCx CRC Instance
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @param  ReverseMode This parameter can be one of the following values:
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_OUTDATA_REVERSE_NONE
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   *         @arg @ref LL_CRC_OUTDATA_REVERSE_BIT
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   * @retval None
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   */
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** __STATIC_INLINE void LL_CRC_SetOutputDataReverseMode(CRC_TypeDef *CRCx, uint32_t ReverseMode)
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h **** {
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_crc.h ****   MODIFY_REG(CRCx->CR, CRC_CR_REV_OUT, ReverseMode);
 144              		.loc 4 261 0
 145 001e 9A68     		ldr	r2, [r3, #8]
 146 0020 2031     		adds	r1, r1, #32
 147 0022 8A43     		bics	r2, r1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 36


 148 0024 9A60     		str	r2, [r3, #8]
 149              	.LVL8:
 150              	.LBE201:
 151              	.LBE200:
 209:Src/main.c    **** 
 210:Src/main.c    ****     /* Peripheral clock enable */
 211:Src/main.c    ****     LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_CRC);
 212:Src/main.c    **** 
 213:Src/main.c    ****     LL_CRC_SetInputDataReverseMode(CRC, LL_CRC_INDATA_REVERSE_NONE);
 214:Src/main.c    **** 
 215:Src/main.c    ****     LL_CRC_SetOutputDataReverseMode(CRC, LL_CRC_OUTDATA_REVERSE_NONE);
 216:Src/main.c    **** }
 152              		.loc 1 216 0
 153 0026 02B0     		add	sp, sp, #8
 154              		@ sp needed
 155 0028 7047     		bx	lr
 156              	.L6:
 157 002a C046     		.align	2
 158              	.L5:
 159 002c 00100240 		.word	1073876992
 160 0030 00300240 		.word	1073885184
 161              		.cfi_endproc
 162              	.LFE743:
 164              		.section	.text.MX_IWDG_Init,"ax",%progbits
 165              		.align	2
 166              		.code	16
 167              		.thumb_func
 169              	MX_IWDG_Init:
 170              	.LFB744:
 217:Src/main.c    **** 
 218:Src/main.c    **** /* IWDG init function */
 219:Src/main.c    **** static void MX_IWDG_Init(void)
 220:Src/main.c    **** {
 171              		.loc 1 220 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176              	.LVL9:
 177              	.LBB202:
 178              	.LBB203:
 179              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @file    stm32f0xx_ll_iwdg.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief   Header file of IWDG LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 37


  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #ifndef __STM32F0xx_LL_IWDG_H
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define __STM32F0xx_LL_IWDG_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #ifdef __cplusplus
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** extern "C" {
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #endif
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #include "stm32f0xx.h"
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #if defined(IWDG)
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /** @defgroup IWDG_LL IWDG
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /** @defgroup IWDG_LL_Private_Constants IWDG Private Constants
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @{
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_KEY_RELOAD                 0x0000AAAAU               /*!< IWDG Reload Counter Enabl
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_KEY_ENABLE                 0x0000CCCCU               /*!< IWDG Peripheral Enable   
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_KEY_WR_ACCESS_ENABLE       0x00005555U               /*!< IWDG KR Write Access Enab
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_KEY_WR_ACCESS_DISABLE      0x00000000U               /*!< IWDG KR Write Access Disa
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @}
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 38


  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /* Private macros ------------------------------------------------------------*/
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /* Exported types ------------------------------------------------------------*/
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /* Exported constants --------------------------------------------------------*/
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /** @defgroup IWDG_LL_Exported_Constants IWDG Exported Constants
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @{
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /** @defgroup IWDG_LL_EC_GET_FLAG Get Flags Defines
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief    Flags defines which can be used with LL_IWDG_ReadReg function
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @{
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_SR_PVU                     IWDG_SR_PVU                           /*!< Watchdog pres
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_SR_RVU                     IWDG_SR_RVU                           /*!< Watchdog coun
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_SR_WVU                     IWDG_SR_WVU                           /*!< Watchdog coun
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @}
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /** @defgroup IWDG_LL_EC_PRESCALER  Prescaler Divider
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @{
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_PRESCALER_4                0x00000000U                           /*!< Divider by 4 
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_PRESCALER_8                (IWDG_PR_PR_0)                        /*!< Divider by 8 
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_PRESCALER_16               (IWDG_PR_PR_1)                        /*!< Divider by 16
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_PRESCALER_32               (IWDG_PR_PR_1 | IWDG_PR_PR_0)         /*!< Divider by 32
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_PRESCALER_64               (IWDG_PR_PR_2)                        /*!< Divider by 64
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_PRESCALER_128              (IWDG_PR_PR_2 | IWDG_PR_PR_0)         /*!< Divider by 12
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_PRESCALER_256              (IWDG_PR_PR_2 | IWDG_PR_PR_1)         /*!< Divider by 25
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @}
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @}
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /* Exported macro ------------------------------------------------------------*/
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /** @defgroup IWDG_LL_Exported_Macros IWDG Exported Macros
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @{
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /** @defgroup IWDG_LL_EM_WRITE_READ Common Write and read registers Macros
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @{
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Write a value in IWDG register
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  __INSTANCE__ IWDG Instance
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  __REG__ Register to be written
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  __VALUE__ Value to be written in the register
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval None
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 39


 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Read a value in IWDG register
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  __INSTANCE__ IWDG Instance
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  __REG__ Register to be read
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval Register value
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** #define LL_IWDG_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @}
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @}
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /* Exported functions --------------------------------------------------------*/
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /** @defgroup IWDG_LL_Exported_Functions IWDG Exported Functions
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @{
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /** @defgroup IWDG_LL_EF_Configuration Configuration
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @{
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Start the Independent Watchdog
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @note   Except if the hardware watchdog option is selected
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll KR           KEY           LL_IWDG_Enable
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval None
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE void LL_IWDG_Enable(IWDG_TypeDef *IWDGx)
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   WRITE_REG(IWDG->KR, LL_IWDG_KEY_ENABLE);
 180              		.loc 5 163 0
 181 0000 084B     		ldr	r3, .L9
 182 0002 094A     		ldr	r2, .L9+4
 183 0004 1A60     		str	r2, [r3]
 184              	.LVL10:
 185              	.LBE203:
 186              	.LBE202:
 187              	.LBB204:
 188              	.LBB205:
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Reloads IWDG counter with value defined in the reload register
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll KR           KEY           LL_IWDG_ReloadCounter
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval None
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE void LL_IWDG_ReloadCounter(IWDG_TypeDef *IWDGx)
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   WRITE_REG(IWDG->KR, LL_IWDG_KEY_RELOAD);
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 40


 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Enable write access to IWDG_PR, IWDG_RLR and IWDG_WINR registers
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll KR           KEY           LL_IWDG_EnableWriteAccess
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval None
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE void LL_IWDG_EnableWriteAccess(IWDG_TypeDef *IWDGx)
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   WRITE_REG(IWDG->KR, LL_IWDG_KEY_WR_ACCESS_ENABLE);
 189              		.loc 5 185 0
 190 0006 094A     		ldr	r2, .L9+8
 191 0008 1A60     		str	r2, [r3]
 192              	.LVL11:
 193              	.LBE205:
 194              	.LBE204:
 195              	.LBB206:
 196              	.LBB207:
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Disable write access to IWDG_PR, IWDG_RLR and IWDG_WINR registers
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll KR           KEY           LL_IWDG_DisableWriteAccess
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval None
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE void LL_IWDG_DisableWriteAccess(IWDG_TypeDef *IWDGx)
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   WRITE_REG(IWDG->KR, LL_IWDG_KEY_WR_ACCESS_DISABLE);
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Select the prescaler of the IWDG
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll PR           PR            LL_IWDG_SetPrescaler
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  Prescaler This parameter can be one of the following values:
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_4
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_8
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_16
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_32
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_64
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_128
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_256
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval None
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE void LL_IWDG_SetPrescaler(IWDG_TypeDef *IWDGx, uint32_t Prescaler)
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   WRITE_REG(IWDGx->PR, IWDG_PR_PR & Prescaler);
 197              		.loc 5 215 0
 198 000a 0022     		movs	r2, #0
 199 000c 5A60     		str	r2, [r3, #4]
 200              	.LVL12:
 201              	.LBE207:
 202              	.LBE206:
 203              	.LBB208:
 204              	.LBB209:
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 41


 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Get the selected prescaler of the IWDG
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll PR           PR            LL_IWDG_GetPrescaler
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval Returned value can be one of the following values:
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_4
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_8
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_16
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_32
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_64
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_128
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         @arg @ref LL_IWDG_PRESCALER_256
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE uint32_t LL_IWDG_GetPrescaler(IWDG_TypeDef *IWDGx)
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   return (uint32_t)(READ_REG(IWDGx->PR));
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Specify the IWDG down-counter reload value
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll RLR          RL            LL_IWDG_SetReloadCounter
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  Counter Value between Min_Data=0 and Max_Data=0x0FFF
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval None
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE void LL_IWDG_SetReloadCounter(IWDG_TypeDef *IWDGx, uint32_t Counter)
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   WRITE_REG(IWDGx->RLR, IWDG_RLR_RL & Counter);
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Get the specified IWDG down-counter reload value
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll RLR          RL            LL_IWDG_GetReloadCounter
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval Value between Min_Data=0 and Max_Data=0x0FFF
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE uint32_t LL_IWDG_GetReloadCounter(IWDG_TypeDef *IWDGx)
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   return (uint32_t)(READ_REG(IWDGx->RLR));
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Specify high limit of the window value to be compared to the down-counter.
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll WINR         WIN           LL_IWDG_SetWindow
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  Window Value between Min_Data=0 and Max_Data=0x0FFF
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval None
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE void LL_IWDG_SetWindow(IWDG_TypeDef *IWDGx, uint32_t Window)
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   WRITE_REG(IWDGx->WINR, IWDG_WINR_WIN & Window);
 205              		.loc 5 268 0
 206 000e 084A     		ldr	r2, .L9+12
 207 0010 1A61     		str	r2, [r3, #16]
 208              	.LVL13:
 209              	.LBE209:
 210              	.LBE208:
 211              	.LBB210:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 42


 212              	.LBB211:
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 213              		.loc 5 245 0
 214 0012 9A60     		str	r2, [r3, #8]
 215              	.L8:
 216              	.LVL14:
 217              	.LBE211:
 218              	.LBE210:
 219              	.LBB212:
 220              	.LBB213:
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Get the high limit of the window value specified.
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll WINR         WIN           LL_IWDG_GetWindow
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval Value between Min_Data=0 and Max_Data=0x0FFF
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE uint32_t LL_IWDG_GetWindow(IWDG_TypeDef *IWDGx)
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   return (uint32_t)(READ_REG(IWDGx->WINR));
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @}
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /** @defgroup IWDG_LL_EF_FLAG_Management FLAG_Management
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @{
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Check if flag Prescaler Value Update is set or not
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll SR           PVU           LL_IWDG_IsActiveFlag_PVU
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval State of bit (1 or 0).
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE uint32_t LL_IWDG_IsActiveFlag_PVU(IWDG_TypeDef *IWDGx)
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   return (READ_BIT(IWDGx->SR, IWDG_SR_PVU) == (IWDG_SR_PVU));
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Check if flag Reload Value Update is set or not
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll SR           RVU           LL_IWDG_IsActiveFlag_RVU
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval State of bit (1 or 0).
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE uint32_t LL_IWDG_IsActiveFlag_RVU(IWDG_TypeDef *IWDGx)
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   return (READ_BIT(IWDGx->SR, IWDG_SR_RVU) == (IWDG_SR_RVU));
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Check if flag Window Value Update is set or not
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll SR           WVU           LL_IWDG_IsActiveFlag_WVU
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 43


 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval State of bit (1 or 0).
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE uint32_t LL_IWDG_IsActiveFlag_WVU(IWDG_TypeDef *IWDGx)
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   return (READ_BIT(IWDGx->SR, IWDG_SR_WVU) == (IWDG_SR_WVU));
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** 
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** /**
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @brief  Check if all flags Prescaler, Reload & Window Value Update are reset or not
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @rmtoll SR           PVU           LL_IWDG_IsReady\n
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         SR           WVU           LL_IWDG_IsReady\n
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   *         SR           RVU           LL_IWDG_IsReady
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @param  IWDGx IWDG Instance
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   * @retval State of bits (1 or 0).
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   */
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** __STATIC_INLINE uint32_t LL_IWDG_IsReady(IWDG_TypeDef *IWDGx)
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** {
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h ****   return (READ_BIT(IWDGx->SR, IWDG_SR_PVU | IWDG_SR_RVU | IWDG_SR_WVU) == 0U);
 221              		.loc 5 333 0 discriminator 1
 222 0014 034B     		ldr	r3, .L9
 223 0016 DB68     		ldr	r3, [r3, #12]
 224              	.LVL15:
 225              	.LBE213:
 226              	.LBE212:
 221:Src/main.c    **** 
 222:Src/main.c    ****     LL_IWDG_Enable(IWDG);
 223:Src/main.c    **** 
 224:Src/main.c    ****     LL_IWDG_EnableWriteAccess(IWDG);
 225:Src/main.c    **** 
 226:Src/main.c    ****     LL_IWDG_SetPrescaler(IWDG, LL_IWDG_PRESCALER_4);
 227:Src/main.c    **** 
 228:Src/main.c    ****     LL_IWDG_SetWindow(IWDG, 4095);
 229:Src/main.c    **** 
 230:Src/main.c    ****     LL_IWDG_SetReloadCounter(IWDG, 4095);
 231:Src/main.c    **** 
 232:Src/main.c    ****     while (LL_IWDG_IsReady(IWDG) != 1)
 227              		.loc 1 232 0 discriminator 1
 228 0018 5B07     		lsls	r3, r3, #29
 229 001a FBD1     		bne	.L8
 230              	.LVL16:
 231              	.LBB214:
 232              	.LBB215:
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_iwdg.h **** }
 233              		.loc 5 174 0
 234 001c 054A     		ldr	r2, .L9+16
 235 001e 014B     		ldr	r3, .L9
 236 0020 1A60     		str	r2, [r3]
 237              	.LVL17:
 238              	.LBE215:
 239              	.LBE214:
 233:Src/main.c    ****     {
 234:Src/main.c    ****     }
 235:Src/main.c    **** 
 236:Src/main.c    ****     LL_IWDG_ReloadCounter(IWDG);
 237:Src/main.c    **** }
 240              		.loc 1 237 0
 241              		@ sp needed
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 44


 242 0022 7047     		bx	lr
 243              	.L10:
 244              		.align	2
 245              	.L9:
 246 0024 00300040 		.word	1073754112
 247 0028 CCCC0000 		.word	52428
 248 002c 55550000 		.word	21845
 249 0030 FF0F0000 		.word	4095
 250 0034 AAAA0000 		.word	43690
 251              		.cfi_endproc
 252              	.LFE744:
 254              		.section	.text.MX_WWDG_Init,"ax",%progbits
 255              		.align	2
 256              		.code	16
 257              		.thumb_func
 259              	MX_WWDG_Init:
 260              	.LFB748:
 238:Src/main.c    **** 
 239:Src/main.c    **** /* RTC init function */
 240:Src/main.c    **** static void MX_RTC_Init(void)
 241:Src/main.c    **** {
 242:Src/main.c    **** 
 243:Src/main.c    ****     LL_RTC_InitTypeDef RTC_InitStruct;
 244:Src/main.c    ****     LL_RTC_TimeTypeDef RTC_TimeStruct;
 245:Src/main.c    ****     LL_RTC_DateTypeDef RTC_DateStruct;
 246:Src/main.c    **** 
 247:Src/main.c    ****     /* Peripheral clock enable */
 248:Src/main.c    ****     LL_RCC_EnableRTC();
 249:Src/main.c    **** 
 250:Src/main.c    ****     /**Initialize RTC and set the Time and Date 
 251:Src/main.c    ****     */
 252:Src/main.c    ****     RTC_InitStruct.HourFormat = LL_RTC_HOURFORMAT_24HOUR;
 253:Src/main.c    ****     RTC_InitStruct.AsynchPrescaler = 127;
 254:Src/main.c    ****     RTC_InitStruct.SynchPrescaler = 255;
 255:Src/main.c    ****     LL_RTC_Init(RTC, &RTC_InitStruct);
 256:Src/main.c    **** 
 257:Src/main.c    ****     LL_RTC_SetAsynchPrescaler(RTC, 127);
 258:Src/main.c    **** 
 259:Src/main.c    ****     LL_RTC_SetSynchPrescaler(RTC, 255);
 260:Src/main.c    **** 
 261:Src/main.c    ****     /**Initialize RTC and set the Time and Date 
 262:Src/main.c    ****     */
 263:Src/main.c    **** 
 264:Src/main.c    ****     /*不支持BACKUP*/
 265:Src/main.c    ****     //if (LL_RTC_BAK_GetRegister(RTC, LL_RTC_BKP_DR0) != 0x32F2)
 266:Src/main.c    ****     if (1)
 267:Src/main.c    ****     {
 268:Src/main.c    **** 
 269:Src/main.c    ****         RTC_TimeStruct.Hours = 0;
 270:Src/main.c    ****         RTC_TimeStruct.Minutes = 0;
 271:Src/main.c    ****         RTC_TimeStruct.Seconds = 0;
 272:Src/main.c    ****         LL_RTC_TIME_Init(RTC, LL_RTC_FORMAT_BCD, &RTC_TimeStruct);
 273:Src/main.c    **** 
 274:Src/main.c    ****         RTC_DateStruct.WeekDay = LL_RTC_WEEKDAY_MONDAY;
 275:Src/main.c    ****         RTC_DateStruct.Month = LL_RTC_MONTH_JANUARY;
 276:Src/main.c    ****         RTC_DateStruct.Year = 0;
 277:Src/main.c    ****         LL_RTC_DATE_Init(RTC, LL_RTC_FORMAT_BCD, &RTC_DateStruct);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 45


 278:Src/main.c    **** 
 279:Src/main.c    ****         /*不支持BACKUP*/
 280:Src/main.c    ****         //LL_RTC_BAK_SetRegister(RTC, LL_RTC_BKP_DR0, 0x32F2);
 281:Src/main.c    ****     }
 282:Src/main.c    **** }
 283:Src/main.c    **** 
 284:Src/main.c    **** /* SPI1 init function */
 285:Src/main.c    **** static void MX_SPI1_Init(void)
 286:Src/main.c    **** {
 287:Src/main.c    **** 
 288:Src/main.c    ****     LL_SPI_InitTypeDef SPI_InitStruct;
 289:Src/main.c    **** 
 290:Src/main.c    ****     LL_GPIO_InitTypeDef GPIO_InitStruct;
 291:Src/main.c    **** 
 292:Src/main.c    ****     /* Peripheral clock enable */
 293:Src/main.c    ****     LL_APB1_GRP2_EnableClock(LL_APB1_GRP2_PERIPH_SPI1);
 294:Src/main.c    **** 
 295:Src/main.c    ****     /**SPI1 GPIO Configuration  
 296:Src/main.c    ****   PA5   ------> SPI1_SCK
 297:Src/main.c    ****   PA6   ------> SPI1_MISO
 298:Src/main.c    ****   PA7   ------> SPI1_MOSI 
 299:Src/main.c    ****   */
 300:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_5;
 301:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 302:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 303:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 304:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 305:Src/main.c    ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_0;
 306:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 307:Src/main.c    **** 
 308:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_6;
 309:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 310:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 311:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 312:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 313:Src/main.c    ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_0;
 314:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 315:Src/main.c    **** 
 316:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_7;
 317:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 318:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 319:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 320:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 321:Src/main.c    ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_0;
 322:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 323:Src/main.c    **** 
 324:Src/main.c    ****     /* SPI1 DMA Init */
 325:Src/main.c    **** 
 326:Src/main.c    ****     /* SPI1_RX Init */
 327:Src/main.c    ****     LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_2, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
 328:Src/main.c    **** 
 329:Src/main.c    ****     LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PRIORITY_LOW);
 330:Src/main.c    **** 
 331:Src/main.c    ****     LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MODE_NORMAL);
 332:Src/main.c    **** 
 333:Src/main.c    ****     LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PERIPH_NOINCREMENT);
 334:Src/main.c    **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 46


 335:Src/main.c    ****     LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MEMORY_INCREMENT);
 336:Src/main.c    **** 
 337:Src/main.c    ****     LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PDATAALIGN_BYTE);
 338:Src/main.c    **** 
 339:Src/main.c    ****     LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MDATAALIGN_BYTE);
 340:Src/main.c    **** 
 341:Src/main.c    ****     /* SPI1_TX Init */
 342:Src/main.c    ****     LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_3, LL_DMA_DIRECTION_MEMORY_TO_PERIPH);
 343:Src/main.c    **** 
 344:Src/main.c    ****     LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PRIORITY_LOW);
 345:Src/main.c    **** 
 346:Src/main.c    ****     LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MODE_NORMAL);
 347:Src/main.c    **** 
 348:Src/main.c    ****     LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PERIPH_NOINCREMENT);
 349:Src/main.c    **** 
 350:Src/main.c    ****     LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MEMORY_INCREMENT);
 351:Src/main.c    **** 
 352:Src/main.c    ****     LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PDATAALIGN_BYTE);
 353:Src/main.c    **** 
 354:Src/main.c    ****     LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MDATAALIGN_BYTE);
 355:Src/main.c    **** 
 356:Src/main.c    ****     /* SPI1 parameter configuration*/
 357:Src/main.c    ****     SPI_InitStruct.TransferDirection = LL_SPI_FULL_DUPLEX;
 358:Src/main.c    ****     SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 359:Src/main.c    ****     SPI_InitStruct.DataWidth = LL_SPI_DATAWIDTH_8BIT;
 360:Src/main.c    ****     SPI_InitStruct.ClockPolarity = LL_SPI_POLARITY_HIGH;
 361:Src/main.c    ****     SPI_InitStruct.ClockPhase = LL_SPI_PHASE_2EDGE;
 362:Src/main.c    ****     SPI_InitStruct.NSS = LL_SPI_NSS_SOFT;
 363:Src/main.c    ****     SPI_InitStruct.BaudRate = LL_SPI_BAUDRATEPRESCALER_DIV4;
 364:Src/main.c    ****     SPI_InitStruct.BitOrder = LL_SPI_MSB_FIRST;
 365:Src/main.c    ****     SPI_InitStruct.CRCCalculation = LL_SPI_CRCCALCULATION_DISABLE;
 366:Src/main.c    ****     SPI_InitStruct.CRCPoly = 7;
 367:Src/main.c    ****     LL_SPI_Init(SPI1, &SPI_InitStruct);
 368:Src/main.c    **** 
 369:Src/main.c    ****     LL_SPI_SetStandard(SPI1, LL_SPI_PROTOCOL_MOTOROLA);
 370:Src/main.c    **** 
 371:Src/main.c    ****     LL_SPI_DisableNSSPulseMgt(SPI1);
 372:Src/main.c    **** }
 373:Src/main.c    **** 
 374:Src/main.c    **** /* USART1 init function */
 375:Src/main.c    **** static void MX_USART1_UART_Init(void)
 376:Src/main.c    **** {
 377:Src/main.c    **** 
 378:Src/main.c    ****     LL_USART_InitTypeDef USART_InitStruct;
 379:Src/main.c    **** 
 380:Src/main.c    ****     LL_GPIO_InitTypeDef GPIO_InitStruct;
 381:Src/main.c    **** 
 382:Src/main.c    ****     /* Peripheral clock enable */
 383:Src/main.c    ****     LL_APB1_GRP2_EnableClock(LL_APB1_GRP2_PERIPH_USART1);
 384:Src/main.c    **** 
 385:Src/main.c    ****     /**USART1 GPIO Configuration  
 386:Src/main.c    ****   PA9   ------> USART1_TX
 387:Src/main.c    ****   PA10   ------> USART1_RX 
 388:Src/main.c    ****   */
 389:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_9;
 390:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 391:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 47


 392:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 393:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 394:Src/main.c    ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 395:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 396:Src/main.c    **** 
 397:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_10;
 398:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 399:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 400:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 401:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 402:Src/main.c    ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 403:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 404:Src/main.c    **** 
 405:Src/main.c    ****     /* USART1 DMA Init */
 406:Src/main.c    **** 
 407:Src/main.c    ****     /* USART1_RX Init */
 408:Src/main.c    ****     LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_5, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
 409:Src/main.c    **** 
 410:Src/main.c    ****     LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_5, LL_DMA_PRIORITY_LOW);
 411:Src/main.c    **** 
 412:Src/main.c    ****     LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_5, LL_DMA_MODE_NORMAL);
 413:Src/main.c    **** 
 414:Src/main.c    ****     LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_5, LL_DMA_PERIPH_NOINCREMENT);
 415:Src/main.c    **** 
 416:Src/main.c    ****     LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_5, LL_DMA_MEMORY_INCREMENT);
 417:Src/main.c    **** 
 418:Src/main.c    ****     LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_5, LL_DMA_PDATAALIGN_BYTE);
 419:Src/main.c    **** 
 420:Src/main.c    ****     LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_5, LL_DMA_MDATAALIGN_BYTE);
 421:Src/main.c    **** 
 422:Src/main.c    ****     LL_SYSCFG_SetRemapDMA_USART(LL_SYSCFG_USART1RX_RMP_DMA1CH5);
 423:Src/main.c    **** 
 424:Src/main.c    ****     /* USART1 interrupt Init */
 425:Src/main.c    ****     NVIC_SetPriority(USART1_IRQn, 0);
 426:Src/main.c    ****     NVIC_EnableIRQ(USART1_IRQn);
 427:Src/main.c    **** 
 428:Src/main.c    ****     USART_InitStruct.BaudRate = 38400;
 429:Src/main.c    ****     USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_9B;
 430:Src/main.c    ****     USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 431:Src/main.c    ****     USART_InitStruct.Parity = LL_USART_PARITY_EVEN;
 432:Src/main.c    ****     USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 433:Src/main.c    ****     USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 434:Src/main.c    ****     USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 435:Src/main.c    ****     LL_USART_Init(USART1, &USART_InitStruct);
 436:Src/main.c    **** 
 437:Src/main.c    ****     LL_USART_DisableIT_CTS(USART1);
 438:Src/main.c    **** 
 439:Src/main.c    ****     LL_USART_EnableOverrunDetect(USART1);
 440:Src/main.c    **** 
 441:Src/main.c    ****     LL_USART_EnableDMADeactOnRxErr(USART1);
 442:Src/main.c    **** 
 443:Src/main.c    ****     LL_USART_ConfigAsyncMode(USART1);
 444:Src/main.c    **** 
 445:Src/main.c    ****     LL_USART_Enable(USART1);
 446:Src/main.c    **** }
 447:Src/main.c    **** 
 448:Src/main.c    **** /* WWDG init function */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 48


 449:Src/main.c    **** static void MX_WWDG_Init(void)
 450:Src/main.c    **** {
 261              		.loc 1 450 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 8
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 10B5     		push	{r4, lr}
 266              	.LCFI2:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 4, -8
 269              		.cfi_offset 14, -4
 270 0002 82B0     		sub	sp, sp, #8
 271              	.LCFI3:
 272              		.cfi_def_cfa_offset 16
 273              	.LVL18:
 274              	.LBB216:
 275              	.LBB217:
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 276              		.loc 2 434 0
 277 0004 0F4A     		ldr	r2, .L12
 278 0006 D169     		ldr	r1, [r2, #28]
 279 0008 8023     		movs	r3, #128
 280 000a 1B01     		lsls	r3, r3, #4
 281 000c 1943     		orrs	r1, r3
 282 000e D161     		str	r1, [r2, #28]
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 283              		.loc 2 436 0
 284 0010 D269     		ldr	r2, [r2, #28]
 285 0012 1340     		ands	r3, r2
 286 0014 0193     		str	r3, [sp, #4]
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 287              		.loc 2 437 0
 288 0016 019B     		ldr	r3, [sp, #4]
 289              	.LVL19:
 290              	.LBE217:
 291              	.LBE216:
 292              	.LBB218:
 293              	.LBB219:
 294              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @file    stm32f0xx_ll_wwdg.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @brief   Header file of WWDG LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 49


  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #ifndef __STM32F0xx_LL_WWDG_H
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #define __STM32F0xx_LL_WWDG_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #ifdef __cplusplus
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** extern "C" {
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #endif
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #include "stm32f0xx.h"
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #if defined (WWDG)
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /** @defgroup WWDG_LL WWDG
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /* Private macros ------------------------------------------------------------*/
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /* Exported types ------------------------------------------------------------*/
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /* Exported constants --------------------------------------------------------*/
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /** @defgroup WWDG_LL_Exported_Constants WWDG Exported Constants
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @{
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /** @defgroup WWDG_LL_EC_IT IT Defines
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @brief    IT defines which can be used with LL_WWDG_ReadReg and  LL_WWDG_WriteReg functions
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @{
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #define LL_WWDG_CFR_EWI                    WWDG_CFR_EWI
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 50


  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @}
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /** @defgroup WWDG_LL_EC_PRESCALER  PRESCALER
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** * @{
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** */
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #define LL_WWDG_PRESCALER_1                0x00000000U                                             
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #define LL_WWDG_PRESCALER_2                WWDG_CFR_WDGTB_0                                        
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #define LL_WWDG_PRESCALER_4                WWDG_CFR_WDGTB_1                                        
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #define LL_WWDG_PRESCALER_8                (WWDG_CFR_WDGTB_0 | WWDG_CFR_WDGTB_1)                   
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @}
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @}
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /* Exported macro ------------------------------------------------------------*/
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /** @defgroup WWDG_LL_Exported_Macros WWDG Exported Macros
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @{
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /** @defgroup WWDG_LL_EM_WRITE_READ Common Write and read registers macros
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @{
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @brief  Write a value in WWDG register
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  __INSTANCE__ WWDG Instance
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  __REG__ Register to be written
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  __VALUE__ Value to be written in the register
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @retval None
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #define LL_WWDG_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @brief  Read a value in WWDG register
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  __INSTANCE__ WWDG Instance
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  __REG__ Register to be read
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @retval Register value
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** #define LL_WWDG_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @}
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @}
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /* Exported functions --------------------------------------------------------*/
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /** @defgroup WWDG_LL_Exported_Functions WWDG Exported Functions
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @{
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /** @defgroup WWDG_LL_EF_Configuration Configuration
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 51


 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @{
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @brief  Enable Window Watchdog. The watchdog is always disabled after a reset.
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @note   It is enabled by setting the WDGA bit in the WWDG_CR register,
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         then it cannot be disabled again except by a reset.
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         This bit is set by software and only cleared by hardware after a reset.
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         When WDGA = 1, the watchdog can generate a reset.
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @rmtoll CR           WDGA          LL_WWDG_Enable
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  WWDGx WWDG Instance
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @retval None
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** __STATIC_INLINE void LL_WWDG_Enable(WWDG_TypeDef *WWDGx)
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** {
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   SET_BIT(WWDGx->CR, WWDG_CR_WDGA);
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** }
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @brief  Checks if Window Watchdog is enabled
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @rmtoll CR           WDGA          LL_WWDG_IsEnabled
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  WWDGx WWDG Instance
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @retval State of bit (1 or 0).
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** __STATIC_INLINE uint32_t LL_WWDG_IsEnabled(WWDG_TypeDef *WWDGx)
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** {
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   return (READ_BIT(WWDGx->CR, WWDG_CR_WDGA) == (WWDG_CR_WDGA));
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** }
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @brief  Set the Watchdog counter value to provided value (7-bits T[6:0])
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @note   When writing to the WWDG_CR register, always write 1 in the MSB b6 to avoid generating 
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         This counter is decremented every (4096 x 2expWDGTB) PCLK cycles
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         A reset is produced when it rolls over from 0x40 to 0x3F (bit T6 becomes cleared)
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         Setting the counter lower then 0x40 causes an immediate reset (if WWDG enabled)
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @rmtoll CR           T             LL_WWDG_SetCounter
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  WWDGx WWDG Instance
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  Counter 0..0x7F (7 bit counter value)
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @retval None
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** __STATIC_INLINE void LL_WWDG_SetCounter(WWDG_TypeDef *WWDGx, uint32_t Counter)
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** {
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   MODIFY_REG(WWDGx->CR, WWDG_CR_T, Counter);
 295              		.loc 6 174 0
 296 0018 0B4B     		ldr	r3, .L12+4
 297 001a 1A68     		ldr	r2, [r3]
 298 001c 7F20     		movs	r0, #127
 299 001e 8243     		bics	r2, r0
 300 0020 4021     		movs	r1, #64
 301 0022 0A43     		orrs	r2, r1
 302 0024 1A60     		str	r2, [r3]
 303              	.LVL20:
 304              	.LBE219:
 305              	.LBE218:
 306              	.LBB220:
 307              	.LBB221:
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** }
 308              		.loc 6 147 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 52


 309 0026 1C68     		ldr	r4, [r3]
 310 0028 8022     		movs	r2, #128
 311 002a 2243     		orrs	r2, r4
 312 002c 1A60     		str	r2, [r3]
 313              	.LVL21:
 314              	.LBE221:
 315              	.LBE220:
 316              	.LBB222:
 317              	.LBB223:
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** }
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @brief  Return current Watchdog Counter Value (7 bits counter value)
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @rmtoll CR           T             LL_WWDG_GetCounter
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  WWDGx WWDG Instance
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @retval 7 bit Watchdog Counter value
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** __STATIC_INLINE uint32_t LL_WWDG_GetCounter(WWDG_TypeDef *WWDGx)
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** {
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   return (uint32_t)(READ_BIT(WWDGx->CR, WWDG_CR_T));
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** }
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @brief  Set the time base of the prescaler (WDGTB).
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @note   Prescaler is used to apply ratio on PCLK clock, so that Watchdog counter
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         is decremented every (4096 x 2expWDGTB) PCLK cycles
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @rmtoll CFR          WDGTB         LL_WWDG_SetPrescaler
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  WWDGx WWDG Instance
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  Prescaler This parameter can be one of the following values:
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         @arg @ref LL_WWDG_PRESCALER_1
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         @arg @ref LL_WWDG_PRESCALER_2
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         @arg @ref LL_WWDG_PRESCALER_4
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         @arg @ref LL_WWDG_PRESCALER_8
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @retval None
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** __STATIC_INLINE void LL_WWDG_SetPrescaler(WWDG_TypeDef *WWDGx, uint32_t Prescaler)
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** {
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   MODIFY_REG(WWDGx->CFR, WWDG_CFR_WDGTB, Prescaler);
 318              		.loc 6 203 0
 319 002e 5C68     		ldr	r4, [r3, #4]
 320 0030 064A     		ldr	r2, .L12+8
 321 0032 2240     		ands	r2, r4
 322 0034 5A60     		str	r2, [r3, #4]
 323              	.LVL22:
 324              	.LBE223:
 325              	.LBE222:
 326              	.LBB224:
 327              	.LBB225:
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** }
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @brief  Return current Watchdog Prescaler Value
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @rmtoll CFR          WDGTB         LL_WWDG_GetPrescaler
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  WWDGx WWDG Instance
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @retval Returned value can be one of the following values:
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         @arg @ref LL_WWDG_PRESCALER_1
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         @arg @ref LL_WWDG_PRESCALER_2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 53


 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         @arg @ref LL_WWDG_PRESCALER_4
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         @arg @ref LL_WWDG_PRESCALER_8
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** __STATIC_INLINE uint32_t LL_WWDG_GetPrescaler(WWDG_TypeDef *WWDGx)
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** {
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   return (uint32_t)(READ_BIT(WWDGx->CFR, WWDG_CFR_WDGTB));
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** }
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** 
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** /**
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @brief  Set the Watchdog Window value to be compared to the downcounter (7-bits W[6:0]).
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @note   This window value defines when write in the WWDG_CR register
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         to program Watchdog counter is allowed.
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         Watchdog counter value update must occur only when the counter value
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         is lower than the Watchdog window register value.
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         Otherwise, a MCU reset is generated if the 7-bit Watchdog counter value
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         (in the control register) is refreshed before the downcounter has reached
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         the watchdog window register value.
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         Physically is possible to set the Window lower then 0x40 but it is not recommended.
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   *         To generate an immediate reset, it is possible to set the Counter lower than 0x40.
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @rmtoll CFR          W             LL_WWDG_SetWindow
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  WWDGx WWDG Instance
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @param  Window 0x00..0x7F (7 bit Window value)
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   * @retval None
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   */
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** __STATIC_INLINE void LL_WWDG_SetWindow(WWDG_TypeDef *WWDGx, uint32_t Window)
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h **** {
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_wwdg.h ****   MODIFY_REG(WWDGx->CFR, WWDG_CFR_W, Window);
 328              		.loc 6 239 0
 329 0036 5A68     		ldr	r2, [r3, #4]
 330 0038 8243     		bics	r2, r0
 331 003a 1143     		orrs	r1, r2
 332 003c 5960     		str	r1, [r3, #4]
 333              	.LVL23:
 334              	.LBE225:
 335              	.LBE224:
 451:Src/main.c    **** 
 452:Src/main.c    ****     /* Peripheral clock enable */
 453:Src/main.c    ****     LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_WWDG);
 454:Src/main.c    **** 
 455:Src/main.c    ****     LL_WWDG_SetCounter(WWDG, 64);
 456:Src/main.c    **** 
 457:Src/main.c    ****     LL_WWDG_Enable(WWDG);
 458:Src/main.c    **** 
 459:Src/main.c    ****     LL_WWDG_SetPrescaler(WWDG, LL_WWDG_PRESCALER_1);
 460:Src/main.c    **** 
 461:Src/main.c    ****     LL_WWDG_SetWindow(WWDG, 64);
 462:Src/main.c    **** }
 336              		.loc 1 462 0
 337 003e 02B0     		add	sp, sp, #8
 338              		@ sp needed
 339 0040 10BD     		pop	{r4, pc}
 340              	.L13:
 341 0042 C046     		.align	2
 342              	.L12:
 343 0044 00100240 		.word	1073876992
 344 0048 002C0040 		.word	1073753088
 345 004c 7FFEFFFF 		.word	-385
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 54


 346              		.cfi_endproc
 347              	.LFE748:
 349              		.section	.text.MX_DMA_Init,"ax",%progbits
 350              		.align	2
 351              		.code	16
 352              		.thumb_func
 354              	MX_DMA_Init:
 355              	.LFB749:
 463:Src/main.c    **** 
 464:Src/main.c    **** /** 
 465:Src/main.c    ****   * Enable DMA controller clock
 466:Src/main.c    ****   */
 467:Src/main.c    **** static void MX_DMA_Init(void)
 468:Src/main.c    **** {
 356              		.loc 1 468 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 361 0000 82B0     		sub	sp, sp, #8
 362              	.LCFI4:
 363              		.cfi_def_cfa_offset 8
 364              	.LVL24:
 365              	.LBB226:
 366              	.LBB227:
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 367              		.loc 2 246 0
 368 0002 0E4A     		ldr	r2, .L15
 369 0004 5169     		ldr	r1, [r2, #20]
 370 0006 0120     		movs	r0, #1
 371 0008 0143     		orrs	r1, r0
 372 000a 5161     		str	r1, [r2, #20]
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 373              		.loc 2 248 0
 374 000c 5369     		ldr	r3, [r2, #20]
 375 000e 0340     		ands	r3, r0
 376 0010 0193     		str	r3, [sp, #4]
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 377              		.loc 2 249 0
 378 0012 019B     		ldr	r3, [sp, #4]
 379              	.LVL25:
 380              	.LBE227:
 381              	.LBE226:
 382              	.LBB228:
 383              	.LBB229:
 693:Drivers/CMSIS/Include/core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 694:Drivers/CMSIS/Include/core_cm0.h ****   }
 695:Drivers/CMSIS/Include/core_cm0.h ****   else
 696:Drivers/CMSIS/Include/core_cm0.h ****   {
 697:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 384              		.loc 3 697 0
 385 0014 0A4B     		ldr	r3, .L15+4
 386 0016 C221     		movs	r1, #194
 387 0018 8900     		lsls	r1, r1, #2
 388 001a 5858     		ldr	r0, [r3, r1]
 389 001c 094A     		ldr	r2, .L15+8
 390 001e 0240     		ands	r2, r0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 55


 391 0020 5A50     		str	r2, [r3, r1]
 392              	.LVL26:
 393              	.LBE229:
 394              	.LBE228:
 395              	.LBB230:
 396              	.LBB231:
 631:Drivers/CMSIS/Include/core_cm0.h **** }
 397              		.loc 3 631 0
 398 0022 8022     		movs	r2, #128
 399 0024 D200     		lsls	r2, r2, #3
 400 0026 1A60     		str	r2, [r3]
 401              	.LVL27:
 402              	.LBE231:
 403              	.LBE230:
 404              	.LBB232:
 405              	.LBB233:
 406              		.loc 3 697 0
 407 0028 5A58     		ldr	r2, [r3, r1]
 408 002a 1202     		lsls	r2, r2, #8
 409 002c 120A     		lsrs	r2, r2, #8
 410 002e 5A50     		str	r2, [r3, r1]
 411              	.LVL28:
 412              	.LBE233:
 413              	.LBE232:
 414              	.LBB234:
 415              	.LBB235:
 631:Drivers/CMSIS/Include/core_cm0.h **** }
 416              		.loc 3 631 0
 417 0030 8022     		movs	r2, #128
 418 0032 1201     		lsls	r2, r2, #4
 419 0034 1A60     		str	r2, [r3]
 420              	.LVL29:
 421              	.LBE235:
 422              	.LBE234:
 469:Src/main.c    ****     /* Init with LL driver */
 470:Src/main.c    ****     /* DMA controller clock enable */
 471:Src/main.c    ****     LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_DMA1);
 472:Src/main.c    **** 
 473:Src/main.c    ****     /* DMA interrupt init */
 474:Src/main.c    ****     /* DMA1_Channel2_3_IRQn interrupt configuration */
 475:Src/main.c    ****     NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0);
 476:Src/main.c    ****     NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 477:Src/main.c    ****     /* DMA1_Channel4_5_IRQn interrupt configuration */
 478:Src/main.c    ****     NVIC_SetPriority(DMA1_Channel4_5_IRQn, 0);
 479:Src/main.c    ****     NVIC_EnableIRQ(DMA1_Channel4_5_IRQn);
 480:Src/main.c    **** }
 423              		.loc 1 480 0
 424 0036 02B0     		add	sp, sp, #8
 425              		@ sp needed
 426 0038 7047     		bx	lr
 427              	.L16:
 428 003a C046     		.align	2
 429              	.L15:
 430 003c 00100240 		.word	1073876992
 431 0040 00E100E0 		.word	-536813312
 432 0044 FFFF00FF 		.word	-16711681
 433              		.cfi_endproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 56


 434              	.LFE749:
 436              		.section	.text.MX_GPIO_Init,"ax",%progbits
 437              		.align	2
 438              		.code	16
 439              		.thumb_func
 441              	MX_GPIO_Init:
 442              	.LFB750:
 481:Src/main.c    **** 
 482:Src/main.c    **** /** Configure pins as 
 483:Src/main.c    ****         * Analog 
 484:Src/main.c    ****         * Input 
 485:Src/main.c    ****         * Output
 486:Src/main.c    ****         * EVENT_OUT
 487:Src/main.c    ****         * EXTI
 488:Src/main.c    **** */
 489:Src/main.c    **** static void MX_GPIO_Init(void)
 490:Src/main.c    **** {
 443              		.loc 1 490 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 40
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 448              	.LCFI5:
 449              		.cfi_def_cfa_offset 20
 450              		.cfi_offset 4, -20
 451              		.cfi_offset 5, -16
 452              		.cfi_offset 6, -12
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 5F46     		mov	r7, fp
 456 0004 5646     		mov	r6, r10
 457 0006 4D46     		mov	r5, r9
 458 0008 4446     		mov	r4, r8
 459 000a F0B4     		push	{r4, r5, r6, r7}
 460              	.LCFI6:
 461              		.cfi_def_cfa_offset 36
 462              		.cfi_offset 8, -36
 463              		.cfi_offset 9, -32
 464              		.cfi_offset 10, -28
 465              		.cfi_offset 11, -24
 466 000c 8BB0     		sub	sp, sp, #44
 467              	.LCFI7:
 468              		.cfi_def_cfa_offset 80
 469              	.LVL30:
 470              	.LBB236:
 471              	.LBB237:
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 472              		.loc 2 246 0
 473 000e 454B     		ldr	r3, .L18
 474 0010 5969     		ldr	r1, [r3, #20]
 475 0012 8022     		movs	r2, #128
 476 0014 D203     		lsls	r2, r2, #15
 477 0016 1143     		orrs	r1, r2
 478 0018 5961     		str	r1, [r3, #20]
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 479              		.loc 2 248 0
 480 001a 5969     		ldr	r1, [r3, #20]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 57


 481 001c 0A40     		ands	r2, r1
 482 001e 0392     		str	r2, [sp, #12]
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 483              		.loc 2 249 0
 484 0020 039A     		ldr	r2, [sp, #12]
 485              	.LVL31:
 486              	.LBE237:
 487              	.LBE236:
 488              	.LBB238:
 489              	.LBB239:
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 490              		.loc 2 246 0
 491 0022 5969     		ldr	r1, [r3, #20]
 492 0024 8022     		movs	r2, #128
 493 0026 9202     		lsls	r2, r2, #10
 494 0028 1143     		orrs	r1, r2
 495 002a 5961     		str	r1, [r3, #20]
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 496              		.loc 2 248 0
 497 002c 5969     		ldr	r1, [r3, #20]
 498 002e 0A40     		ands	r2, r1
 499 0030 0292     		str	r2, [sp, #8]
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 500              		.loc 2 249 0
 501 0032 029A     		ldr	r2, [sp, #8]
 502              	.LVL32:
 503              	.LBE239:
 504              	.LBE238:
 505              	.LBB240:
 506              	.LBB241:
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 507              		.loc 2 246 0
 508 0034 5969     		ldr	r1, [r3, #20]
 509 0036 8022     		movs	r2, #128
 510 0038 D202     		lsls	r2, r2, #11
 511 003a 1143     		orrs	r1, r2
 512 003c 5961     		str	r1, [r3, #20]
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 513              		.loc 2 248 0
 514 003e 5B69     		ldr	r3, [r3, #20]
 515 0040 1A40     		ands	r2, r3
 516 0042 0192     		str	r2, [sp, #4]
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 517              		.loc 2 249 0
 518 0044 019B     		ldr	r3, [sp, #4]
 519              	.LVL33:
 520              	.LBE241:
 521              	.LBE240:
 522              	.LBB242:
 523              	.LBB243:
 524              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @file    stm32f0xx_ll_gpio.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   ******************************************************************************
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 58


   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #ifndef __STM32F0xx_LL_GPIO_H
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define __STM32F0xx_LL_GPIO_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #ifdef __cplusplus
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** extern "C" {
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #endif
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #include "stm32f0xx.h"
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 59


  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @}
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** typedef struct
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @}
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 60


 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS_0 /*!< Select pin 0 */
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS_1 /*!< Select pin 1 */
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS_2 /*!< Select pin 2 */
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS_3 /*!< Select pin 3 */
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS_4 /*!< Select pin 4 */
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS_5 /*!< Select pin 5 */
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS_6 /*!< Select pin 6 */
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS_7 /*!< Select pin 7 */
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS_8 /*!< Select pin 8 */
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS_9 /*!< Select pin 9 */
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS_10 /*!< Select pin 10 */
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS_11 /*!< Select pin 11 */
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS_12 /*!< Select pin 12 */
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS_13 /*!< Select pin 13 */
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS_14 /*!< Select pin 14 */
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS_15 /*!< Select pin 15 */
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS_0 | GPIO_BSRR_BS_1  | GPIO_BSRR_BS_2  | \
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_3  | GPIO_BSRR_BS_4  | GPIO_BSRR_BS_5  | \
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_6  | GPIO_BSRR_BS_7  | GPIO_BSRR_BS_8  | \
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_9  | GPIO_BSRR_BS_10 | GPIO_BSRR_BS_11 | \
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_12 | GPIO_BSRR_BS_13 | GPIO_BSRR_BS_14 | \
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_15) /*!< Select all pins */
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @}
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODER0_0  /*!< Select output mode */
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODER0_1  /*!< Select alternate function mode
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODER0    /*!< Select analog mode */
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @}
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT_0 /*!< Select open-drain as output type *
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @}
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEEDR0_0 /*!< Select I/O medium output sp
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEEDR0   /*!< Select I/O high output spee
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 61


 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_HIGH
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPDR0_0 /*!< Select I/O pull up */
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPDR0_1 /*!< Select I/O pull down */
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @}
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @}
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @}
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval None
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval Register value
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 62


 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @}
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @}
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval None
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, ((Pin * Pin) * GPIO_MODER_MODER0), ((Pin * Pin) * Mode));
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 63


 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER, ((Pin * Pin) * GPIO_MODER_MODER0)) / (Pin * Pin));
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 64


 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval None
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) / Pin);
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 65


 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval None
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, ((Pin * Pin) * GPIO_OSPEEDR_OSPEEDR0), ((Pin * Pin) * Speed));
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR, ((Pin * Pin) * GPIO_OSPEEDR_OSPEEDR0)) / (Pin * Pin));
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 66


 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval None
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, ((Pin * Pin) * GPIO_PUPDR_PUPDR0), ((Pin * Pin) * Pull));
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 67


 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR, ((Pin * Pin) * GPIO_PUPDR_PUPDR0)) / (Pin * Pin));
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF7 depending on target.
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval None
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], ((((Pin * Pin) * Pin) * Pin) * GPIO_AFRL_AFSEL0),
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****              ((((Pin * Pin) * Pin) * Pin) * Alternate));
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 68


 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                              ((((Pin * Pin) * Pin) * Pin) * GPIO_AFRL_AFSEL0)) / (((Pin * Pin) * Pi
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF7 depending on target.
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval None
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (((((Pin >> 8U) * (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)) * GPIO_AFR
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****              (((((Pin >> 8U) * (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)) * Alternate));
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF7 depending on target.
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 69


 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                              (((((Pin >> 8U) * (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)) * GPIO_AF
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****                                  (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)));
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         next reset.
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         (control and alternate function registers).
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval None
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   __IO uint32_t temp;
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   (void) temp;
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 70


 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, PinMask) == (PinMask));
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK));
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @}
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @{
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval Input data register value of port
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->IDR));
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 71


 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   return (READ_BIT(GPIOx->IDR, PinMask) == (PinMask));
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Write output data register for the port.
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_WriteOutputPort
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  PortValue Level value for each pin of the port
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval None
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_WriteOutputPort(GPIO_TypeDef *GPIOx, uint32_t PortValue)
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, PortValue);
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Return full output data register value for a dedicated port.
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_ReadOutputPort
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval Output data register value of port
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadOutputPort(GPIO_TypeDef *GPIOx)
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->ODR));
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_IsOutputPinSet
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 72


 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsOutputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   return (READ_BIT(GPIOx->ODR, PinMask) == (PinMask));
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Set several pins to high level on dedicated gpio port.
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll BSRR         BSy           LL_GPIO_SetOutputPin
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval None
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   WRITE_REG(GPIOx->BSRR, PinMask);
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** 
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** /**
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @brief  Set several pins to low level on dedicated gpio port.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 73


 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @rmtoll BRR          BRy           LL_GPIO_ResetOutputPin
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   * @retval None
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   */
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** {
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h ****   WRITE_REG(GPIOx->BRR, PinMask);
 525              		.loc 7 886 0
 526 0046 9027     		movs	r7, #144
 527 0048 FF05     		lsls	r7, r7, #23
 528 004a 0125     		movs	r5, #1
 529 004c BD62     		str	r5, [r7, #40]
 530              	.LVL34:
 531              	.LBE243:
 532              	.LBE242:
 533              	.LBB244:
 534              	.LBB245:
 535 004e 364E     		ldr	r6, .L18+4
 536 0050 8023     		movs	r3, #128
 537 0052 1B02     		lsls	r3, r3, #8
 538 0054 B362     		str	r3, [r6, #40]
 539              	.LVL35:
 540              	.LBE245:
 541              	.LBE244:
 542              	.LBB246:
 543              	.LBB247:
 544 0056 8023     		movs	r3, #128
 545 0058 5B00     		lsls	r3, r3, #1
 546 005a 9846     		mov	r8, r3
 547 005c BB62     		str	r3, [r7, #40]
 548              	.LVL36:
 549              	.LBE247:
 550              	.LBE246:
 551              	.LBB248:
 552              	.LBB249:
 553 005e B362     		str	r3, [r6, #40]
 554              	.LVL37:
 555              	.LBE249:
 556              	.LBE248:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 74


 557              	.LBB250:
 558              	.LBB251:
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_gpio.h **** }
 559              		.loc 7 857 0
 560 0060 F03B     		subs	r3, r3, #240
 561 0062 9B46     		mov	fp, r3
 562 0064 BB61     		str	r3, [r7, #24]
 563              	.LVL38:
 564              	.LBE251:
 565              	.LBE250:
 566              	.LBB252:
 567              	.LBB253:
 568 0066 B561     		str	r5, [r6, #24]
 569              	.LVL39:
 570              	.LBE253:
 571              	.LBE252:
 572              	.LBB254:
 573              	.LBB255:
 574 0068 0E3B     		subs	r3, r3, #14
 575 006a 9A46     		mov	r10, r3
 576 006c B361     		str	r3, [r6, #24]
 577              	.LVL40:
 578              	.LBE255:
 579              	.LBE254:
 580              	.LBB256:
 581              	.LBB257:
 582 006e 8023     		movs	r3, #128
 583 0070 5B01     		lsls	r3, r3, #5
 584 0072 9946     		mov	r9, r3
 585 0074 B361     		str	r3, [r6, #24]
 586              	.LVL41:
 587              	.LBE257:
 588              	.LBE256:
 491:Src/main.c    **** 
 492:Src/main.c    ****     LL_GPIO_InitTypeDef GPIO_InitStruct;
 493:Src/main.c    **** 
 494:Src/main.c    ****     /* GPIO Ports Clock Enable */
 495:Src/main.c    ****     LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOF);
 496:Src/main.c    ****     LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOA);
 497:Src/main.c    ****     LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOB);
 498:Src/main.c    **** 
 499:Src/main.c    ****     /**/
 500:Src/main.c    ****     LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_0);
 501:Src/main.c    **** 
 502:Src/main.c    ****     /*NB_OnOff*/
 503:Src/main.c    ****     LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_15);
 504:Src/main.c    **** 
 505:Src/main.c    ****     /*NB_Reset*/
 506:Src/main.c    ****     LL_GPIO_ResetOutputPin(GPIOA, LL_GPIO_PIN_8);
 507:Src/main.c    **** 
 508:Src/main.c    ****     /*RunLed*/
 509:Src/main.c    ****     LL_GPIO_ResetOutputPin(GPIOB, LL_GPIO_PIN_8);
 510:Src/main.c    **** 
 511:Src/main.c    ****     /*Flash_CS*/
 512:Src/main.c    ****     LL_GPIO_SetOutputPin(GPIOA, LL_GPIO_PIN_4);
 513:Src/main.c    **** 
 514:Src/main.c    ****     /*Flash_Hold*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 75


 515:Src/main.c    ****     LL_GPIO_SetOutputPin(GPIOB, LL_GPIO_PIN_0);
 516:Src/main.c    **** 
 517:Src/main.c    ****     /*Flash_WP*/
 518:Src/main.c    ****     LL_GPIO_SetOutputPin(GPIOB, LL_GPIO_PIN_1);
 519:Src/main.c    **** 
 520:Src/main.c    ****     /*IO_18B20*/
 521:Src/main.c    ****     LL_GPIO_SetOutputPin(GPIOB, LL_GPIO_PIN_12);
 522:Src/main.c    **** 
 523:Src/main.c    ****     /**/
 524:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_0;
 589              		.loc 1 524 0
 590 0076 0495     		str	r5, [sp, #16]
 525:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 591              		.loc 1 525 0
 592 0078 0595     		str	r5, [sp, #20]
 526:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 593              		.loc 1 526 0
 594 007a 0024     		movs	r4, #0
 595 007c 0694     		str	r4, [sp, #24]
 527:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 596              		.loc 1 527 0
 597 007e 0794     		str	r4, [sp, #28]
 528:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 598              		.loc 1 528 0
 599 0080 0894     		str	r4, [sp, #32]
 529:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 600              		.loc 1 529 0
 601 0082 04A9     		add	r1, sp, #16
 602 0084 3800     		movs	r0, r7
 603 0086 FFF7FEFF 		bl	LL_GPIO_Init
 604              	.LVL42:
 530:Src/main.c    **** 
 531:Src/main.c    ****     /**/
 532:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_4;
 605              		.loc 1 532 0
 606 008a 5B46     		mov	r3, fp
 607 008c 0493     		str	r3, [sp, #16]
 533:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 608              		.loc 1 533 0
 609 008e 0595     		str	r5, [sp, #20]
 534:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 610              		.loc 1 534 0
 611 0090 0694     		str	r4, [sp, #24]
 535:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 612              		.loc 1 535 0
 613 0092 0794     		str	r4, [sp, #28]
 536:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 614              		.loc 1 536 0
 615 0094 0894     		str	r4, [sp, #32]
 537:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 616              		.loc 1 537 0
 617 0096 04A9     		add	r1, sp, #16
 618 0098 3800     		movs	r0, r7
 619 009a FFF7FEFF 		bl	LL_GPIO_Init
 620              	.LVL43:
 538:Src/main.c    **** 
 539:Src/main.c    ****     /**/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 76


 540:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_0;
 621              		.loc 1 540 0
 622 009e 0495     		str	r5, [sp, #16]
 541:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 623              		.loc 1 541 0
 624 00a0 0595     		str	r5, [sp, #20]
 542:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 625              		.loc 1 542 0
 626 00a2 0694     		str	r4, [sp, #24]
 543:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 627              		.loc 1 543 0
 628 00a4 0794     		str	r4, [sp, #28]
 544:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 629              		.loc 1 544 0
 630 00a6 0894     		str	r4, [sp, #32]
 545:Src/main.c    ****     LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 631              		.loc 1 545 0
 632 00a8 04A9     		add	r1, sp, #16
 633 00aa 3000     		movs	r0, r6
 634 00ac FFF7FEFF 		bl	LL_GPIO_Init
 635              	.LVL44:
 546:Src/main.c    **** 
 547:Src/main.c    ****     /**/
 548:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_1;
 636              		.loc 1 548 0
 637 00b0 5346     		mov	r3, r10
 638 00b2 0493     		str	r3, [sp, #16]
 549:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 639              		.loc 1 549 0
 640 00b4 0595     		str	r5, [sp, #20]
 550:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 641              		.loc 1 550 0
 642 00b6 0694     		str	r4, [sp, #24]
 551:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 643              		.loc 1 551 0
 644 00b8 0794     		str	r4, [sp, #28]
 552:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 645              		.loc 1 552 0
 646 00ba 0894     		str	r4, [sp, #32]
 553:Src/main.c    ****     LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 647              		.loc 1 553 0
 648 00bc 04A9     		add	r1, sp, #16
 649 00be 3000     		movs	r0, r6
 650 00c0 FFF7FEFF 		bl	LL_GPIO_Init
 651              	.LVL45:
 554:Src/main.c    **** 
 555:Src/main.c    ****     /**/
 556:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_12;
 652              		.loc 1 556 0
 653 00c4 4B46     		mov	r3, r9
 654 00c6 0493     		str	r3, [sp, #16]
 557:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 655              		.loc 1 557 0
 656 00c8 0595     		str	r5, [sp, #20]
 558:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 657              		.loc 1 558 0
 658 00ca 0694     		str	r4, [sp, #24]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 77


 559:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_OPENDRAIN;
 659              		.loc 1 559 0
 660 00cc 0795     		str	r5, [sp, #28]
 560:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 661              		.loc 1 560 0
 662 00ce 0894     		str	r4, [sp, #32]
 561:Src/main.c    ****     LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 663              		.loc 1 561 0
 664 00d0 04A9     		add	r1, sp, #16
 665 00d2 3000     		movs	r0, r6
 666 00d4 FFF7FEFF 		bl	LL_GPIO_Init
 667              	.LVL46:
 562:Src/main.c    **** 
 563:Src/main.c    ****     /**/
 564:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_15;
 668              		.loc 1 564 0
 669 00d8 8023     		movs	r3, #128
 670 00da 1B02     		lsls	r3, r3, #8
 671 00dc 0493     		str	r3, [sp, #16]
 565:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 672              		.loc 1 565 0
 673 00de 0595     		str	r5, [sp, #20]
 566:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 674              		.loc 1 566 0
 675 00e0 0694     		str	r4, [sp, #24]
 567:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 676              		.loc 1 567 0
 677 00e2 0794     		str	r4, [sp, #28]
 568:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 678              		.loc 1 568 0
 679 00e4 0894     		str	r4, [sp, #32]
 569:Src/main.c    ****     LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 680              		.loc 1 569 0
 681 00e6 04A9     		add	r1, sp, #16
 682 00e8 3000     		movs	r0, r6
 683 00ea FFF7FEFF 		bl	LL_GPIO_Init
 684              	.LVL47:
 570:Src/main.c    **** 
 571:Src/main.c    ****     /**/
 572:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_8;
 685              		.loc 1 572 0
 686 00ee 4346     		mov	r3, r8
 687 00f0 0493     		str	r3, [sp, #16]
 573:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 688              		.loc 1 573 0
 689 00f2 0595     		str	r5, [sp, #20]
 574:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 690              		.loc 1 574 0
 691 00f4 0694     		str	r4, [sp, #24]
 575:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 692              		.loc 1 575 0
 693 00f6 0794     		str	r4, [sp, #28]
 576:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 694              		.loc 1 576 0
 695 00f8 0894     		str	r4, [sp, #32]
 577:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 696              		.loc 1 577 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 78


 697 00fa 04A9     		add	r1, sp, #16
 698 00fc 3800     		movs	r0, r7
 699 00fe FFF7FEFF 		bl	LL_GPIO_Init
 700              	.LVL48:
 578:Src/main.c    **** 
 579:Src/main.c    ****     /**/
 580:Src/main.c    ****     GPIO_InitStruct.Pin = LL_GPIO_PIN_8;
 701              		.loc 1 580 0
 702 0102 4346     		mov	r3, r8
 703 0104 0493     		str	r3, [sp, #16]
 581:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 704              		.loc 1 581 0
 705 0106 0595     		str	r5, [sp, #20]
 582:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 706              		.loc 1 582 0
 707 0108 0694     		str	r4, [sp, #24]
 583:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 708              		.loc 1 583 0
 709 010a 0794     		str	r4, [sp, #28]
 584:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 710              		.loc 1 584 0
 711 010c 0894     		str	r4, [sp, #32]
 585:Src/main.c    ****     LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 712              		.loc 1 585 0
 713 010e 04A9     		add	r1, sp, #16
 714 0110 3000     		movs	r0, r6
 715 0112 FFF7FEFF 		bl	LL_GPIO_Init
 716              	.LVL49:
 586:Src/main.c    **** }
 717              		.loc 1 586 0
 718 0116 0BB0     		add	sp, sp, #44
 719              		@ sp needed
 720 0118 3CBC     		pop	{r2, r3, r4, r5}
 721 011a 9046     		mov	r8, r2
 722 011c 9946     		mov	r9, r3
 723 011e A246     		mov	r10, r4
 724 0120 AB46     		mov	fp, r5
 725 0122 F0BD     		pop	{r4, r5, r6, r7, pc}
 726              	.L19:
 727              		.align	2
 728              	.L18:
 729 0124 00100240 		.word	1073876992
 730 0128 00040048 		.word	1207960576
 731              		.cfi_endproc
 732              	.LFE750:
 734              		.section	.text.MX_SPI1_Init,"ax",%progbits
 735              		.align	2
 736              		.code	16
 737              		.thumb_func
 739              	MX_SPI1_Init:
 740              	.LFB746:
 286:Src/main.c    **** 
 741              		.loc 1 286 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 72
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 79


 746              	.LCFI8:
 747              		.cfi_def_cfa_offset 20
 748              		.cfi_offset 4, -20
 749              		.cfi_offset 5, -16
 750              		.cfi_offset 6, -12
 751              		.cfi_offset 7, -8
 752              		.cfi_offset 14, -4
 753 0002 5746     		mov	r7, r10
 754 0004 4E46     		mov	r6, r9
 755 0006 4546     		mov	r5, r8
 756 0008 E0B4     		push	{r5, r6, r7}
 757              	.LCFI9:
 758              		.cfi_def_cfa_offset 32
 759              		.cfi_offset 8, -32
 760              		.cfi_offset 9, -28
 761              		.cfi_offset 10, -24
 762 000a 92B0     		sub	sp, sp, #72
 763              	.LCFI10:
 764              		.cfi_def_cfa_offset 104
 765              	.LVL50:
 766              	.LBB258:
 767              	.LBB259:
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 768              		.loc 2 684 0
 769 000c 494A     		ldr	r2, .L21
 770 000e 9169     		ldr	r1, [r2, #24]
 771 0010 8023     		movs	r3, #128
 772 0012 5B01     		lsls	r3, r3, #5
 773 0014 1943     		orrs	r1, r3
 774 0016 9161     		str	r1, [r2, #24]
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 775              		.loc 2 686 0
 776 0018 9269     		ldr	r2, [r2, #24]
 777 001a 1340     		ands	r3, r2
 778 001c 0193     		str	r3, [sp, #4]
 779              		.loc 2 687 0
 780 001e 019B     		ldr	r3, [sp, #4]
 781              	.LVL51:
 782              	.LBE259:
 783              	.LBE258:
 300:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 784              		.loc 1 300 0
 785 0020 2023     		movs	r3, #32
 786 0022 9946     		mov	r9, r3
 787 0024 0293     		str	r3, [sp, #8]
 301:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 788              		.loc 1 301 0
 789 0026 0226     		movs	r6, #2
 790 0028 0396     		str	r6, [sp, #12]
 302:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 791              		.loc 1 302 0
 792 002a 0327     		movs	r7, #3
 793 002c 0497     		str	r7, [sp, #16]
 303:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 794              		.loc 1 303 0
 795 002e 0024     		movs	r4, #0
 796 0030 0594     		str	r4, [sp, #20]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 80


 304:Src/main.c    ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_0;
 797              		.loc 1 304 0
 798 0032 0694     		str	r4, [sp, #24]
 305:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 799              		.loc 1 305 0
 800 0034 0794     		str	r4, [sp, #28]
 306:Src/main.c    **** 
 801              		.loc 1 306 0
 802 0036 02A9     		add	r1, sp, #8
 803 0038 9020     		movs	r0, #144
 804 003a C005     		lsls	r0, r0, #23
 805 003c FFF7FEFF 		bl	LL_GPIO_Init
 806              	.LVL52:
 308:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 807              		.loc 1 308 0
 808 0040 4023     		movs	r3, #64
 809 0042 9846     		mov	r8, r3
 810 0044 0293     		str	r3, [sp, #8]
 309:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 811              		.loc 1 309 0
 812 0046 0396     		str	r6, [sp, #12]
 310:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 813              		.loc 1 310 0
 814 0048 0497     		str	r7, [sp, #16]
 311:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 815              		.loc 1 311 0
 816 004a 0594     		str	r4, [sp, #20]
 312:Src/main.c    ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_0;
 817              		.loc 1 312 0
 818 004c 0694     		str	r4, [sp, #24]
 313:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 819              		.loc 1 313 0
 820 004e 0794     		str	r4, [sp, #28]
 314:Src/main.c    **** 
 821              		.loc 1 314 0
 822 0050 02A9     		add	r1, sp, #8
 823 0052 9020     		movs	r0, #144
 824 0054 C005     		lsls	r0, r0, #23
 825 0056 FFF7FEFF 		bl	LL_GPIO_Init
 826              	.LVL53:
 316:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 827              		.loc 1 316 0
 828 005a 8025     		movs	r5, #128
 829 005c 0295     		str	r5, [sp, #8]
 317:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 830              		.loc 1 317 0
 831 005e 0396     		str	r6, [sp, #12]
 318:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 832              		.loc 1 318 0
 833 0060 0497     		str	r7, [sp, #16]
 319:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 834              		.loc 1 319 0
 835 0062 0594     		str	r4, [sp, #20]
 320:Src/main.c    ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_0;
 836              		.loc 1 320 0
 837 0064 0694     		str	r4, [sp, #24]
 321:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 81


 838              		.loc 1 321 0
 839 0066 0794     		str	r4, [sp, #28]
 322:Src/main.c    **** 
 840              		.loc 1 322 0
 841 0068 02A9     		add	r1, sp, #8
 842 006a 9020     		movs	r0, #144
 843 006c C005     		lsls	r0, r0, #23
 844 006e FFF7FEFF 		bl	LL_GPIO_Init
 845              	.LVL54:
 846              	.LBB260:
 847              	.LBB261:
 848              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @file    stm32f0xx_ll_dma.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief   Header file of DMA LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #ifndef __STM32F0xx_LL_DMA_H
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __STM32F0xx_LL_DMA_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #ifdef __cplusplus
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** extern "C" {
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #include "stm32f0xx.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 82


  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA1) || defined (DMA2)
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL DMA
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE),
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*DMA1_Channel6*/
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE)
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*DMA1_Channel7*/
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** };
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Constants DMA Private Constants
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Define used to get CSELR register offset */
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define DMA_CSELR_OFFSET                  (uint32_t)(DMA1_CSELR_BASE - DMA1_BASE)
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Defines used for the bit position in the register and perform offsets */
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define DMA_POSITION_CSELR_CXS            ((Channel-1U)*4U)
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 83


 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** typedef struct
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                                data transfer direction is configured on the selecte
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         is incremented or not.
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         is incremented or not.
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 84


 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if (defined(DMA1_CSELR_DEFAULT)||defined(DMA2_CSELR_DEFAULT))
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_REQUEST
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** } LL_DMA_InitTypeDef;
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 85


 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 86


 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  0x00000001U /*!< DMA Channel 1 */
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  0x00000002U /*!< DMA Channel 2 */
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  0x00000003U /*!< DMA Channel 3 */
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  0x00000004U /*!< DMA Channel 4 */
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  0x00000005U /*!< DMA Channel 5 */
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  0x00000006U /*!< DMA Channel 6 */
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  0x00000007U /*!< DMA Channel 7 */
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                0xFFFF0000U /*!< DMA Channel all (used only for function 
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY 0x00000000U             /*!< Peripheral to memory directi
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                0x00000000U             /*!< Normal Mode                 
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         0x00000000U             /*!< Peripheral increment mode Di
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 87


 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         0x00000000U             /*!< Memory increment mode Disabl
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            0x00000000U             /*!< Peripheral data alignment : 
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            0x00000000U             /*!< Memory data alignment : Byte
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               0x00000000U             /*!< Priority level : Low       *
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if (defined(DMA1_CSELR_DEFAULT)||defined(DMA2_CSELR_DEFAULT))
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_REQUEST Transfer peripheral request
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_0                  0x00000000U /*!< DMA peripheral request 0  */
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_1                  0x00000001U /*!< DMA peripheral request 1  */
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_2                  0x00000002U /*!< DMA peripheral request 2  */
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_3                  0x00000003U /*!< DMA peripheral request 3  */
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_4                  0x00000004U /*!< DMA peripheral request 4  */
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_5                  0x00000005U /*!< DMA peripheral request 5  */
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_6                  0x00000006U /*!< DMA peripheral request 6  */
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_7                  0x00000007U /*!< DMA peripheral request 7  */
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_8                  0x00000008U /*!< DMA peripheral request 8  */
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_9                  0x00000009U /*!< DMA peripheral request 9  */
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_10                 0x0000000AU /*!< DMA peripheral request 10 */
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_11                 0x0000000BU /*!< DMA peripheral request 11 */
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_12                 0x0000000CU /*!< DMA peripheral request 12 */
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_13                 0x0000000DU /*!< DMA peripheral request 13 */
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_14                 0x0000000EU /*!< DMA peripheral request 14 */
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_REQUEST_15                 0x0000000FU /*!< DMA peripheral request 15 */
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 88


 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Write a value in DMA register
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __REG__ Register to be written
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Read a value in DMA register
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __REG__ Register to be read
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Register value
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval DMAx
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined(DMA2)
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)   \
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) > ((uint32_t)DMA1_Channel7)) ?  DMA2 : DMA1)
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)  (DMA1)
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA2)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 89


 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA2_Channel6) && defined (DMA2_Channel7)
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel6)) ? LL_DMA_CHANNEL_6 : \
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA1_Channel6) && defined (DMA1_Channel7)
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #elif defined (DMA1_Channel6)
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_6)
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  LL_DMA_CHANNEL_5)
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /* DMA1_Channel6 && DMA1_Channel7 */
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 90


 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval DMAx_Channely
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA2)
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA2_Channel6) && defined (DMA2_Channel7)
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA2_Channel7)
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA1_Channel7)
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #if defined (DMA1_Channel6) && defined (DMA1_Channel7)
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA1_Channel7)
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #elif defined (DMA1_Channel6)
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA1_Channel6)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 91


 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #else
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  DMA1_Channel5)
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif /* DMA1_Channel6 && DMA1_Channel7 */
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** #endif
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @}
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  * @{
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****  */
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @{
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Enable DMA channel.
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])))-
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Disable DMA channel.
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 92


 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_EN) == (DMA_CCR_EN));
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 93


 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Configuration);
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 849              		.loc 8 700 0
 850 0072 314B     		ldr	r3, .L21+4
 851 0074 1968     		ldr	r1, [r3]
 852 0076 314A     		ldr	r2, .L21+8
 853 0078 1140     		ands	r1, r2
 854 007a 1960     		str	r1, [r3]
 855              	.LVL55:
 856              	.LBE261:
 857              	.LBE260:
 858              	.LBB262:
 859              	.LBB263:
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 94


 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * data transfer is configured on the selected Channel.
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Mode);
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_CIRC));
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 95


 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_PINC));
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Memory increment mode.
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 96


 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Memory increment mode.
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_MINC));
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Peripheral size.
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 97


 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Peripheral size.
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_PSIZE));
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Memory size.
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Get Memory size.
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 98


 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****                    DMA_CCR_MSIZE));
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** }
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** 
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** /**
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @brief  Set Channel priority level.
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   * @retval None
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   */
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h **** {
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 860              		.loc 8 980 0
 861 007c 1968     		ldr	r1, [r3]
 862 007e 3048     		ldr	r0, .L21+12
 863 0080 8446     		mov	ip, r0
 864 0082 0140     		ands	r1, r0
 865 0084 1960     		str	r1, [r3]
 866              	.LVL56:
 867              	.LBE263:
 868              	.LBE262:
 869              	.LBB264:
 870              	.LBB265:
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Mode);
 871              		.loc 8 749 0
 872 0086 1968     		ldr	r1, [r3]
 873 0088 4846     		mov	r0, r9
 874 008a 8143     		bics	r1, r0
 875 008c 1960     		str	r1, [r3]
 876              	.LVL57:
 877              	.LBE265:
 878              	.LBE264:
 879              	.LBB266:
 880              	.LBB267:
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 99


 881              		.loc 8 794 0
 882 008e 1968     		ldr	r1, [r3]
 883 0090 4046     		mov	r0, r8
 884 0092 8143     		bics	r1, r0
 885 0094 1960     		str	r1, [r3]
 886              	.LVL58:
 887              	.LBE267:
 888              	.LBE266:
 889              	.LBB268:
 890              	.LBB269:
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 891              		.loc 8 839 0
 892 0096 1968     		ldr	r1, [r3]
 893 0098 A943     		bics	r1, r5
 894 009a 2943     		orrs	r1, r5
 895 009c 1960     		str	r1, [r3]
 896              	.LVL59:
 897              	.LBE269:
 898              	.LBE268:
 899              	.LBB270:
 900              	.LBB271:
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 901              		.loc 8 885 0
 902 009e 1968     		ldr	r1, [r3]
 903 00a0 2848     		ldr	r0, .L21+16
 904 00a2 0140     		ands	r1, r0
 905 00a4 1960     		str	r1, [r3]
 906              	.LVL60:
 907              	.LBE271:
 908              	.LBE270:
 909              	.LBB272:
 910              	.LBB273:
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 911              		.loc 8 932 0
 912 00a6 1F68     		ldr	r7, [r3]
 913 00a8 2749     		ldr	r1, .L21+20
 914 00aa 8A46     		mov	r10, r1
 915 00ac 0F40     		ands	r7, r1
 916 00ae 1F60     		str	r7, [r3]
 917              	.LVL61:
 918              	.LBE273:
 919              	.LBE272:
 920              	.LBB274:
 921              	.LBB275:
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 922              		.loc 8 700 0
 923 00b0 264B     		ldr	r3, .L21+24
 924 00b2 1F68     		ldr	r7, [r3]
 925 00b4 3A40     		ands	r2, r7
 926 00b6 1027     		movs	r7, #16
 927 00b8 3A43     		orrs	r2, r7
 928 00ba 1A60     		str	r2, [r3]
 929              	.LVL62:
 930              	.LBE275:
 931              	.LBE274:
 932              	.LBB276:
 933              	.LBB277:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 100


 934              		.loc 8 980 0
 935 00bc 1A68     		ldr	r2, [r3]
 936 00be 6146     		mov	r1, ip
 937 00c0 0A40     		ands	r2, r1
 938 00c2 1A60     		str	r2, [r3]
 939              	.LVL63:
 940              	.LBE277:
 941              	.LBE276:
 942              	.LBB278:
 943              	.LBB279:
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Mode);
 944              		.loc 8 749 0
 945 00c4 1A68     		ldr	r2, [r3]
 946 00c6 4946     		mov	r1, r9
 947 00c8 8A43     		bics	r2, r1
 948 00ca 1A60     		str	r2, [r3]
 949              	.LVL64:
 950              	.LBE279:
 951              	.LBE278:
 952              	.LBB280:
 953              	.LBB281:
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 954              		.loc 8 794 0
 955 00cc 1A68     		ldr	r2, [r3]
 956 00ce 4146     		mov	r1, r8
 957 00d0 8A43     		bics	r2, r1
 958 00d2 1A60     		str	r2, [r3]
 959              	.LVL65:
 960              	.LBE281:
 961              	.LBE280:
 962              	.LBB282:
 963              	.LBB283:
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 964              		.loc 8 839 0
 965 00d4 1A68     		ldr	r2, [r3]
 966 00d6 AA43     		bics	r2, r5
 967 00d8 1543     		orrs	r5, r2
 968 00da 1D60     		str	r5, [r3]
 969              	.LVL66:
 970              	.LBE283:
 971              	.LBE282:
 972              	.LBB284:
 973              	.LBB285:
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 974              		.loc 8 885 0
 975 00dc 1A68     		ldr	r2, [r3]
 976 00de 1040     		ands	r0, r2
 977 00e0 1860     		str	r0, [r3]
 978              	.LVL67:
 979              	.LBE285:
 980              	.LBE284:
 981              	.LBB286:
 982              	.LBB287:
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 983              		.loc 8 932 0
 984 00e2 1A68     		ldr	r2, [r3]
 985 00e4 5146     		mov	r1, r10
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 101


 986 00e6 1140     		ands	r1, r2
 987 00e8 1960     		str	r1, [r3]
 988              	.LVL68:
 989              	.LBE287:
 990              	.LBE286:
 357:Src/main.c    ****     SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 991              		.loc 1 357 0
 992 00ea 0894     		str	r4, [sp, #32]
 358:Src/main.c    ****     SPI_InitStruct.DataWidth = LL_SPI_DATAWIDTH_8BIT;
 993              		.loc 1 358 0
 994 00ec 8223     		movs	r3, #130
 995 00ee 5B00     		lsls	r3, r3, #1
 996 00f0 0993     		str	r3, [sp, #36]
 359:Src/main.c    ****     SPI_InitStruct.ClockPolarity = LL_SPI_POLARITY_HIGH;
 997              		.loc 1 359 0
 998 00f2 E023     		movs	r3, #224
 999 00f4 DB00     		lsls	r3, r3, #3
 1000 00f6 0A93     		str	r3, [sp, #40]
 360:Src/main.c    ****     SPI_InitStruct.ClockPhase = LL_SPI_PHASE_2EDGE;
 1001              		.loc 1 360 0
 1002 00f8 0B96     		str	r6, [sp, #44]
 361:Src/main.c    ****     SPI_InitStruct.NSS = LL_SPI_NSS_SOFT;
 1003              		.loc 1 361 0
 1004 00fa 0123     		movs	r3, #1
 1005 00fc 0C93     		str	r3, [sp, #48]
 362:Src/main.c    ****     SPI_InitStruct.BaudRate = LL_SPI_BAUDRATEPRESCALER_DIV4;
 1006              		.loc 1 362 0
 1007 00fe 8023     		movs	r3, #128
 1008 0100 9B00     		lsls	r3, r3, #2
 1009 0102 0D93     		str	r3, [sp, #52]
 363:Src/main.c    ****     SPI_InitStruct.BitOrder = LL_SPI_MSB_FIRST;
 1010              		.loc 1 363 0
 1011 0104 0825     		movs	r5, #8
 1012 0106 0E95     		str	r5, [sp, #56]
 364:Src/main.c    ****     SPI_InitStruct.CRCCalculation = LL_SPI_CRCCALCULATION_DISABLE;
 1013              		.loc 1 364 0
 1014 0108 0F94     		str	r4, [sp, #60]
 365:Src/main.c    ****     SPI_InitStruct.CRCPoly = 7;
 1015              		.loc 1 365 0
 1016 010a 1094     		str	r4, [sp, #64]
 366:Src/main.c    ****     LL_SPI_Init(SPI1, &SPI_InitStruct);
 1017              		.loc 1 366 0
 1018 010c FA3B     		subs	r3, r3, #250
 1019 010e FF3B     		subs	r3, r3, #255
 1020 0110 1193     		str	r3, [sp, #68]
 367:Src/main.c    **** 
 1021              		.loc 1 367 0
 1022 0112 0F4C     		ldr	r4, .L21+28
 1023 0114 08A9     		add	r1, sp, #32
 1024 0116 2000     		movs	r0, r4
 1025 0118 FFF7FEFF 		bl	LL_SPI_Init
 1026              	.LVL69:
 1027              	.LBB288:
 1028              	.LBB289:
 1029              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   ******************************************************************************
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 102


   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @file    stm32f0xx_ll_spi.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief   Header file of SPI LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #ifndef __STM32F0xx_LL_SPI_H
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define __STM32F0xx_LL_SPI_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #ifdef __cplusplus
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** extern "C" {
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #endif
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #include "stm32f0xx.h"
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #if defined (SPI1) || defined (SPI2)
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL SPI
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /* Private macros ------------------------------------------------------------*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 103


  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /* Exported types ------------------------------------------------------------*/
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_ES_INIT SPI Exported Init structure
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  SPI Init structures definition
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** typedef struct
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   uint32_t TransferDirection;       /*!< Specifies the SPI unidirectional or bidirectional data mod
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_TRANSFER_M
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   uint32_t Mode;                    /*!< Specifies the SPI mode (Master/Slave).
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_MODE.
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   uint32_t DataWidth;               /*!< Specifies the SPI data width.
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_DATAWIDTH.
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   uint32_t ClockPolarity;           /*!< Specifies the serial clock steady state.
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_POLARITY.
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   uint32_t ClockPhase;              /*!< Specifies the clock active edge for the bit capture.
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_PHASE.
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   uint32_t NSS;                     /*!< Specifies whether the NSS signal is managed by hardware (N
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_NSS_MODE.
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   uint32_t BaudRate;                /*!< Specifies the BaudRate prescaler value which will be used 
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BAUDRATEPR
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          @note The communication clock is derived from the master c
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   uint32_t BitOrder;                /*!< Specifies whether data transfers start from MSB or LSB bit
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_BIT_ORDER.
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   uint32_t CRCCalculation;          /*!< Specifies if the CRC calculation is enabled or not.
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This parameter can be a value of @ref SPI_LL_EC_CRC_CALCUL
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 104


 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   uint32_t CRCPoly;                 /*!< Specifies the polynomial used for the CRC calculation.
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This parameter must be a number between Min_Data = 0x00 an
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****                                          This feature can be modified afterwards using unitary func
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** } LL_SPI_InitTypeDef;
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /* Exported constants --------------------------------------------------------*/
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Constants SPI Exported Constants
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_GET_FLAG Get Flags Defines
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief    Flags defines which can be used with LL_SPI_ReadReg function
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_SR_RXNE                     SPI_SR_RXNE               /*!< Rx buffer not empty flag 
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_SR_TXE                      SPI_SR_TXE                /*!< Tx buffer empty flag     
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_SR_BSY                      SPI_SR_BSY                /*!< Busy flag                
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_SR_CRCERR                   SPI_SR_CRCERR             /*!< CRC error flag           
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_SR_MODF                     SPI_SR_MODF               /*!< Mode fault flag          
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_SR_OVR                      SPI_SR_OVR                /*!< Overrun flag             
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_SR_FRE                      SPI_SR_FRE                /*!< TI mode frame format erro
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_IT IT Defines
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief    IT defines which can be used with LL_SPI_ReadReg and  LL_SPI_WriteReg functions
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_CR2_RXNEIE                  SPI_CR2_RXNEIE            /*!< Rx buffer not empty inter
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_CR2_TXEIE                   SPI_CR2_TXEIE             /*!< Tx buffer empty interrupt
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_CR2_ERRIE                   SPI_CR2_ERRIE             /*!< Error interrupt enable   
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_MODE Operation Mode
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_MODE_MASTER                 (SPI_CR1_MSTR | SPI_CR1_SSI)    /*!< Master configuratio
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_MODE_SLAVE                  0x00000000U                     /*!< Slave configuration
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PROTOCOL Serial Protocol
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_PROTOCOL_MOTOROLA           0x00000000U               /*!< Motorola mode. Used as de
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 105


 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_PROTOCOL_TI                 (SPI_CR2_FRF)             /*!< TI mode                  
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_PHASE Clock Phase
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_PHASE_1EDGE                 0x00000000U               /*!< First clock transition is
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_PHASE_2EDGE                 (SPI_CR1_CPHA)            /*!< Second clock transition i
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_POLARITY Clock Polarity
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_POLARITY_LOW                0x00000000U               /*!< Clock to 0 when idle */
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_POLARITY_HIGH               (SPI_CR1_CPOL)            /*!< Clock to 1 when idle */
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BAUDRATEPRESCALER Baud Rate Prescaler
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV2      0x00000000U                                    /*!< Baud
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV4      (SPI_CR1_BR_0)                                 /*!< Baud
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV8      (SPI_CR1_BR_1)                                 /*!< Baud
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV16     (SPI_CR1_BR_1 | SPI_CR1_BR_0)                  /*!< Baud
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV32     (SPI_CR1_BR_2)                                 /*!< Baud
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV64     (SPI_CR1_BR_2 | SPI_CR1_BR_0)                  /*!< Baud
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV128    (SPI_CR1_BR_2 | SPI_CR1_BR_1)                  /*!< Baud
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_BAUDRATEPRESCALER_DIV256    (SPI_CR1_BR_2 | SPI_CR1_BR_1 | SPI_CR1_BR_0)   /*!< Baud
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_BIT_ORDER Transmission Bit Order
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_LSB_FIRST                   (SPI_CR1_LSBFIRST)        /*!< Data is transmitted/recei
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_MSB_FIRST                   0x00000000U               /*!< Data is transmitted/recei
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_TRANSFER_MODE Transfer Mode
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_FULL_DUPLEX                 0x00000000U                          /*!< Full-Duplex mo
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_SIMPLEX_RX                  (SPI_CR1_RXONLY)                     /*!< Simplex Rx mod
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_RX              (SPI_CR1_BIDIMODE)                   /*!< Half-Duplex Rx
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_HALF_DUPLEX_TX              (SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE)  /*!< Half-Duplex Tx
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 106


 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_NSS_MODE Slave Select Pin Mode
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_NSS_SOFT                    (SPI_CR1_SSM)                     /*!< NSS managed inter
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_NSS_HARD_INPUT              0x00000000U                       /*!< NSS pin used in I
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_NSS_HARD_OUTPUT             (((uint32_t)SPI_CR2_SSOE << 16U)) /*!< NSS pin used in O
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_DATAWIDTH Datawidth
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_4BIT              (SPI_CR2_DS_0 | SPI_CR2_DS_1)                           
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_5BIT              (SPI_CR2_DS_2)                                          
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_6BIT              (SPI_CR2_DS_2 | SPI_CR2_DS_0)                           
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_7BIT              (SPI_CR2_DS_2 | SPI_CR2_DS_1)                           
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_8BIT              (SPI_CR2_DS_2 | SPI_CR2_DS_1 | SPI_CR2_DS_0)            
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_9BIT              (SPI_CR2_DS_3)                                          
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_10BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_0)                           
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_11BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_1)                           
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_12BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_1 | SPI_CR2_DS_0)            
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_13BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2)                           
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_14BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2 | SPI_CR2_DS_0)            
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_15BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2 | SPI_CR2_DS_1)            
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DATAWIDTH_16BIT             (SPI_CR2_DS_3 | SPI_CR2_DS_2 | SPI_CR2_DS_1 | SPI_CR2_DS
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #if defined(USE_FULL_LL_DRIVER)
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_CRC_CALCULATION CRC Calculation
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_DISABLE      0x00000000U               /*!< CRC calculation disabled 
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_CRCCALCULATION_ENABLE       (SPI_CR1_CRCEN)           /*!< CRC calculation enabled  
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #endif /* USE_FULL_LL_DRIVER */
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_CRC_LENGTH CRC Length
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_CRC_8BIT                    0x00000000U               /*!<  8-bit CRC length */
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_CRC_16BIT                   (SPI_CR1_CRCL)            /*!< 16-bit CRC length */
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_RX_FIFO_TH RX FIFO Threshold
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_TH_HALF             0x00000000U               /*!< RXNE event is generated i
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_TH_QUARTER          (SPI_CR2_FRXTH)           /*!< RXNE event is generated i
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 107


 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_RX_FIFO RX FIFO Level
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_EMPTY               0x00000000U                       /*!< FIFO reception em
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_QUARTER_FULL        (SPI_SR_FRLVL_0)                  /*!< FIFO reception 1/
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_HALF_FULL           (SPI_SR_FRLVL_1)                  /*!< FIFO reception 1/
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_RX_FIFO_FULL                (SPI_SR_FRLVL_1 | SPI_SR_FRLVL_0) /*!< FIFO reception fu
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_TX_FIFO TX FIFO Level
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_EMPTY               0x00000000U                       /*!< FIFO transmission
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_QUARTER_FULL        (SPI_SR_FTLVL_0)                  /*!< FIFO transmission
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_HALF_FULL           (SPI_SR_FTLVL_1)                  /*!< FIFO transmission
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_TX_FIFO_FULL                (SPI_SR_FTLVL_1 | SPI_SR_FTLVL_0) /*!< FIFO transmission
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EC_DMA_PARITY DMA Parity
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DMA_PARITY_EVEN             0x00000000U   /*!< Select DMA parity Even */
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_DMA_PARITY_ODD              0x00000001U   /*!< Select DMA parity Odd  */
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /* Exported macro ------------------------------------------------------------*/
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Macros SPI Exported Macros
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EM_WRITE_READ Common Write and read registers Macros
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Write a value in SPI register
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  __REG__ Register to be written
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  __VALUE__ Value to be written in the register
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 108


 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Read a value in SPI register
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  __INSTANCE__ SPI Instance
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  __REG__ Register to be read
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Register value
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** #define LL_SPI_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /* Exported functions --------------------------------------------------------*/
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_Exported_Functions SPI Exported Functions
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_Configuration Configuration
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Enable SPI peripheral
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Enable
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Enable(SPI_TypeDef *SPIx)
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_SPE);
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Disable SPI peripheral
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   When disabling the SPI, follow the procedure described in the Reference Manual.
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_Disable
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_Disable(SPI_TypeDef *SPIx)
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_SPE);
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Check if SPI peripheral is enabled
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          SPE           LL_SPI_IsEnabled
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabled(SPI_TypeDef *SPIx)
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (READ_BIT(SPIx->CR1, SPI_CR1_SPE) == (SPI_CR1_SPE));
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 109


 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set SPI operation mode to Master or Slave
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_SetMode\n
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_SetMode
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  Mode This parameter can be one of the following values:
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetMode(SPI_TypeDef *SPIx, uint32_t Mode)
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI, Mode);
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get SPI operation mode (Master or Slave)
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          MSTR          LL_SPI_GetMode\n
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         CR1          SSI           LL_SPI_GetMode
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_MASTER
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MODE_SLAVE
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetMode(SPI_TypeDef *SPIx)
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_MSTR | SPI_CR1_SSI));
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set serial protocol used
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR2          FRF           LL_SPI_SetStandard
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  Standard This parameter can be one of the following values:
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_MOTOROLA
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_TI
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetStandard(SPI_TypeDef *SPIx, uint32_t Standard)
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_FRF, Standard);
 1030              		.loc 9 445 0
 1031 011c 6368     		ldr	r3, [r4, #4]
 1032 011e BB43     		bics	r3, r7
 1033 0120 6360     		str	r3, [r4, #4]
 1034              	.LVL70:
 1035              	.LBE289:
 1036              	.LBE288:
 1037              	.LBB290:
 1038              	.LBB291:
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get serial protocol used
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 110


 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR2          FRF           LL_SPI_GetStandard
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_MOTOROLA
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PROTOCOL_TI
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetStandard(SPI_TypeDef *SPIx)
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_FRF));
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set clock phase
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         This bit is not used in SPI TI mode.
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          CPHA          LL_SPI_SetClockPhase
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  ClockPhase This parameter can be one of the following values:
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_1EDGE
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_2EDGE
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetClockPhase(SPI_TypeDef *SPIx, uint32_t ClockPhase)
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CPHA, ClockPhase);
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get clock phase
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          CPHA          LL_SPI_GetClockPhase
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_1EDGE
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_PHASE_2EDGE
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetClockPhase(SPI_TypeDef *SPIx)
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CPHA));
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set clock polarity
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing.
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         This bit is not used in SPI TI mode.
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          CPOL          LL_SPI_SetClockPolarity
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_LOW
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_HIGH
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetClockPolarity(SPI_TypeDef *SPIx, uint32_t ClockPolarity)
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CPOL, ClockPolarity);
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 111


 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get clock polarity
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          CPOL          LL_SPI_GetClockPolarity
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_LOW
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_POLARITY_HIGH
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetClockPolarity(SPI_TypeDef *SPIx)
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CPOL));
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set baud rate prescaler
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   These bits should not be changed when communication is ongoing. SPI BaudRate = fPCLK/Pr
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          BR            LL_SPI_SetBaudRatePrescaler
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  BaudRate This parameter can be one of the following values:
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV2
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV4
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV8
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV16
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV32
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV64
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV128
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV256
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetBaudRatePrescaler(SPI_TypeDef *SPIx, uint32_t BaudRate)
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_BR, BaudRate);
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get baud rate prescaler
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          BR            LL_SPI_GetBaudRatePrescaler
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV2
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV4
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV8
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV16
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV32
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV64
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV128
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_BAUDRATEPRESCALER_DIV256
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetBaudRatePrescaler(SPI_TypeDef *SPIx)
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_BR));
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set transfer bit order
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          LSBFIRST      LL_SPI_SetTransferBitOrder
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 112


 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  BitOrder This parameter can be one of the following values:
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_LSB_FIRST
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MSB_FIRST
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetTransferBitOrder(SPI_TypeDef *SPIx, uint32_t BitOrder)
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_LSBFIRST, BitOrder);
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get transfer bit order
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          LSBFIRST      LL_SPI_GetTransferBitOrder
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_LSB_FIRST
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_MSB_FIRST
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTransferBitOrder(SPI_TypeDef *SPIx)
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_LSBFIRST));
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set transfer direction mode
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   For Half-Duplex mode, Rx Direction is set by default.
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         In master mode, the MOSI pin is used and in slave mode, the MISO pin is used for Half-D
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          RXONLY        LL_SPI_SetTransferDirection\n
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         CR1          BIDIMODE      LL_SPI_SetTransferDirection\n
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         CR1          BIDIOE        LL_SPI_SetTransferDirection
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  TransferDirection This parameter can be one of the following values:
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_FULL_DUPLEX
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_SIMPLEX_RX
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_RX
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_TX
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetTransferDirection(SPI_TypeDef *SPIx, uint32_t TransferDirection)
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_RXONLY | SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE, TransferDirection);
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get transfer direction mode
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          RXONLY        LL_SPI_GetTransferDirection\n
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         CR1          BIDIMODE      LL_SPI_GetTransferDirection\n
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         CR1          BIDIOE        LL_SPI_GetTransferDirection
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_FULL_DUPLEX
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_SIMPLEX_RX
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_RX
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_HALF_DUPLEX_TX
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTransferDirection(SPI_TypeDef *SPIx)
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 113


 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_RXONLY | SPI_CR1_BIDIMODE | SPI_CR1_BIDIOE));
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set frame data width
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR2          DS            LL_SPI_SetDataWidth
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  DataWidth This parameter can be one of the following values:
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_4BIT
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_5BIT
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_6BIT
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_7BIT
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_8BIT
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_9BIT
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_10BIT
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_11BIT
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_12BIT
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_13BIT
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_14BIT
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_15BIT
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_16BIT
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetDataWidth(SPI_TypeDef *SPIx, uint32_t DataWidth)
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_DS, DataWidth);
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get frame data width
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR2          DS            LL_SPI_GetDataWidth
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_4BIT
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_5BIT
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_6BIT
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_7BIT
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_8BIT
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_9BIT
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_10BIT
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_11BIT
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_12BIT
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_13BIT
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_14BIT
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_15BIT
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_DATAWIDTH_16BIT
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetDataWidth(SPI_TypeDef *SPIx)
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_DS));
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set threshold of RXFIFO that triggers an RXNE event
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR2          FRXTH         LL_SPI_SetRxFIFOThreshold
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  Threshold This parameter can be one of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 114


 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_HALF
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_QUARTER
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetRxFIFOThreshold(SPI_TypeDef *SPIx, uint32_t Threshold)
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_FRXTH, Threshold);
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get threshold of RXFIFO that triggers an RXNE event
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR2          FRXTH         LL_SPI_GetRxFIFOThreshold
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_HALF
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_RX_FIFO_TH_QUARTER
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxFIFOThreshold(SPI_TypeDef *SPIx)
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR2, SPI_CR2_FRXTH));
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_CRC_Management CRC Management
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Enable CRC
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_EnableCRC
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableCRC(SPI_TypeDef *SPIx)
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_CRCEN);
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Disable CRC
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_DisableCRC
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableCRC(SPI_TypeDef *SPIx)
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR1, SPI_CR1_CRCEN);
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Check if CRC is enabled
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 115


 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          CRCEN         LL_SPI_IsEnabledCRC
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval State of bit (1 or 0).
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_IsEnabledCRC(SPI_TypeDef *SPIx)
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (READ_BIT(SPIx->CR1, SPI_CR1_CRCEN) == (SPI_CR1_CRCEN));
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set CRC Length
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          CRCL          LL_SPI_SetCRCWidth
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  CRCLength This parameter can be one of the following values:
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_8BIT
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_16BIT
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCWidth(SPI_TypeDef *SPIx, uint32_t CRCLength)
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_CRCL, CRCLength);
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get CRC Length
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          CRCL          LL_SPI_GetCRCWidth
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_8BIT
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_CRC_16BIT
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetCRCWidth(SPI_TypeDef *SPIx)
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_BIT(SPIx->CR1, SPI_CR1_CRCL));
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set CRCNext to transfer CRC on the line
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   This bit has to be written as soon as the last data is written in the SPIx_DR register.
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          CRCNEXT       LL_SPI_SetCRCNext
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCNext(SPI_TypeDef *SPIx)
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   SET_BIT(SPIx->CR1, SPI_CR1_CRCNEXT);
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set polynomial for CRC calculation
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CRCPR        CRCPOLY       LL_SPI_SetCRCPolynomial
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  CRCPoly This parameter must be a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetCRCPolynomial(SPI_TypeDef *SPIx, uint32_t CRCPoly)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 116


 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   WRITE_REG(SPIx->CRCPR, (uint16_t)CRCPoly);
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get polynomial for CRC calculation
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CRCPR        CRCPOLY       LL_SPI_GetCRCPolynomial
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetCRCPolynomial(SPI_TypeDef *SPIx)
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->CRCPR));
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get Rx CRC
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll RXCRCR       RXCRC         LL_SPI_GetRxCRC
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetRxCRC(SPI_TypeDef *SPIx)
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->RXCRCR));
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get Tx CRC
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll TXCRCR       TXCRC         LL_SPI_GetTxCRC
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value is a number between Min_Data = 0x00 and Max_Data = 0xFFFF
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetTxCRC(SPI_TypeDef *SPIx)
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (uint32_t)(READ_REG(SPIx->TXCRCR));
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @}
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /** @defgroup SPI_LL_EF_NSS_Management Slave Select Pin Management
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @{
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Set NSS mode
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   LL_SPI_NSS_SOFT Mode is not used in SPI TI mode.
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          SSM           LL_SPI_SetNSSMode\n
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR2          SSOE          LL_SPI_SetNSSMode
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  NSS This parameter can be one of the following values:
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_SOFT
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_INPUT
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 117


 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_SetNSSMode(SPI_TypeDef *SPIx, uint32_t NSS)
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR1, SPI_CR1_SSM,  NSS);
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   MODIFY_REG(SPIx->CR2, SPI_CR2_SSOE, ((uint32_t)(NSS >> 16U)));
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Get NSS mode
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR1          SSM           LL_SPI_GetNSSMode\n
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR2          SSOE          LL_SPI_GetNSSMode
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval Returned value can be one of the following values:
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_SOFT
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_INPUT
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   *         @arg @ref LL_SPI_NSS_HARD_OUTPUT
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE uint32_t LL_SPI_GetNSSMode(SPI_TypeDef *SPIx)
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   register uint32_t Ssm  = (READ_BIT(SPIx->CR1, SPI_CR1_SSM));
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   register uint32_t Ssoe = (READ_BIT(SPIx->CR2,  SPI_CR2_SSOE) << 16U);
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   return (Ssm | Ssoe);
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Enable NSS pulse management
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR2          NSSP          LL_SPI_EnableNSSPulseMgt
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_EnableNSSPulseMgt(SPI_TypeDef *SPIx)
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   SET_BIT(SPIx->CR2, SPI_CR2_NSSP);
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** }
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** 
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** /**
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @brief  Disable NSS pulse management
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @note   This bit should not be changed when communication is ongoing. This bit is not used in S
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @rmtoll CR2          NSSP          LL_SPI_DisableNSSPulseMgt
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @param  SPIx SPI Instance
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   * @retval None
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   */
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** __STATIC_INLINE void LL_SPI_DisableNSSPulseMgt(SPI_TypeDef *SPIx)
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h **** {
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_spi.h ****   CLEAR_BIT(SPIx->CR2, SPI_CR2_NSSP);
 1039              		.loc 9 893 0
 1040 0122 6368     		ldr	r3, [r4, #4]
 1041 0124 AB43     		bics	r3, r5
 1042 0126 6360     		str	r3, [r4, #4]
 1043              	.LVL71:
 1044              	.LBE291:
 1045              	.LBE290:
 372:Src/main.c    **** 
 1046              		.loc 1 372 0
 1047 0128 12B0     		add	sp, sp, #72
 1048              		@ sp needed
 1049 012a 1CBC     		pop	{r2, r3, r4}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 118


 1050 012c 9046     		mov	r8, r2
 1051 012e 9946     		mov	r9, r3
 1052 0130 A246     		mov	r10, r4
 1053 0132 F0BD     		pop	{r4, r5, r6, r7, pc}
 1054              	.L22:
 1055              		.align	2
 1056              	.L21:
 1057 0134 00100240 		.word	1073876992
 1058 0138 1C000240 		.word	1073872924
 1059 013c EFBFFFFF 		.word	-16401
 1060 0140 FFCFFFFF 		.word	-12289
 1061 0144 FFFCFFFF 		.word	-769
 1062 0148 FFF3FFFF 		.word	-3073
 1063 014c 30000240 		.word	1073872944
 1064 0150 00300140 		.word	1073819648
 1065              		.cfi_endproc
 1066              	.LFE746:
 1068              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1069              		.align	2
 1070              		.code	16
 1071              		.thumb_func
 1073              	MX_USART1_UART_Init:
 1074              	.LFB747:
 376:Src/main.c    **** 
 1075              		.loc 1 376 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 56
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1080              	.LCFI11:
 1081              		.cfi_def_cfa_offset 20
 1082              		.cfi_offset 4, -20
 1083              		.cfi_offset 5, -16
 1084              		.cfi_offset 6, -12
 1085              		.cfi_offset 7, -8
 1086              		.cfi_offset 14, -4
 1087 0002 4F46     		mov	r7, r9
 1088 0004 80B4     		push	{r7}
 1089              	.LCFI12:
 1090              		.cfi_def_cfa_offset 24
 1091              		.cfi_offset 9, -24
 1092 0006 8EB0     		sub	sp, sp, #56
 1093              	.LCFI13:
 1094              		.cfi_def_cfa_offset 80
 1095              	.LVL72:
 1096              	.LBB292:
 1097              	.LBB293:
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 1098              		.loc 2 684 0
 1099 0008 424A     		ldr	r2, .L24
 1100 000a 9169     		ldr	r1, [r2, #24]
 1101 000c 8023     		movs	r3, #128
 1102 000e DB01     		lsls	r3, r3, #7
 1103 0010 1943     		orrs	r1, r3
 1104 0012 9161     		str	r1, [r2, #24]
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 1105              		.loc 2 686 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 119


 1106 0014 9269     		ldr	r2, [r2, #24]
 1107 0016 1340     		ands	r3, r2
 1108 0018 0093     		str	r3, [sp]
 1109              		.loc 2 687 0
 1110 001a 009B     		ldr	r3, [sp]
 1111              	.LVL73:
 1112              	.LBE293:
 1113              	.LBE292:
 389:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 1114              		.loc 1 389 0
 1115 001c 8023     		movs	r3, #128
 1116 001e 9B00     		lsls	r3, r3, #2
 1117 0020 0193     		str	r3, [sp, #4]
 390:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 1118              		.loc 1 390 0
 1119 0022 FF3B     		subs	r3, r3, #255
 1120 0024 FF3B     		subs	r3, r3, #255
 1121 0026 9946     		mov	r9, r3
 1122 0028 0293     		str	r3, [sp, #8]
 391:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 1123              		.loc 1 391 0
 1124 002a 0326     		movs	r6, #3
 1125 002c 0396     		str	r6, [sp, #12]
 392:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1126              		.loc 1 392 0
 1127 002e 0024     		movs	r4, #0
 1128 0030 0494     		str	r4, [sp, #16]
 393:Src/main.c    ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
 1129              		.loc 1 393 0
 1130 0032 0594     		str	r4, [sp, #20]
 394:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1131              		.loc 1 394 0
 1132 0034 0125     		movs	r5, #1
 1133 0036 0695     		str	r5, [sp, #24]
 395:Src/main.c    **** 
 1134              		.loc 1 395 0
 1135 0038 01A9     		add	r1, sp, #4
 1136 003a 9020     		movs	r0, #144
 1137 003c C005     		lsls	r0, r0, #23
 1138 003e FFF7FEFF 		bl	LL_GPIO_Init
 1139              	.LVL74:
 397:Src/main.c    ****     GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 1140              		.loc 1 397 0
 1141 0042 8027     		movs	r7, #128
 1142 0044 FF00     		lsls	r7, r7, #3
 1143 0046 0197     		str	r7, [sp, #4]
 398:Src/main.c    ****     GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 1144              		.loc 1 398 0
 1145 0048 4B46     		mov	r3, r9
 1146 004a 0293     		str	r3, [sp, #8]
 399:Src/main.c    ****     GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 1147              		.loc 1 399 0
 1148 004c 0396     		str	r6, [sp, #12]
 400:Src/main.c    ****     GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1149              		.loc 1 400 0
 1150 004e 0494     		str	r4, [sp, #16]
 401:Src/main.c    ****     GPIO_InitStruct.Alternate = LL_GPIO_AF_1;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 120


 1151              		.loc 1 401 0
 1152 0050 0594     		str	r4, [sp, #20]
 402:Src/main.c    ****     LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1153              		.loc 1 402 0
 1154 0052 0695     		str	r5, [sp, #24]
 403:Src/main.c    **** 
 1155              		.loc 1 403 0
 1156 0054 01A9     		add	r1, sp, #4
 1157 0056 9020     		movs	r0, #144
 1158 0058 C005     		lsls	r0, r0, #23
 1159 005a FFF7FEFF 		bl	LL_GPIO_Init
 1160              	.LVL75:
 1161              	.LBB294:
 1162              	.LBB295:
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 1163              		.loc 8 700 0
 1164 005e 2E4B     		ldr	r3, .L24+4
 1165 0060 1968     		ldr	r1, [r3]
 1166 0062 2E4A     		ldr	r2, .L24+8
 1167 0064 0A40     		ands	r2, r1
 1168 0066 1A60     		str	r2, [r3]
 1169              	.LVL76:
 1170              	.LBE295:
 1171              	.LBE294:
 1172              	.LBB296:
 1173              	.LBB297:
 1174              		.loc 8 980 0
 1175 0068 1968     		ldr	r1, [r3]
 1176 006a 2D4A     		ldr	r2, .L24+12
 1177 006c 0A40     		ands	r2, r1
 1178 006e 1A60     		str	r2, [r3]
 1179              	.LVL77:
 1180              	.LBE297:
 1181              	.LBE296:
 1182              	.LBB298:
 1183              	.LBB299:
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              Mode);
 1184              		.loc 8 749 0
 1185 0070 1A68     		ldr	r2, [r3]
 1186 0072 2021     		movs	r1, #32
 1187 0074 8A43     		bics	r2, r1
 1188 0076 1A60     		str	r2, [r3]
 1189              	.LVL78:
 1190              	.LBE299:
 1191              	.LBE298:
 1192              	.LBB300:
 1193              	.LBB301:
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 1194              		.loc 8 794 0
 1195 0078 1A68     		ldr	r2, [r3]
 1196 007a 2031     		adds	r1, r1, #32
 1197 007c 8A43     		bics	r2, r1
 1198 007e 1A60     		str	r2, [r3]
 1199              	.LVL79:
 1200              	.LBE301:
 1201              	.LBE300:
 1202              	.LBB302:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 121


 1203              	.LBB303:
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 1204              		.loc 8 839 0
 1205 0080 1968     		ldr	r1, [r3]
 1206 0082 8022     		movs	r2, #128
 1207 0084 9143     		bics	r1, r2
 1208 0086 0A43     		orrs	r2, r1
 1209 0088 1A60     		str	r2, [r3]
 1210              	.LVL80:
 1211              	.LBE303:
 1212              	.LBE302:
 1213              	.LBB304:
 1214              	.LBB305:
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 1215              		.loc 8 885 0
 1216 008a 1968     		ldr	r1, [r3]
 1217 008c 254A     		ldr	r2, .L24+16
 1218 008e 0A40     		ands	r2, r1
 1219 0090 1A60     		str	r2, [r3]
 1220              	.LVL81:
 1221              	.LBE305:
 1222              	.LBE304:
 1223              	.LBB306:
 1224              	.LBB307:
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 1225              		.loc 8 932 0
 1226 0092 1968     		ldr	r1, [r3]
 1227 0094 244A     		ldr	r2, .L24+20
 1228 0096 0A40     		ands	r2, r1
 1229 0098 1A60     		str	r2, [r3]
 1230              	.LVL82:
 1231              	.LBE307:
 1232              	.LBE306:
 1233              	.LBB308:
 1234              	.LBB309:
 1235              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @file    stm32f0xx_ll_system.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief   Header file of SYSTEM LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   @verbatim
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   ==============================================================================
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****                      ##### How to use this driver #####
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****     [..]
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****     The LL SYSTEM driver contains a set of generic APIs that can be
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****     used by user:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****       (+) Some of the FLASH features need to be handled in the SYSTEM file.
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****       (+) Access to DBGCMU registers
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****       (+) Access to SYSCFG registers
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   @endverbatim
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   ******************************************************************************
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @attention
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 122


  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * Redistribution and use in source and binary forms, with or without modification,
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * are permitted provided that the following conditions are met:
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *      this list of conditions and the following disclaimer.
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *      this list of conditions and the following disclaimer in the documentation
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *      and/or other materials provided with the distribution.
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *      may be used to endorse or promote products derived from this software
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *      without specific prior written permission.
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   ******************************************************************************
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #ifndef __STM32F0xx_LL_SYSTEM_H
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define __STM32F0xx_LL_SYSTEM_H
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #ifdef __cplusplus
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** extern "C" {
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Includes ------------------------------------------------------------------*/
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #include "stm32f0xx.h"
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @addtogroup STM32F0xx_LL_Driver
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (FLASH) || defined (SYSCFG) || defined (DBGMCU)
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL SYSTEM
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Private types -------------------------------------------------------------*/
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Private variables ---------------------------------------------------------*/
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Private constants ---------------------------------------------------------*/
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_Private_Constants SYSTEM Private Constants
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 123


  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Private macros ------------------------------------------------------------*/
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Exported types ------------------------------------------------------------*/
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Exported constants --------------------------------------------------------*/
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Constants SYSTEM Exported Constants
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_REMAP SYSCFG Remap
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** * @{
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** */
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_REMAP_FLASH              (uint32_t)0x00000000U                               /*!<
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_REMAP_SYSTEMFLASH        SYSCFG_CFGR1_MEM_MODE_0                             /*!<
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_REMAP_SRAM               (SYSCFG_CFGR1_MEM_MODE_1 | SYSCFG_CFGR1_MEM_MODE_0) /*!<
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_IR_MOD)
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_IR_MOD SYSCFG IR Modulation
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_IR_MOD_TIM16       (SYSCFG_CFGR1_IR_MOD_0 & SYSCFG_CFGR1_IR_MOD_1)    /*!< Timer1
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_IR_MOD_USART1      (SYSCFG_CFGR1_IR_MOD_0)                            /*!< USART1
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_IR_MOD_USART4      (SYSCFG_CFGR1_IR_MOD_1)                            /*!< USART4
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_IR_MOD */
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_USART1TX_DMA_RMP) || defined(SYSCFG_CFGR1_USART1RX_DMA_RMP) || defined(SYS
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_USART1TX_RMP SYSCFG USART DMA Remap
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_USART1TX_DMA_RMP)
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART1TX_RMP_DMA1CH2     ((SYSCFG_CFGR1_USART1TX_DMA_RMP >> 8U) | (uint32_t)0x000
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART1TX_RMP_DMA1CH4     ((SYSCFG_CFGR1_USART1TX_DMA_RMP >> 8U) | SYSCFG_CFGR1_US
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_USART1TX_DMA_RMP*/
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_USART1RX_DMA_RMP)
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART1RX_RMP_DMA1CH3     ((SYSCFG_CFGR1_USART1RX_DMA_RMP >> 8U) | (uint32_t)0x000
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART1RX_RMP_DMA1CH5     ((SYSCFG_CFGR1_USART1RX_DMA_RMP >> 8U) | SYSCFG_CFGR1_US
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_USART1RX_DMA_RMP*/
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_USART2_DMA_RMP)
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART2_RMP_DMA1CH54      ((SYSCFG_CFGR1_USART2_DMA_RMP >> 8U) | (uint32_t)0x00000
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART2_RMP_DMA1CH67      ((SYSCFG_CFGR1_USART2_DMA_RMP >> 8U) | SYSCFG_CFGR1_USAR
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_USART2_DMA_RMP*/
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_USART3_DMA_RMP)
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART3_RMP_DMA1CH67      ((SYSCFG_CFGR1_USART3_DMA_RMP >> 8U) | (uint32_t)0x00000
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_USART3_RMP_DMA1CH32      ((SYSCFG_CFGR1_USART3_DMA_RMP >> 8U) | SYSCFG_CFGR1_USAR
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_USART3_DMA_RMP */
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_USART1TX_DMA_RMP || SYSCFG_CFGR1_USART1RX_DMA_RMP || SYSCFG_CFGR1_USART2_DMA
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 124


 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_SPI2_DMA_RMP)
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_SPI2_RMP_DMA1 SYSCFG SPI2 DMA Remap
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_SPI2_RMP_DMA1_CH45       (uint32_t)0x00000000U      /*!< SPI2_RX and SPI2_TX DMA 
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_SPI2_RMP_DMA1_CH67       SYSCFG_CFGR1_SPI2_DMA_RMP  /*!< SPI2_RX and SPI2_TX DMA 
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_SPI2_DMA_RMP*/
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_I2C1_DMA_RMP)
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_I2C1_RMP_DMA1 SYSCFG I2C1 DMA Remap
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C1_RMP_DMA1_CH32       (uint32_t)0x00000000U      /*!< I2C1_RX and I2C1_TX DMA 
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C1_RMP_DMA1_CH76       SYSCFG_CFGR1_I2C1_DMA_RMP  /*!< I2C1_RX and I2C1_TX DMA 
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_I2C1_DMA_RMP*/
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_ADC_DMA_RMP)
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_ADC1_RMP_DMA1 SYSCFG ADC1 DMA Remap
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_ADC1_RMP_DMA1_CH1        (uint32_t)0x00000000U     /*!< ADC DMA request mapped on
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_ADC1_RMP_DMA1_CH2        SYSCFG_CFGR1_ADC_DMA_RMP  /*!< ADC DMA request mapped on
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_ADC_DMA_RMP */
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_TIM16_DMA_RMP) || defined(SYSCFG_CFGR1_TIM17_DMA_RMP) || defined(SYSCFG_CF
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TIM16_RMP_DMA1 SYSCFG TIM DMA Remap
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_TIM16_DMA_RMP)
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_TIM16_DMA_RMP2)
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM16_RMP_DMA1_CH3       (((SYSCFG_CFGR1_TIM16_DMA_RMP | SYSCFG_CFGR1_TIM16_DMA_R
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM16_RMP_DMA1_CH4       (((SYSCFG_CFGR1_TIM16_DMA_RMP | SYSCFG_CFGR1_TIM16_DMA_R
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM16_RMP_DMA1_CH6       ((SYSCFG_CFGR1_TIM16_DMA_RMP2 >> 8U) | SYSCFG_CFGR1_TIM1
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #else
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM16_RMP_DMA1_CH3       ((SYSCFG_CFGR1_TIM16_DMA_RMP >> 8U) | (uint32_t)0x000000
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM16_RMP_DMA1_CH4       ((SYSCFG_CFGR1_TIM16_DMA_RMP >> 8U) | SYSCFG_CFGR1_TIM16
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_TIM16_DMA_RMP2 */
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_TIM16_DMA_RMP */
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_TIM17_DMA_RMP)
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_TIM17_DMA_RMP2)
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM17_RMP_DMA1_CH1       (((SYSCFG_CFGR1_TIM17_DMA_RMP | SYSCFG_CFGR1_TIM17_DMA_R
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM17_RMP_DMA1_CH2       (((SYSCFG_CFGR1_TIM17_DMA_RMP | SYSCFG_CFGR1_TIM17_DMA_R
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM17_RMP_DMA1_CH7       ((SYSCFG_CFGR1_TIM17_DMA_RMP2 >> 8U) | SYSCFG_CFGR1_TIM1
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #else
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 125


 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM17_RMP_DMA1_CH1       ((SYSCFG_CFGR1_TIM17_DMA_RMP >> 8U) | (uint32_t)0x000000
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM17_RMP_DMA1_CH2       ((SYSCFG_CFGR1_TIM17_DMA_RMP >> 8U) | SYSCFG_CFGR1_TIM17
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_TIM17_DMA_RMP2 */
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_TIM17_DMA_RMP */
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_TIM1_DMA_RMP)
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM1_RMP_DMA1_CH234      ((SYSCFG_CFGR1_TIM1_DMA_RMP >> 8U) | (uint32_t)0x0000000
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM1_RMP_DMA1_CH6        ((SYSCFG_CFGR1_TIM1_DMA_RMP >> 8U) | SYSCFG_CFGR1_TIM1_D
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_TIM1_DMA_RMP*/
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_TIM2_DMA_RMP)
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM2_RMP_DMA1_CH34       ((SYSCFG_CFGR1_TIM2_DMA_RMP >> 8U) | (uint32_t)0x0000000
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM2_RMP_DMA1_CH7        ((SYSCFG_CFGR1_TIM2_DMA_RMP >> 8U) | SYSCFG_CFGR1_TIM2_D
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_TIM2_DMA_RMP*/
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined (SYSCFG_CFGR1_TIM3_DMA_RMP)
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM3_RMP_DMA1_CH4        ((SYSCFG_CFGR1_TIM3_DMA_RMP >> 8U) | (uint32_t)0x0000000
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIM3_RMP_DMA1_CH6        ((SYSCFG_CFGR1_TIM3_DMA_RMP >> 8U) | SYSCFG_CFGR1_TIM3_D
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_TIM3_DMA_RMP*/
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_TIM16_DMA_RMP || SYSCFG_CFGR1_TIM17_DMA_RMP || SYSCFG_CFGR1_TIM1_DMA_RMP || 
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_I2C_FASTMODEPLUS SYSCFG I2C FASTMODEPLUS
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB6     SYSCFG_CFGR1_I2C_FMP_PB6  /*!< I2C PB6 Fast mode plus */
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB7     SYSCFG_CFGR1_I2C_FMP_PB7  /*!< I2C PB7 Fast mode plus */
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB8     SYSCFG_CFGR1_I2C_FMP_PB8  /*!< I2C PB8 Fast mode plus */
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB9     SYSCFG_CFGR1_I2C_FMP_PB9  /*!< I2C PB9 Fast mode plus */
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C_FMP_I2C1)
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C1    SYSCFG_CFGR1_I2C_FMP_I2C1 /*!< Enable Fast Mode Plus on 
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_I2C_FMP_I2C1*/
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C_FMP_I2C2)
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C2    SYSCFG_CFGR1_I2C_FMP_I2C2 /*!< Enable I2C2 Fast mode plu
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_I2C_FMP_I2C2*/
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C_FMP_PA9)
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PA9     SYSCFG_CFGR1_I2C_FMP_PA9 /*!< Enable Fast Mode Plus on P
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_I2C_FMP_PA9*/
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C_FMP_PA10)
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PA10    SYSCFG_CFGR1_I2C_FMP_PA10 /*!< Enable Fast Mode Plus on 
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR1_I2C_FMP_PA10*/
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_PORT SYSCFG EXTI PORT
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTA               (uint32_t)0U               /*!< EXTI PORT A */
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTB               (uint32_t)1U               /*!< EXTI PORT B */
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTC               (uint32_t)2U               /*!< EXTI PORT C */
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(GPIOD_BASE)
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTD               (uint32_t)3U               /*!< EXTI PORT D */
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*GPIOD_BASE*/
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(GPIOE_BASE)
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTE               (uint32_t)4U               /*!< EXTI PORT E */
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*GPIOE_BASE*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 126


 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTF               (uint32_t)5U               /*!< EXTI PORT F */
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_LINE SYSCFG EXTI LINE
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE0               (uint32_t)(0U << 16U | 0U)  /*!< EXTI_POSITION_0  | EXTI
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE1               (uint32_t)(4U << 16U | 0U)  /*!< EXTI_POSITION_4  | EXTI
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE2               (uint32_t)(8U << 16U | 0U)  /*!< EXTI_POSITION_8  | EXTI
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE3               (uint32_t)(12U << 16U | 0U) /*!< EXTI_POSITION_12 | EXTI
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE4               (uint32_t)(0U << 16U | 1U)  /*!< EXTI_POSITION_0  | EXTI
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE5               (uint32_t)(4U << 16U | 1U)  /*!< EXTI_POSITION_4  | EXTI
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE6               (uint32_t)(8U << 16U | 1U)  /*!< EXTI_POSITION_8  | EXTI
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE7               (uint32_t)(12U << 16U | 1U) /*!< EXTI_POSITION_12 | EXTI
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE8               (uint32_t)(0U << 16U | 2U)  /*!< EXTI_POSITION_0  | EXTI
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE9               (uint32_t)(4U << 16U | 2U)  /*!< EXTI_POSITION_4  | EXTI
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE10              (uint32_t)(8U << 16U | 2U)  /*!< EXTI_POSITION_8  | EXTI
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE11              (uint32_t)(12U << 16U | 2U) /*!< EXTI_POSITION_12 | EXTI
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE12              (uint32_t)(0U << 16U | 3U)  /*!< EXTI_POSITION_0  | EXTI
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE13              (uint32_t)(4U << 16U | 3U)  /*!< EXTI_POSITION_4  | EXTI
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE14              (uint32_t)(8U << 16U | 3U)  /*!< EXTI_POSITION_8  | EXTI
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE15              (uint32_t)(12U << 16U | 3U) /*!< EXTI_POSITION_12 | EXTI
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TIMBREAK SYSCFG TIMER BREAK
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_PVD_LOCK)
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_PVD             SYSCFG_CFGR2_PVD_LOCK  /*!< Enables and locks the PVD co
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****                                                                        with TIM1/15/16U/17 Break In
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****                                                                        the PVDE and PLS bits of the
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR2_PVD_LOCK*/
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_SRAM_PARITY     SYSCFG_CFGR2_SRAM_PARITY_LOCK   /*!< Enables and locks t
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****                                                                                 with Break Input of
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_SYSCFG_TIMBREAK_LOCKUP          SYSCFG_CFGR2_LOCKUP_LOCK   /*!< Enables and locks the LO
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****                                                                            CortexM0 with Break Inpu
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1_GRP1_STOP_IP  DBGMCU APB1 GRP1 STOP IP
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(DBGMCU_APB1_FZ_DBG_TIM2_STOP)
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM2_STOP      DBGMCU_APB1_FZ_DBG_TIM2_STOP        /*!< TIM2 counter st
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*DBGMCU_APB1_FZ_DBG_TIM2_STOP*/
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM3_STOP      DBGMCU_APB1_FZ_DBG_TIM3_STOP        /*!< TIM3 counter st
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(DBGMCU_APB1_FZ_DBG_TIM6_STOP)
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM6_STOP      DBGMCU_APB1_FZ_DBG_TIM6_STOP        /*!< TIM6 counter st
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*DBGMCU_APB1_FZ_DBG_TIM6_STOP*/
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(DBGMCU_APB1_FZ_DBG_TIM7_STOP)
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM7_STOP      DBGMCU_APB1_FZ_DBG_TIM7_STOP        /*!< TIM7 counter st
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*DBGMCU_APB1_FZ_DBG_TIM7_STOP*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 127


 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM14_STOP     DBGMCU_APB1_FZ_DBG_TIM14_STOP       /*!< TIM14 counter s
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_RTC_STOP       DBGMCU_APB1_FZ_DBG_RTC_STOP         /*!< RTC Calendar fr
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_WWDG_STOP      DBGMCU_APB1_FZ_DBG_WWDG_STOP        /*!< Debug Window Wa
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_IWDG_STOP      DBGMCU_APB1_FZ_DBG_IWDG_STOP        /*!< Debug Independe
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C1_STOP      DBGMCU_APB1_FZ_DBG_I2C1_SMBUS_TIMEOUT /*!< I2C1 SMBUS ti
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(DBGMCU_APB1_FZ_DBG_CAN_STOP)
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_CAN_STOP       DBGMCU_APB1_FZ_DBG_CAN_STOP         /*!< CAN debug stopp
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*DBGMCU_APB1_FZ_DBG_CAN_STOP*/
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1 GRP2_STOP_IP DBGMCU APB1 GRP2 STOP IP
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP2_TIM1_STOP      DBGMCU_APB2_FZ_DBG_TIM1_STOP        /*!< TIM1 counter st
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(DBGMCU_APB2_FZ_DBG_TIM15_STOP)
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP2_TIM15_STOP     DBGMCU_APB2_FZ_DBG_TIM15_STOP       /*!< TIM15 counter s
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*DBGMCU_APB2_FZ_DBG_TIM15_STOP*/
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP2_TIM16_STOP     DBGMCU_APB2_FZ_DBG_TIM16_STOP       /*!< TIM16 counter s
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP2_TIM17_STOP     DBGMCU_APB2_FZ_DBG_TIM17_STOP       /*!< TIM17 counter s
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_LATENCY FLASH LATENCY
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_FLASH_LATENCY_0                 0x00000000U             /*!< FLASH Zero Latency cycle */
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #define LL_FLASH_LATENCY_1                 FLASH_ACR_LATENCY       /*!< FLASH One Latency cycle */
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Exported macro ------------------------------------------------------------*/
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /* Exported functions --------------------------------------------------------*/
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Functions SYSTEM Exported Functions
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_SYSCFG SYSCFG
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set memory mapping at address 0x00000000
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 MEM_MODE      LL_SYSCFG_SetRemapMemory
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Memory This parameter can be one of the following values:
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FLASH
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SYSTEMFLASH
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SRAM
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 128


 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapMemory(uint32_t Memory)
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_MEM_MODE, Memory);
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Get memory mapping at address 0x00000000
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 MEM_MODE      LL_SYSCFG_GetRemapMemory
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FLASH
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SYSTEMFLASH
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SRAM
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetRemapMemory(void)
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_MEM_MODE));
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_IR_MOD)
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set IR Modulation Envelope signal source.
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 IR_MOD  LL_SYSCFG_SetIRModEnvelopeSignal
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Source This parameter can be one of the following values:
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_IR_MOD_TIM16
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_IR_MOD_USART1
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_IR_MOD_USART4
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetIRModEnvelopeSignal(uint32_t Source)
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_IR_MOD, Source);
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Get IR Modulation Envelope signal source.
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 IR_MOD  LL_SYSCFG_GetIRModEnvelopeSignal
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_IR_MOD_TIM16
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_IR_MOD_USART1
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_IR_MOD_USART4
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetIRModEnvelopeSignal(void)
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_IR_MOD));
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_IR_MOD */
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_USART1TX_DMA_RMP) || defined(SYSCFG_CFGR1_USART1RX_DMA_RMP) || defined(SYS
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set DMA request remapping bits for USART
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 USART1TX_DMA_RMP  LL_SYSCFG_SetRemapDMA_USART\n
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 USART1RX_DMA_RMP  LL_SYSCFG_SetRemapDMA_USART\n
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 USART2_DMA_RMP  LL_SYSCFG_SetRemapDMA_USART\n
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 USART3_DMA_RMP  LL_SYSCFG_SetRemapDMA_USART
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Remap This parameter can be one of the following values:
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART1TX_RMP_DMA1CH2 (*)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 129


 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART1TX_RMP_DMA1CH4 (*)
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART1RX_RMP_DMA1CH3 (*)
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART1RX_RMP_DMA1CH5 (*)
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART2_RMP_DMA1CH54 (*)
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART2_RMP_DMA1CH67 (*)
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART3_RMP_DMA1CH67 (*)
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_USART3_RMP_DMA1CH32 (*)
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices.
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapDMA_USART(uint32_t Remap)
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, (Remap & 0x00FF00FFU) << 8U, (Remap & 0xFF00FF00U));
 1236              		.loc 10 434 0
 1237 009a 244A     		ldr	r2, .L24+24
 1238 009c 1368     		ldr	r3, [r2]
 1239 009e 244E     		ldr	r6, .L24+28
 1240 00a0 3340     		ands	r3, r6
 1241 00a2 3B43     		orrs	r3, r7
 1242 00a4 1360     		str	r3, [r2]
 1243              	.LVL83:
 1244              	.LBE309:
 1245              	.LBE308:
 1246              	.LBB310:
 1247              	.LBB311:
 1248              		.loc 3 697 0
 1249 00a6 234A     		ldr	r2, .L24+32
 1250 00a8 C621     		movs	r1, #198
 1251 00aa 8900     		lsls	r1, r1, #2
 1252 00ac 5358     		ldr	r3, [r2, r1]
 1253 00ae 1B02     		lsls	r3, r3, #8
 1254 00b0 1B0A     		lsrs	r3, r3, #8
 1255 00b2 5350     		str	r3, [r2, r1]
 1256              	.LVL84:
 1257              	.LBE311:
 1258              	.LBE310:
 1259              	.LBB312:
 1260              	.LBB313:
 631:Drivers/CMSIS/Include/core_cm0.h **** }
 1261              		.loc 3 631 0
 1262 00b4 8023     		movs	r3, #128
 1263 00b6 1B05     		lsls	r3, r3, #20
 1264 00b8 1360     		str	r3, [r2]
 1265              	.LVL85:
 1266              	.LBE313:
 1267              	.LBE312:
 428:Src/main.c    ****     USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_9B;
 1268              		.loc 1 428 0
 1269 00ba 9623     		movs	r3, #150
 1270 00bc 1B02     		lsls	r3, r3, #8
 1271 00be 0793     		str	r3, [sp, #28]
 429:Src/main.c    ****     USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 1272              		.loc 1 429 0
 1273 00c0 8023     		movs	r3, #128
 1274 00c2 5B01     		lsls	r3, r3, #5
 1275 00c4 0893     		str	r3, [sp, #32]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 130


 430:Src/main.c    ****     USART_InitStruct.Parity = LL_USART_PARITY_EVEN;
 1276              		.loc 1 430 0
 1277 00c6 0994     		str	r4, [sp, #36]
 431:Src/main.c    ****     USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 1278              		.loc 1 431 0
 1279 00c8 0A97     		str	r7, [sp, #40]
 432:Src/main.c    ****     USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 1280              		.loc 1 432 0
 1281 00ca 0C23     		movs	r3, #12
 1282 00cc 0B93     		str	r3, [sp, #44]
 433:Src/main.c    ****     USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 1283              		.loc 1 433 0
 1284 00ce 0C94     		str	r4, [sp, #48]
 434:Src/main.c    ****     LL_USART_Init(USART1, &USART_InitStruct);
 1285              		.loc 1 434 0
 1286 00d0 0D94     		str	r4, [sp, #52]
 435:Src/main.c    **** 
 1287              		.loc 1 435 0
 1288 00d2 194C     		ldr	r4, .L24+36
 1289 00d4 07A9     		add	r1, sp, #28
 1290 00d6 2000     		movs	r0, r4
 1291 00d8 FFF7FEFF 		bl	LL_USART_Init
 1292              	.LVL86:
 1293              	.LBB314:
 1294              	.LBB315:
 1295              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @file    stm32f0xx_ll_usart.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 131


  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #ifndef __STM32F0xx_LL_USART_H
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define __STM32F0xx_LL_USART_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #ifdef __cplusplus
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** extern "C" {
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #include "stm32f0xx.h"
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (USART4) || defined (USART5
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL USART
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Private_Constants USART Private Constants
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** typedef struct
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 132


  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** } LL_USART_InitTypeDef;
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** typedef struct
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 133


 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLEAR_FLAG Clear Flags Defines
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_WriteReg function
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_PECF                       USART_ICR_PECF                /*!< Parity error fla
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_FECF                       USART_ICR_FECF                /*!< Framing error fl
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_NCF                        USART_ICR_NCF                 /*!< Noise detected f
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_ORECF                      USART_ICR_ORECF               /*!< Overrun error fl
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_IDLECF                     USART_ICR_IDLECF              /*!< Idle line detect
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_TCCF                       USART_ICR_TCCF                /*!< Transmission com
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_LBDCF                      USART_ICR_LBDCF               /*!< LIN break detect
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_CTSCF                      USART_ICR_CTSCF               /*!< CTS flag */
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_RTOCF                      USART_ICR_RTOCF               /*!< Receiver timeout
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_EOBCF                      USART_ICR_EOBCF               /*!< End of block fla
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_CMCF                       USART_ICR_CMCF                /*!< Character match 
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_WUCF                       USART_ICR_WUCF                /*!< Wakeup from Stop
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_PE                         USART_ISR_PE                  /*!< Parity error fla
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_FE                         USART_ISR_FE                  /*!< Framing error fl
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_NE                         USART_ISR_NE                  /*!< Noise detected f
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_ORE                        USART_ISR_ORE                 /*!< Overrun error fl
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_IDLE                       USART_ISR_IDLE                /*!< Idle line detect
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 134


 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_RXNE                       USART_ISR_RXNE                /*!< Read data regist
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_TC                         USART_ISR_TC                  /*!< Transmission com
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_TXE                        USART_ISR_TXE                 /*!< Transmit data re
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_LBDF                       USART_ISR_LBDF                /*!< LIN break detect
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_CTSIF                      USART_ISR_CTSIF               /*!< CTS interrupt fl
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_CTS                        USART_ISR_CTS                 /*!< CTS flag */
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_RTOF                       USART_ISR_RTOF                /*!< Receiver timeout
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_EOBF                       USART_ISR_EOBF                /*!< End of block fla
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_ABRE                       USART_ISR_ABRE                /*!< Auto baud rate e
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_ABRF                       USART_ISR_ABRF                /*!< Auto baud rate f
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_BUSY                       USART_ISR_BUSY                /*!< Busy flag */
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_CMF                        USART_ISR_CMF                 /*!< Character match 
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_SBKF                       USART_ISR_SBKF                /*!< Send break flag 
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_RWU                        USART_ISR_RWU                 /*!< Receiver wakeup 
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_WUF                        USART_ISR_WUF                 /*!< Wakeup from Stop
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_TEACK                      USART_ISR_TEACK               /*!< Transmit enable 
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_REACK                      USART_ISR_REACK               /*!< Receive enable a
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_CMIE                       USART_CR1_CMIE                /*!< Character match 
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_RTOIE                      USART_CR1_RTOIE               /*!< Receiver timeout
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_EOBIE                      USART_CR1_EOBIE               /*!< End of Block int
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR3_WUFIE                      USART_CR3_WUFIE               /*!< Wakeup from Stop
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 135


 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_7BITS_SUPPORT)
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_7B                   USART_CR1_M1            /*!< 7 bits word length : S
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M0            /*!< 9 bits word length : S
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M             /*!< 9 bits word length : S
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 136


 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXRX TX RX Pins Swap
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXRX_STANDARD                  0x00000000U           /*!< TX/RX pins are used as d
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXRX_SWAPPED                   (USART_CR2_SWAP)      /*!< TX and RX pins functions
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 137


 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_STANDARD           0x00000000U           /*!< RX pin signal works usin
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_INVERTED           (USART_CR2_RXINV)     /*!< RX pin signal values are
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_STANDARD           0x00000000U           /*!< TX pin signal works usin
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_INVERTED           (USART_CR2_TXINV)     /*!< TX pin signal values are
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BINARY_LOGIC Binary Data Inversion
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_POSITIVE          0x00000000U           /*!< Logical data from the da
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_NEGATIVE          USART_CR2_DATAINV     /*!< Logical data from the da
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BITORDER Bit Order
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BITORDER_LSBFIRST              0x00000000U           /*!< data is transmitted/rece
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BITORDER_MSBFIRST              USART_CR2_MSBFIRST    /*!< data is transmitted/rece
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_AUTOBAUD_DETECT_ON Autobaud Detection
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_STARTBIT    0x00000000U                                 /*!< Me
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE USART_CR2_ABRMODE_0                         /*!< Fa
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_FABR_SUPPORT)
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME    USART_CR2_ABRMODE_1                         /*!< 0x
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_55_FRAME    (USART_CR2_ABRMODE_1 | USART_CR2_ABRMODE_0) /*!< 0x
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_ADDRESS_DETECT Address Length Detection
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_4B              0x00000000U           /*!< 4-bit address detection 
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_7B              USART_CR2_ADDM7       /*!< 7-bit address detection 
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 138


 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP_ON Wakeup Activation
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_ADDRESS              0x00000000U                             /*!< Wake u
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_STARTBIT             USART_CR3_WUS_1                         /*!< Wake u
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_RXNE                 (USART_CR3_WUS_0 | USART_CR3_WUS_1)     /*!< Wake u
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DE_POLARITY Driver Enable Polarity
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_HIGH               0x00000000U           /*!< DE signal is active high
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_LOW                USART_CR3_DEP         /*!< DE signal is active low 
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DMA_REG_DATA DMA Register Data
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 139


 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_TRANSMIT          0x00000000U          /*!< Get address of data regis
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_RECEIVE           0x00000001U          /*!< Get address of data regis
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Write a value in USART register
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __REG__ Register to be written
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Read a value in USART register
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __REG__ Register to be read
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Register value
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__) ((((__PERIPHCLK__)*2) + ((__BAUDRATE_
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 140


 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__) (((__PERIPHCLK__) + ((__BAUDRATE__)/
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART Enable
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         flags, in the USARTx_ISR are set to their default values.
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE));
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 141


 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART enabled in STOP Mode.
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When this function is enabled, USART is able to wake up the MCU from Stop mode, provide
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         USART clock selection is HSI or LSE in RCC.
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_EnableInStopMode
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableInStopMode(USART_TypeDef *USARTx)
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UESM);
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART disabled in STOP Mode.
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When this function is disabled, USART is not able to wake up the MCU from Stop mode
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_DisableInStopMode
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableInStopMode(USART_TypeDef *USARTx)
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UESM);
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled in STOP Mode (able to wake up MCU from Stop mode or not)
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_IsEnabledInStopMode
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledInStopMode(USART_TypeDef *USARTx)
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM));
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RE);
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 142


 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Receiver Disable
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Transmitter Enable
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_TE);
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Transmitter Disable
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         of Transmitter and Receiver
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 143


 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 144


 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_SetDataWidth\n
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M1            LL_USART_SetDataWidth
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B (*)
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_GetDataWidth\n
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M1            LL_USART_GetDataWidth
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B (*)
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Allow switch between Mute Mode and Active mode
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_EnableMuteMode
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableMuteMode(USART_TypeDef *USARTx)
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_MME);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 145


 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_DisableMuteMode
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableMuteMode(USART_TypeDef *USARTx)
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_MME);
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_IsEnabledMuteMode
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledMuteMode(USART_TypeDef *USARTx)
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_MME) == (USART_CR1_MME));
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Oversampling mode
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 146


 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 147


 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 148


1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN));
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set the length of the stop bits
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5 (*)
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5 (*)
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 149


1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5 (*)
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5 (*)
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M0            LL_USART_ConfigCharacter\n
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M1            LL_USART_ConfigCharacter\n
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B (*)
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5 (*)
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5 (*)
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                               uint32_t StopBits)
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure TX/RX pins swapping setting.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 150


1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_SetTXRXSwap
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  SwapConfig This parameter can be one of the following values:
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXRXSwap(USART_TypeDef *USARTx, uint32_t SwapConfig)
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_SWAP, SwapConfig);
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_GetTXRXSwap
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXRXSwap(USART_TypeDef *USARTx)
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_SWAP));
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure RX pin active level logic
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_SetRXPinLevel
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_RXINV, PinInvMethod);
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve RX pin active level logic configuration
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_GetRXPinLevel
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXPinLevel(USART_TypeDef *USARTx)
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_RXINV));
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure TX pin active level logic
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_SetTXPinLevel
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 151


1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_TXINV, PinInvMethod);
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve TX pin active level logic configuration
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_GetTXPinLevel
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXPinLevel(USART_TypeDef *USARTx)
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_TXINV));
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Binary data logic.
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_SetBinaryDataLogic
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  DataLogic This parameter can be one of the following values:
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBinaryDataLogic(USART_TypeDef *USARTx, uint32_t DataLogic)
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_DATAINV, DataLogic);
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve Binary data configuration
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_GetBinaryDataLogic
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBinaryDataLogic(USART_TypeDef *USARTx)
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_DATAINV));
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_SetTransferBitOrder
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 152


1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  BitOrder This parameter can be one of the following values:
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferBitOrder(USART_TypeDef *USARTx, uint32_t BitOrder)
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_GetTransferBitOrder
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferBitOrder(USART_TypeDef *USARTx)
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_MSBFIRST));
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Auto Baud-Rate Detection
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_EnableAutoBaudRate
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableAutoBaudRate(USART_TypeDef *USARTx)
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_ABREN);
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Auto Baud-Rate Detection
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_DisableAutoBaudRate
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableAutoBaudRate(USART_TypeDef *USARTx)
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_ABREN);
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Auto Baud-Rate Detection mechanism is enabled
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_IsEnabledAutoBaud
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 153


1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledAutoBaud(USART_TypeDef *USARTx)
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_ABREN) == (USART_CR2_ABREN));
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Auto Baud-Rate mode bits
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_SetAutoBaudRateMode
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  AutoBaudRateMode This parameter can be one of the following values:
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME (*)
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME (*)
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetAutoBaudRateMode(USART_TypeDef *USARTx, uint32_t AutoBaudRateMode)
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ABRMODE, AutoBaudRateMode);
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Auto Baud-Rate mode
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_GetAutoBaudRateMode
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME (*)
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME (*)
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetAutoBaudRateMode(USART_TypeDef *USARTx)
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ABRMODE));
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Receiver Timeout
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_EnableRxTimeout
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRxTimeout(USART_TypeDef *USARTx)
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_RTOEN);
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 154


1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Receiver Timeout
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_DisableRxTimeout
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRxTimeout(USART_TypeDef *USARTx)
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_RTOEN);
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Receiver Timeout feature is enabled
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_IsEnabledRxTimeout
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledRxTimeout(USART_TypeDef *USARTx)
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_RTOEN) == (USART_CR2_RTOEN));
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Address of the USART node.
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         for wake up with address mark detection.
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (b7-b4 should be set to 0)
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         for wake up with 7-bit address mark detection.
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         It may also be used for character detection during normal reception,
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         value and CMF flag is set on match)
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_ConfigNodeAddress\n
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          ADDM7         LL_USART_ConfigNodeAddress
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  AddressLen This parameter can be one of the following values:
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  NodeAddress 4 or 7 bit Address of the USART node.
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigNodeAddress(USART_TypeDef *USARTx, uint32_t AddressLen, uint32_
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_CR2_ADD_Pos)));
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return 8 bit Address of the USART node as set in ADD field of CR2.
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 155


1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD) >> USART_CR2_ADD_Pos);
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ADDM7         LL_USART_GetNodeAddressLen
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddressLen(USART_TypeDef *USARTx)
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADDM7));
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 156


1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable One bit sampling method
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 157


1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable One bit sampling method
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT));
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Overrun detection
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_EnableOverrunDetect
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOverrunDetect(USART_TypeDef *USARTx)
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Overrun detection
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_DisableOverrunDetect
1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOverrunDetect(USART_TypeDef *USARTx)
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Overrun detection is enabled
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_IsEnabledOverrunDetect
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 158


1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOverrunDetect(USART_TypeDef *USARTx)
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS);
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_SetWKUPType
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Type This parameter can be one of the following values:
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWKUPType(USART_TypeDef *USARTx, uint32_t Type)
1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_WUS, Type);
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_GetWKUPType
1600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWKUPType(USART_TypeDef *USARTx)
1607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_WUS));
1609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
1611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (Baud rate value != 0)
1618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 159


1628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                           uint32_t BaudRate)
1630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   register uint32_t usartdiv = 0x0U;
1632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   register uint32_t brrtemp = 0x0U;
1633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
1639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = brrtemp;
1640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
1641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   else
1642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
1645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Baud Rate
1659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t O
1661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   register uint32_t usartdiv = 0x0U;
1663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   register uint32_t brrresult = 0x0U;
1664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     if ((usartdiv & 0xFFF7U) != 0U)
1670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     {
1671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****       usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
1672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
1673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     }
1674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
1675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   else
1676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
1678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     {
1679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
1680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     }
1681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
1682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (brrresult);
1683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 160


1685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Receiver Time Out Value (expressed in nb of bits duration)
1687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_SetRxTimeout
1688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Timeout Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
1690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRxTimeout(USART_TypeDef *USARTx, uint32_t Timeout)
1693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_RTO, Timeout);
1695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Get Receiver Time Out Value (expressed in nb of bits duration)
1699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_GetRxTimeout
1700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
1702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRxTimeout(USART_TypeDef *USARTx)
1704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_RTO));
1706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
1709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Block Length value in reception
1711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_SetBlockLength
1712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  BlockLength Value between Min_Data=0x00 and Max_Data=0xFF
1714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBlockLength(USART_TypeDef *USARTx, uint32_t BlockLength)
1717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_BLEN, BlockLength << USART_RTOR_BLEN_Pos);
1719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Get Block Length value in reception
1723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_GetBlockLength
1724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
1726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBlockLength(USART_TypeDef *USARTx)
1728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_BLEN) >> USART_RTOR_BLEN_Pos);
1730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
1732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
1735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
1738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
1739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
1740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 161


1742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable IrDA mode
1744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
1747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
1751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable IrDA mode
1757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
1760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
1764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
1766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
1770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
1773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
1777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN));
1779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
1783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
1786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
1788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
1790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
1793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
1795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 162


1799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
1802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
1808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
1810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
1814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
1818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
1820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
1829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
1833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
1835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
1837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
1843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
1845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
1847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
1848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
1849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
1853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 163


1856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
1860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
1862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
1866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
1869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
1873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
1875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
1879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
1882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
1886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK));
1888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Smartcard mode
1892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
1895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
1899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Smartcard mode
1905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
1908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
1912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 164


1913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
1914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
1918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
1921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
1925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN));
1927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
1931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   This bit-field specifies the number of retries in transmit and receive, in Smartcard mo
1934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         In transmission mode, it specifies the number of automatic retransmission retries, befo
1935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         generating a transmission error (FE bit set).
1936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         In reception mode, it specifies the number or erroneous reception trials, before genera
1937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         reception error (RXNE and PE bits set)
1938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_SetSmartcardAutoRetryCount
1939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  AutoRetryCount Value between Min_Data=0 and Max_Data=7
1941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardAutoRetryCount(USART_TypeDef *USARTx, uint32_t AutoRetryC
1944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_SCARCNT, AutoRetryCount << USART_CR3_SCARCNT_Pos);
1946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
1950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_GetSmartcardAutoRetryCount
1953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Smartcard Auto-Retry Count value (Value between Min_Data=0 and Max_Data=7)
1955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardAutoRetryCount(USART_TypeDef *USARTx)
1957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_SCARCNT) >> USART_CR3_SCARCNT_Pos);
1959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
1963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
1967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
1969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 165


1970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
1978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
1982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
1984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
1986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
1992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
1996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
1998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
2001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_GT, GuardTime << USART_GTPR_GT_Pos);
2003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
2007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
2008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
2011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
2013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
2015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_GTPR_GT_Pos);
2017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
2021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
2025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
2026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 166


2027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
2030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
2033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
2037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
2043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
2046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
2050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
2056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
2059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
2063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL));
2065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
2069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
2073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
2074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
2078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
2081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
2083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 167


2084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
2088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
2090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
2094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
2097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
2103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
2105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable LIN mode
2109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
2112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
2116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable LIN mode
2122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
2125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
2129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
2131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
2135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
2138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 168


2141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
2142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN));
2144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
2148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_DE Configuration functions related to Driver Enable feature
2152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
2153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set DEDT (Driver Enable De-Assertion Time), Time value expressed on 5 bits ([4:0] bits)
2157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_SetDEDeassertionTime
2160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEDeassertionTime(USART_TypeDef *USARTx, uint32_t Time)
2165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEDT, Time << USART_CR1_DEDT_Pos);
2167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return DEDT (Driver Enable De-Assertion Time)
2171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_GetDEDeassertionTime
2174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEDeassertionTime(USART_TypeDef *USARTx)
2178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEDT) >> USART_CR1_DEDT_Pos);
2180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set DEAT (Driver Enable Assertion Time), Time value expressed on 5 bits ([4:0] bits).
2184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_SetDEAssertionTime
2187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEAssertionTime(USART_TypeDef *USARTx, uint32_t Time)
2192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEAT, Time << USART_CR1_DEAT_Pos);
2194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return DEAT (Driver Enable Assertion Time)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 169


2198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_GetDEAssertionTime
2201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEAssertionTime(USART_TypeDef *USARTx)
2205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEAT) >> USART_CR1_DEAT_Pos);
2207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Driver Enable (DE) Mode
2211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_EnableDEMode
2214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDEMode(USART_TypeDef *USARTx)
2218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DEM);
2220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Driver Enable (DE) Mode
2224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_DisableDEMode
2227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDEMode(USART_TypeDef *USARTx)
2231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DEM);
2233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Driver Enable (DE) Mode is enabled
2237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_IsEnabledDEMode
2240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDEMode(USART_TypeDef *USARTx)
2244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_DEM) == (USART_CR3_DEM));
2246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select Driver Enable Polarity
2250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_SetDESignalPolarity
2253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 170


2255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDESignalPolarity(USART_TypeDef *USARTx, uint32_t Polarity)
2260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_DEP, Polarity);
2262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Driver Enable Polarity
2266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_GetDESignalPolarity
2269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDESignalPolarity(USART_TypeDef *USARTx)
2275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_DEP));
2277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
2281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
2284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
2285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
2289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
2290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register (if LIN feature is supported),
2291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register (if Smartcard feature is supported),
2293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register (if Irda feature is supported),
2294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function (if LIN feature is suppo
2297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function (if Smartcard featu
2299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function (if Irda feature is supp
2300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
2302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
2305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
2306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
2307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
2308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
2309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 171


2312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
2313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
2315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - LINEN (if LIN feature is supported), CLKEN bits in the USART_CR2 register,
2316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - SCEN (if Smartcard feature is supported), IREN (if Irda feature is supported) and HDSEL bits in
2317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
2321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
2325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
2327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
2331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Synchronous Mode
2339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In Synchronous mode, the following bits must be kept cleared:
2340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register (if LIN feature is supported),
2341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register (if Smartcard feature is supported),
2342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register (if Irda feature is supported),
2343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         This function also sets the USART in Synchronous mode.
2345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
2346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
2347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function (if LIN feature is suppo
2349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function (if Irda feature is supp
2350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function (if Smartcard featu
2351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
2353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Synchronous Mode
2354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, Clock Polarity, ...) should be set using
2355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSyncMode\n
2357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSyncMode\n
2358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSyncMode\n
2359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigSyncMode\n
2360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSyncMode
2361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSyncMode(USART_TypeDef *USARTx)
2365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In Synchronous mode, the following bits must be kept cleared:
2367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - LINEN (if LIN feature is supported) bit in the USART_CR2 register,
2368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - SCEN (if Smartcard feature is supported), IREN (if Irda feature is supported) and HDSEL bits in
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 172


2369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
2371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
2375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
2377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
2381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* set the UART/USART in Synchronous mode */
2386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
2387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in LIN Mode
2392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In LIN mode, the following bits must be kept cleared:
2393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
2394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register (if Smartcard feature is supported),
2395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register (if Irda feature is supported),
2396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         This function also set the UART/USART in LIN mode.
2398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function (if Smartcard featu
2404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function (if Irda feature is supp
2405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Set LINEN in CR2 using @ref LL_USART_EnableLIN() function
2407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to LIN Mode
2408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Word length, LIN Break Detection Length, ...) should be set using
2409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_ConfigLINMode\n
2411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigLINMode\n
2412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          LINEN         LL_USART_ConfigLINMode\n
2413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigLINMode\n
2414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigLINMode\n
2415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigLINMode
2416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigLINMode(USART_TypeDef *USARTx)
2420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In LIN mode, the following bits must be kept cleared:
2422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - STOP and CLKEN bits in the USART_CR2 register,
2423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - IREN (if Irda feature is supported), SCEN (if Smartcard feature is supported) and HDSEL bits in
2424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
2425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 173


2426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_SCEN | USART_CR3_HDSEL));
2428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
2430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
2434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* Set the UART/USART in LIN mode */
2439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Half Duplex Mode
2445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In Half Duplex mode, the following bits must be kept cleared:
2446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register (if LIN feature is supported),
2447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register (if Smartcard feature is supported),
2449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register (if Irda feature is supported),
2450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         This function also sets the UART/USART in Half Duplex mode.
2451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function (if LIN feature is suppo
2455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function (if Smartcard featu
2457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function (if Irda feature is supp
2458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Set HDSEL in CR3 using @ref LL_USART_EnableHalfDuplex() function
2459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Half Duplex Mode
2460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigHalfDuplexMode\n
2463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigHalfDuplexMode\n
2464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigHalfDuplexMode\n
2465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigHalfDuplexMode\n
2466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigHalfDuplexMode
2467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigHalfDuplexMode(USART_TypeDef *USARTx)
2471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In Half Duplex mode, the following bits must be kept cleared:
2473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - LINEN (if LIN feature is supported), CLKEN bits in the USART_CR2 register,
2474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - SCEN (if Smartcard feature is supported) and IREN (if Irda feature is supported) bits in the US
2475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
2479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN));
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 174


2483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN));
2485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN));
2489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* set the UART/USART in Half Duplex mode */
2492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Smartcard Mode
2498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In Smartcard mode, the following bits must be kept cleared:
2499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register (if LIN feature is supported),
2500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register (if Irda feature is supported),
2501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         This function also configures Stop bits to 1.5 bits and
2503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         sets the USART in Smartcard mode (SCEN bit).
2504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Clock Output is also enabled (CLKEN).
2505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function (if LIN feature is suppo
2509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function (if Irda feature is supp
2510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
2513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Set SCEN in CR3 using @ref LL_USART_EnableSmartcard() function
2514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Smartcard Mode
2515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSmartcardMode\n
2518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigSmartcardMode\n
2519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSmartcardMode\n
2520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSmartcardMode\n
2521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSmartcardMode
2522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSmartcardMode(USART_TypeDef *USARTx)
2526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In Smartcard mode, the following bits must be kept cleared:
2528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - LINEN (if LIN feature is supported) bit in the USART_CR2 register,
2529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - IREN (if Irda feature is supported) and HDSEL bits in the USART_CR3 register.*/
2530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
2532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
2535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_HDSEL));
2537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* Configure Stop bits to 1.5 bits */
2539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* Synchronous mode is activated by default */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 175


2540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, (USART_CR2_STOP_0 | USART_CR2_STOP_1 | USART_CR2_CLKEN));
2541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* set the UART/USART in Smartcard mode */
2542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
2543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Irda Mode
2549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In IRDA mode, the following bits must be kept cleared:
2550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register (if LIN feature is supported),
2551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
2552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register (if Smartcard feature is supported),
2553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         This function also sets the UART/USART in IRDA mode (IREN bit).
2555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function (if LIN feature is suppo
2559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function (if Smartcard featu
2561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Set IREN in CR3 using @ref LL_USART_EnableIrda() function
2564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Irda Mode
2565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Power mode, ...) should be set using
2566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigIrdaMode\n
2568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigIrdaMode\n
2569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigIrdaMode\n
2570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigIrdaMode\n
2571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigIrdaMode\n
2572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigIrdaMode
2573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigIrdaMode(USART_TypeDef *USARTx)
2577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In IRDA mode, the following bits must be kept cleared:
2579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - LINEN (if LIN feature is supported), STOP and CLKEN bits in the USART_CR2 register,
2580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - SCEN (if Smartcard feature is supported) and HDSEL bits in the USART_CR3 register.*/
2581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN | USART_CR2_STOP));
2583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
2585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
2588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_HDSEL));
2590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* set the UART/USART in IRDA mode */
2592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
2593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 176


2597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Multi processor Mode
2598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (several USARTs connected in a network, one of the USARTs can be the master,
2599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         its TX output connected to the RX inputs of the other slaves USARTs).
2600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In MultiProcessor mode, the following bits must be kept cleared:
2601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register (if LIN feature is supported),
2602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register (if Smartcard feature is supported),
2604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register (if Irda feature is supported),
2605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function (if LIN feature is suppo
2608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function (if Smartcard featu
2610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function (if Irda feature is supp
2611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Multi processor Mode
2613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (as Baud Rate, Wake Up Method, Node address, ...) should be set using
2614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         dedicated functions
2615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigMultiProcessMode\n
2616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigMultiProcessMode\n
2617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigMultiProcessMode\n
2618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigMultiProcessMode\n
2619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigMultiProcessMode
2620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigMultiProcessMode(USART_TypeDef *USARTx)
2624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   /* In Multi Processor mode, the following bits must be kept cleared:
2626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - LINEN (if LIN feature is supported) and CLKEN bits in the USART_CR2 register,
2627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   - IREN (if Irda feature is supported), SCEN (if Smartcard feature is supported) and HDSEL bits in
2628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
2632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
2636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
2638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
2641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
2642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
2643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_HDSEL));
2644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
2650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_FLAG_Management FLAG_Management
2653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 177


2654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Flag is set or not
2658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          PE            LL_USART_IsActiveFlag_PE
2659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_PE(USART_TypeDef *USARTx)
2663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_PE) == (USART_ISR_PE));
2665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Framing Error Flag is set or not
2669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          FE            LL_USART_IsActiveFlag_FE
2670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_FE(USART_TypeDef *USARTx)
2674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_FE) == (USART_ISR_FE));
2676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Noise error detected Flag is set or not
2680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          NF            LL_USART_IsActiveFlag_NE
2681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_NE(USART_TypeDef *USARTx)
2685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_NE) == (USART_ISR_NE));
2687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART OverRun Error Flag is set or not
2691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          ORE           LL_USART_IsActiveFlag_ORE
2692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ORE(USART_TypeDef *USARTx)
2696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_ORE) == (USART_ISR_ORE));
2698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART IDLE line detected Flag is set or not
2702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          IDLE          LL_USART_IsActiveFlag_IDLE
2703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_IDLE(USART_TypeDef *USARTx)
2707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_IDLE) == (USART_ISR_IDLE));
2709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 178


2711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register Not Empty Flag is set or not
2713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          RXNE          LL_USART_IsActiveFlag_RXNE
2714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE(USART_TypeDef *USARTx)
2718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_RXNE) == (USART_ISR_RXNE));
2720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Flag is set or not
2724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          TC            LL_USART_IsActiveFlag_TC
2725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TC(USART_TypeDef *USARTx)
2729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_TC) == (USART_ISR_TC));
2731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Transmit Data Register Empty Flag is set or not
2735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          TXE           LL_USART_IsActiveFlag_TXE
2736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE(USART_TypeDef *USARTx)
2740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_TXE) == (USART_ISR_TXE));
2742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Flag is set or not
2747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          LBDF          LL_USART_IsActiveFlag_LBD
2750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_LBD(USART_TypeDef *USARTx)
2754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_LBDF) == (USART_ISR_LBDF));
2756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART CTS interrupt Flag is set or not
2761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
2762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
2763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          CTSIF         LL_USART_IsActiveFlag_nCTS
2764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_nCTS(USART_TypeDef *USARTx)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 179


2768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_CTSIF) == (USART_ISR_CTSIF));
2770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART CTS Flag is set or not
2774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
2775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
2776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          CTS           LL_USART_IsActiveFlag_CTS
2777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_CTS(USART_TypeDef *USARTx)
2781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_CTS) == (USART_ISR_CTS));
2783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Receiver Time Out Flag is set or not
2787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          RTOF          LL_USART_IsActiveFlag_RTO
2788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RTO(USART_TypeDef *USARTx)
2792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_RTOF) == (USART_ISR_RTOF));
2794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
2797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART End Of Block Flag is set or not
2799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          EOBF          LL_USART_IsActiveFlag_EOB
2802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_EOB(USART_TypeDef *USARTx)
2806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_EOBF) == (USART_ISR_EOBF));
2808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Auto-Baud Rate Error Flag is set or not
2813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
2814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
2815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          ABRE          LL_USART_IsActiveFlag_ABRE
2816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ABRE(USART_TypeDef *USARTx)
2820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_ABRE) == (USART_ISR_ABRE));
2822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 180


2825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Auto-Baud Rate Flag is set or not
2826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
2827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
2828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          ABRF          LL_USART_IsActiveFlag_ABR
2829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ABR(USART_TypeDef *USARTx)
2833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_ABRF) == (USART_ISR_ABRF));
2835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Busy Flag is set or not
2839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          BUSY          LL_USART_IsActiveFlag_BUSY
2840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_BUSY(USART_TypeDef *USARTx)
2844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_BUSY) == (USART_ISR_BUSY));
2846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Character Match Flag is set or not
2850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          CMF           LL_USART_IsActiveFlag_CM
2851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_CM(USART_TypeDef *USARTx)
2855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_CMF) == (USART_ISR_CMF));
2857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Send Break Flag is set or not
2861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          SBKF          LL_USART_IsActiveFlag_SBK
2862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_SBK(USART_TypeDef *USARTx)
2866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_SBKF) == (USART_ISR_SBKF));
2868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Receive Wake Up from mute mode Flag is set or not
2872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          RWU           LL_USART_IsActiveFlag_RWU
2873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RWU(USART_TypeDef *USARTx)
2877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_RWU) == (USART_ISR_RWU));
2879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 181


2882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Wake Up from stop mode Flag is set or not
2884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
2885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
2886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          WUF           LL_USART_IsActiveFlag_WKUP
2887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_WKUP(USART_TypeDef *USARTx)
2891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_WUF) == (USART_ISR_WUF));
2893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
2895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Transmit Enable Acknowledge Flag is set or not
2898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          TEACK         LL_USART_IsActiveFlag_TEACK
2899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TEACK(USART_TypeDef *USARTx)
2903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK));
2905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Receive Enable Acknowledge Flag is set or not
2909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ISR          REACK         LL_USART_IsActiveFlag_REACK
2910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_REACK(USART_TypeDef *USARTx)
2914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK));
2916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Parity Error Flag
2921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          PECF          LL_USART_ClearFlag_PE
2922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_PE(USART_TypeDef *USARTx)
2926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_PECF);
2928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Framing Error Flag
2932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          FECF          LL_USART_ClearFlag_FE
2933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_FE(USART_TypeDef *USARTx)
2937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_FECF);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 182


2939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Noise detected Flag
2943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          NCF           LL_USART_ClearFlag_NE
2944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_NE(USART_TypeDef *USARTx)
2948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_NCF);
2950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear OverRun Error Flag
2954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          ORECF         LL_USART_ClearFlag_ORE
2955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_ORE(USART_TypeDef *USARTx)
2959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_ORECF);
2961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear IDLE line detected Flag
2965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          IDLECF        LL_USART_ClearFlag_IDLE
2966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_IDLE(USART_TypeDef *USARTx)
2970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_IDLECF);
2972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Transmission Complete Flag
2976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          TCCF          LL_USART_ClearFlag_TC
2977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TC(USART_TypeDef *USARTx)
2981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_TCCF);
2983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
2986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
2987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
2988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear LIN Break Detection Flag
2989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          LBDCF         LL_USART_ClearFlag_LBD
2992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
2993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
2994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
2995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_LBD(USART_TypeDef *USARTx)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 183


2996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
2997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_LBDCF);
2998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
2999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
3000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear CTS Interrupt Flag
3003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          CTSCF         LL_USART_ClearFlag_nCTS
3006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_nCTS(USART_TypeDef *USARTx)
3010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_CTSCF);
3012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Receiver Time Out Flag
3016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          RTOCF         LL_USART_ClearFlag_RTO
3017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_RTO(USART_TypeDef *USARTx)
3021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_RTOCF);
3023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
3026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear End Of Block Flag
3028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          EOBCF         LL_USART_ClearFlag_EOB
3031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_EOB(USART_TypeDef *USARTx)
3035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_EOBCF);
3037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
3039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Character Match Flag
3042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          CMCF          LL_USART_ClearFlag_CM
3043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_CM(USART_TypeDef *USARTx)
3047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_CMCF);
3049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
3052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 184


3053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Clear Wake Up from stop mode Flag
3054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll ICR          WUCF          LL_USART_ClearFlag_WKUP
3057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_WKUP(USART_TypeDef *USARTx)
3061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_WUCF);
3063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
3065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
3068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_IT_Management IT_Management
3071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
3072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable IDLE Interrupt
3076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_EnableIT_IDLE
3077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_IDLE(USART_TypeDef *USARTx)
3081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_IDLEIE);
3083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable RX Not Empty Interrupt
3087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_EnableIT_RXNE
3088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RXNE(USART_TypeDef *USARTx)
3092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RXNEIE);
3094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Transmission Complete Interrupt
3098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_EnableIT_TC
3099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TC(USART_TypeDef *USARTx)
3103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_TCIE);
3105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable TX Empty Interrupt
3109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_EnableIT_TXE
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 185


3110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TXE(USART_TypeDef *USARTx)
3114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_TXEIE);
3116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Parity Error Interrupt
3120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_EnableIT_PE
3121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_PE(USART_TypeDef *USARTx)
3125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_PEIE);
3127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Character Match Interrupt
3131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          CMIE          LL_USART_EnableIT_CM
3132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_CM(USART_TypeDef *USARTx)
3136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_CMIE);
3138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Receiver Timeout Interrupt
3142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RTOIE         LL_USART_EnableIT_RTO
3143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RTO(USART_TypeDef *USARTx)
3147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RTOIE);
3149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
3152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable End Of Block Interrupt
3154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          EOBIE         LL_USART_EnableIT_EOB
3157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_EOB(USART_TypeDef *USARTx)
3161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_EOBIE);
3163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
3165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 186


3167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable LIN Break Detection Interrupt
3169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_EnableIT_LBD
3172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_LBD(USART_TypeDef *USARTx)
3176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LBDIE);
3178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
3180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Error Interrupt
3183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
3184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the USARTx_ISR register).
3185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           0: Interrupt is inhibited
3186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the USARTx_ISR register.
3187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_EnableIT_ERROR
3188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_ERROR(USART_TypeDef *USARTx)
3192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_EIE);
3194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable CTS Interrupt
3198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_EnableIT_CTS
3201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_CTS(USART_TypeDef *USARTx)
3205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSIE);
3207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
3210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Wake Up from Stop Mode Interrupt
3212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUFIE         LL_USART_EnableIT_WKUP
3215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_WKUP(USART_TypeDef *USARTx)
3219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_WUFIE);
3221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
3223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 187


3224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable IDLE Interrupt
3227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_DisableIT_IDLE
3228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_IDLE(USART_TypeDef *USARTx)
3232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_IDLEIE);
3234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable RX Not Empty Interrupt
3238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_DisableIT_RXNE
3239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_RXNE(USART_TypeDef *USARTx)
3243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_RXNEIE);
3245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Transmission Complete Interrupt
3249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_DisableIT_TC
3250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TC(USART_TypeDef *USARTx)
3254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_TCIE);
3256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable TX Empty Interrupt
3260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_DisableIT_TXE
3261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TXE(USART_TypeDef *USARTx)
3265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_TXEIE);
3267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Parity Error Interrupt
3271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_DisableIT_PE
3272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_PE(USART_TypeDef *USARTx)
3276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_PEIE);
3278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 188


3281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Character Match Interrupt
3282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          CMIE          LL_USART_DisableIT_CM
3283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_CM(USART_TypeDef *USARTx)
3287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_CMIE);
3289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Receiver Timeout Interrupt
3293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RTOIE         LL_USART_DisableIT_RTO
3294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_RTO(USART_TypeDef *USARTx)
3298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_RTOIE);
3300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
3303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable End Of Block Interrupt
3305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          EOBIE         LL_USART_DisableIT_EOB
3308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_EOB(USART_TypeDef *USARTx)
3312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_EOBIE);
3314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
3316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
3318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable LIN Break Detection Interrupt
3320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_DisableIT_LBD
3323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_LBD(USART_TypeDef *USARTx)
3327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LBDIE);
3329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
3331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Error Interrupt
3334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
3335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the USARTx_ISR register).
3336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           0: Interrupt is inhibited
3337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *           1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the USARTx_ISR register.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 189


3338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_DisableIT_ERROR
3339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_ERROR(USART_TypeDef *USARTx)
3343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_EIE);
3345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable CTS Interrupt
3349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_DisableIT_CTS
3352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_CTS(USART_TypeDef *USARTx)
3356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSIE);
 1296              		.loc 11 3357 0
 1297 00dc A368     		ldr	r3, [r4, #8]
 1298 00de 1E40     		ands	r6, r3
 1299 00e0 A660     		str	r6, [r4, #8]
 1300              	.LVL87:
 1301              	.LBE315:
 1302              	.LBE314:
 1303              	.LBB316:
 1304              	.LBB317:
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 1305              		.loc 11 1552 0
 1306 00e2 A268     		ldr	r2, [r4, #8]
 1307 00e4 154B     		ldr	r3, .L24+40
 1308 00e6 1340     		ands	r3, r2
 1309 00e8 A360     		str	r3, [r4, #8]
 1310              	.LVL88:
 1311              	.LBE317:
 1312              	.LBE316:
 1313              	.LBB318:
 1314              	.LBB319:
3358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
3361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Wake Up from Stop Mode Interrupt
3363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUFIE         LL_USART_DisableIT_WKUP
3366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_WKUP(USART_TypeDef *USARTx)
3370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_WUFIE);
3372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
3374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 190


3375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART IDLE Interrupt  source is enabled or disabled.
3378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_IsEnabledIT_IDLE
3379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_IDLE(USART_TypeDef *USARTx)
3383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_IDLEIE) == (USART_CR1_IDLEIE));
3385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART RX Not Empty Interrupt is enabled or disabled.
3389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_IsEnabledIT_RXNE
3390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_RXNE(USART_TypeDef *USARTx)
3394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_RXNEIE) == (USART_CR1_RXNEIE));
3396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Interrupt is enabled or disabled.
3400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_IsEnabledIT_TC
3401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TC(USART_TypeDef *USARTx)
3405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_TCIE) == (USART_CR1_TCIE));
3407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART TX Empty Interrupt is enabled or disabled.
3411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_IsEnabledIT_TXE
3412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TXE(USART_TypeDef *USARTx)
3416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_TXEIE) == (USART_CR1_TXEIE));
3418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Interrupt is enabled or disabled.
3422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_IsEnabledIT_PE
3423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_PE(USART_TypeDef *USARTx)
3427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_PEIE) == (USART_CR1_PEIE));
3429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 191


3432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Character Match Interrupt is enabled or disabled.
3433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          CMIE          LL_USART_IsEnabledIT_CM
3434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_CM(USART_TypeDef *USARTx)
3438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_CMIE) == (USART_CR1_CMIE));
3440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Receiver Timeout Interrupt is enabled or disabled.
3444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RTOIE         LL_USART_IsEnabledIT_RTO
3445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_RTO(USART_TypeDef *USARTx)
3449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_RTOIE) == (USART_CR1_RTOIE));
3451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
3454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART End Of Block Interrupt is enabled or disabled.
3456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          EOBIE         LL_USART_IsEnabledIT_EOB
3459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_EOB(USART_TypeDef *USARTx)
3463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_EOBIE) == (USART_CR1_EOBIE));
3465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
3467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
3469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Interrupt is enabled or disabled.
3471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_IsEnabledIT_LBD
3474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_LBD(USART_TypeDef *USARTx)
3478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_LBDIE) == (USART_CR2_LBDIE));
3480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
3482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Error Interrupt is enabled or disabled.
3485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_IsEnabledIT_ERROR
3486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 192


3489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_ERROR(USART_TypeDef *USARTx)
3490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_EIE) == (USART_CR3_EIE));
3492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART CTS Interrupt is enabled or disabled.
3496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_IsEnabledIT_CTS
3499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_CTS(USART_TypeDef *USARTx)
3503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_CTSIE) == (USART_CR3_CTSIE));
3505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
3508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if the USART Wake Up from Stop Mode Interrupt is enabled or disabled.
3510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUFIE         LL_USART_IsEnabledIT_WKUP
3513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_WKUP(USART_TypeDef *USARTx)
3517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_WUFIE) == (USART_CR3_WUFIE));
3519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
3521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
3525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_DMA_Management DMA_Management
3528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
3529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable DMA Mode for reception
3533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DMAR          LL_USART_EnableDMAReq_RX
3534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDMAReq_RX(USART_TypeDef *USARTx)
3538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DMAR);
3540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable DMA Mode for reception
3544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DMAR          LL_USART_DisableDMAReq_RX
3545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 193


3546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDMAReq_RX(USART_TypeDef *USARTx)
3549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DMAR);
3551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if DMA Mode is enabled for reception
3555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DMAR          LL_USART_IsEnabledDMAReq_RX
3556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDMAReq_RX(USART_TypeDef *USARTx)
3560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_DMAR) == (USART_CR3_DMAR));
3562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable DMA Mode for transmission
3566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DMAT          LL_USART_EnableDMAReq_TX
3567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDMAReq_TX(USART_TypeDef *USARTx)
3571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DMAT);
3573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable DMA Mode for transmission
3577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DMAT          LL_USART_DisableDMAReq_TX
3578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDMAReq_TX(USART_TypeDef *USARTx)
3582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DMAT);
3584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Check if DMA Mode is enabled for transmission
3588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DMAT          LL_USART_IsEnabledDMAReq_TX
3589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
3592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDMAReq_TX(USART_TypeDef *USARTx)
3593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_DMAT) == (USART_CR3_DMAT));
3595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
3596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
3597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
3598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable DMA Disabling on Reception Error
3599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          DDRE          LL_USART_EnableDMADeactOnRxErr
3600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
3601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
3602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 194


3603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDMADeactOnRxErr(USART_TypeDef *USARTx)
3604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
3605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DDRE);
 1315              		.loc 11 3605 0
 1316 00ea A368     		ldr	r3, [r4, #8]
 1317 00ec 8022     		movs	r2, #128
 1318 00ee 9201     		lsls	r2, r2, #6
 1319 00f0 1343     		orrs	r3, r2
 1320 00f2 A360     		str	r3, [r4, #8]
 1321              	.LVL89:
 1322              	.LBE319:
 1323              	.LBE318:
 1324              	.LBB320:
 1325              	.LBB321:
2320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 1326              		.loc 11 2320 0
 1327 00f4 6268     		ldr	r2, [r4, #4]
 1328 00f6 124B     		ldr	r3, .L24+44
 1329 00f8 1340     		ands	r3, r2
 1330 00fa 6360     		str	r3, [r4, #4]
2332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 1331              		.loc 11 2332 0
 1332 00fc A368     		ldr	r3, [r4, #8]
 1333 00fe 0822     		movs	r2, #8
 1334 0100 9343     		bics	r3, r2
 1335 0102 A360     		str	r3, [r4, #8]
 1336              	.LVL90:
 1337              	.LBE321:
 1338              	.LBE320:
 1339              	.LBB322:
 1340              	.LBB323:
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 1341              		.loc 11 575 0
 1342 0104 2368     		ldr	r3, [r4]
 1343 0106 1D43     		orrs	r5, r3
 1344 0108 2560     		str	r5, [r4]
 1345              	.LVL91:
 1346              	.LBE323:
 1347              	.LBE322:
 446:Src/main.c    **** 
 1348              		.loc 1 446 0
 1349 010a 0EB0     		add	sp, sp, #56
 1350              		@ sp needed
 1351 010c 04BC     		pop	{r2}
 1352 010e 9146     		mov	r9, r2
 1353 0110 F0BD     		pop	{r4, r5, r6, r7, pc}
 1354              	.L25:
 1355 0112 C046     		.align	2
 1356              	.L24:
 1357 0114 00100240 		.word	1073876992
 1358 0118 58000240 		.word	1073872984
 1359 011c EFBFFFFF 		.word	-16401
 1360 0120 FFCFFFFF 		.word	-12289
 1361 0124 FFFCFFFF 		.word	-769
 1362 0128 FFF3FFFF 		.word	-3073
 1363 012c 00000140 		.word	1073807360
 1364 0130 FFFBFFFF 		.word	-1025
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 195


 1365 0134 00E100E0 		.word	-536813312
 1366 0138 00380140 		.word	1073821696
 1367 013c FFEFFFFF 		.word	-4097
 1368 0140 FFF7FFFF 		.word	-2049
 1369              		.cfi_endproc
 1370              	.LFE747:
 1372              		.section	.text.MX_RTC_Init,"ax",%progbits
 1373              		.align	2
 1374              		.code	16
 1375              		.thumb_func
 1377              	MX_RTC_Init:
 1378              	.LFB745:
 241:Src/main.c    **** 
 1379              		.loc 1 241 0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 24
 1382              		@ frame_needed = 0, uses_anonymous_args = 0
 1383 0000 70B5     		push	{r4, r5, r6, lr}
 1384              	.LCFI14:
 1385              		.cfi_def_cfa_offset 16
 1386              		.cfi_offset 4, -16
 1387              		.cfi_offset 5, -12
 1388              		.cfi_offset 6, -8
 1389              		.cfi_offset 14, -4
 1390 0002 86B0     		sub	sp, sp, #24
 1391              	.LCFI15:
 1392              		.cfi_def_cfa_offset 40
 1393              	.LBB324:
 1394              	.LBB325:
 1395              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @file    stm32f0xx_ll_rcc.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief   Header file of RCC LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 196


  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #ifndef __STM32F0xx_LL_RCC_H
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define __STM32F0xx_LL_RCC_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #ifdef __cplusplus
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** extern "C" {
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #include "stm32f0xx.h"
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC)
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL RCC
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Constants RCC Private Constants
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Defines used for the bit position in the register and perform offsets*/
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_HPRE       (uint32_t)4U  /*!< field position in register RCC_CFGR */
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_PPRE1      (uint32_t)8U  /*!< field position in register RCC_CFGR */
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_PLLMUL     (uint32_t)18U /*!< field position in register RCC_CFGR */
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_HSICAL     (uint32_t)8U  /*!< field position in register RCC_CR */
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_HSITRIM    (uint32_t)3U  /*!< field position in register RCC_CR */
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_HSI14TRIM  (uint32_t)3U  /*!< field position in register RCC_CR2 */
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_HSI14CAL   (uint32_t)8U  /*!< field position in register RCC_CR2 */
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_HSI48CAL   (uint32_t)24U /*!< field position in register RCC_CR2 */
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_USART1SW   (uint32_t)0U  /*!< field position in register RCC_CFGR3 */
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_USART2SW   (uint32_t)16U /*!< field position in register RCC_CFGR3 */
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define RCC_POSITION_USART3SW   (uint32_t)18U /*!< field position in register RCC_CFGR3 */
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Private macros ------------------------------------------------------------*/
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Macros RCC Private Macros
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 197


  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /*USE_FULL_LL_DRIVER*/
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Exported types ------------------------------------------------------------*/
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Types RCC Exported Types
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup LL_ES_CLOCK_FREQ Clocks Frequency Structure
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  RCC Clocks Frequency Structure
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** typedef struct
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   uint32_t SYSCLK_Frequency;        /*!< SYSCLK clock frequency */
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   uint32_t HCLK_Frequency;          /*!< HCLK clock frequency */
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   uint32_t PCLK1_Frequency;         /*!< PCLK1 clock frequency */
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** } LL_RCC_ClocksTypeDef;
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Exported constants --------------------------------------------------------*/
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Constants RCC Exported Constants
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_OSC_VALUES Oscillator Values adaptation
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief    Defines used to adapt values of different oscillators
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note     These values could be modified in the user environment according to
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *           HW set-up.
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if !defined  (HSE_VALUE)
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define HSE_VALUE    8000000U  /*!< Value of the HSE oscillator in Hz */
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* HSE_VALUE */
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if !defined  (HSI_VALUE)
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define HSI_VALUE    8000000U  /*!< Value of the HSI oscillator in Hz */
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* HSI_VALUE */
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if !defined  (LSE_VALUE)
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LSE_VALUE    32768U    /*!< Value of the LSE oscillator in Hz */
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* LSE_VALUE */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 198


 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if !defined  (LSI_VALUE)
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LSI_VALUE    32000U    /*!< Value of the LSI oscillator in Hz */
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* LSI_VALUE */
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if !defined  (HSI48_VALUE)
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define HSI48_VALUE  48000000U /*!< Value of the HSI48 oscillator in Hz */
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* HSI48_VALUE */
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CLEAR_FLAG Clear Flags Defines
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_WriteReg function
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYC                RCC_CIR_LSIRDYC     /*!< LSI Ready Interrupt Clear */
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYC                RCC_CIR_LSERDYC     /*!< LSE Ready Interrupt Clear */
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYC                RCC_CIR_HSIRDYC     /*!< HSI Ready Interrupt Clear */
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYC                RCC_CIR_HSERDYC     /*!< HSE Ready Interrupt Clear */
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYC                RCC_CIR_PLLRDYC     /*!< PLL Ready Interrupt Clear */
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSI14RDYC               RCC_CIR_HSI14RDYC  /*!< HSI14 Ready Interrupt Clear */
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSI48RDYC               RCC_CIR_HSI48RDYC  /*!< HSI48 Ready Interrupt Clear */
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_CSSC                   RCC_CIR_CSSC        /*!< Clock Security System Interrupt 
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_GET_FLAG Get Flags Defines
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_ReadReg function
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYF                RCC_CIR_LSIRDYF     /*!< LSI Ready Interrupt flag */
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYF                RCC_CIR_LSERDYF     /*!< LSE Ready Interrupt flag */
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYF                RCC_CIR_HSIRDYF     /*!< HSI Ready Interrupt flag */
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYF                RCC_CIR_HSERDYF     /*!< HSE Ready Interrupt flag */
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYF                RCC_CIR_PLLRDYF     /*!< PLL Ready Interrupt flag */
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSI14RDYF               RCC_CIR_HSI14RDYF  /*!< HSI14 Ready Interrupt flag */
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSI48RDYF               RCC_CIR_HSI48RDYF  /*!< HSI48 Ready Interrupt flag */
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_CSSF                   RCC_CIR_CSSF       /*!< Clock Security System Interrupt f
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_OBLRSTF                RCC_CSR_OBLRSTF         /*!< OBL reset flag */
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_PINRSTF                RCC_CSR_PINRSTF         /*!< PIN reset flag */
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_PORRSTF                RCC_CSR_PORRSTF         /*!< POR/PDR reset flag */
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_SFTRSTF                RCC_CSR_SFTRSTF         /*!< Software Reset flag */
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_IWDGRSTF               RCC_CSR_IWDGRSTF        /*!< Independent Watchdog reset f
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_WWDGRSTF               RCC_CSR_WWDGRSTF        /*!< Window watchdog reset flag *
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_LPWRRSTF               RCC_CSR_LPWRRSTF        /*!< Low-Power reset flag */
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CSR_V18PWRRSTF)
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CSR_V18PWRRSTF             RCC_CSR_V18PWRRSTF      /*!< Reset flag of the 1.8 V doma
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CSR_V18PWRRSTF */
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 199


 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_IT IT Defines
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief    IT defines which can be used with LL_RCC_ReadReg and  LL_RCC_WriteReg functions
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYIE               RCC_CIR_LSIRDYIE      /*!< LSI Ready Interrupt Enable */
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYIE               RCC_CIR_LSERDYIE      /*!< LSE Ready Interrupt Enable */
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYIE               RCC_CIR_HSIRDYIE      /*!< HSI Ready Interrupt Enable */
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYIE               RCC_CIR_HSERDYIE      /*!< HSE Ready Interrupt Enable */
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYIE               RCC_CIR_PLLRDYIE      /*!< PLL Ready Interrupt Enable */
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSI14RDYIE              RCC_CIR_HSI14RDYIE   /*!< HSI14 Ready Interrupt Enable *
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CIR_HSI48RDYIE              RCC_CIR_HSI48RDYIE   /*!< HSI48 Ready Interrupt Enable *
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LSEDRIVE  LSE oscillator drive capability
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_LOW                ((uint32_t)0x00000000U) /*!< Xtal mode lower driving cap
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMLOW          RCC_BDCR_LSEDRV_1 /*!< Xtal mode medium low driving capa
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMHIGH         RCC_BDCR_LSEDRV_0 /*!< Xtal mode medium high driving cap
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_HIGH               RCC_BDCR_LSEDRV   /*!< Xtal mode higher driving capabili
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE  System clock switch
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSI           RCC_CFGR_SW_HSI    /*!< HSI selection as system clock */
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSE           RCC_CFGR_SW_HSE    /*!< HSE selection as system clock */
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_PLL           RCC_CFGR_SW_PLL    /*!< PLL selection as system clock */
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_SW_HSI48)
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSI48         RCC_CFGR_SW_HSI48  /*!< HSI48 selection as system clock 
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_SW_HSI48 */
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE_STATUS  System clock switch status
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSI    RCC_CFGR_SWS_HSI   /*!< HSI used as system clock */
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSE    RCC_CFGR_SWS_HSE   /*!< HSE used as system clock */
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_PLL    RCC_CFGR_SWS_PLL   /*!< PLL used as system clock */
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_SWS_HSI48)
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSI48  RCC_CFGR_SWS_HSI48 /*!< HSI48 used as system clock */
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_SWS_HSI48 */
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 200


 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYSCLK_DIV  AHB prescaler
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_1                RCC_CFGR_HPRE_DIV1   /*!< SYSCLK not divided */
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_2                RCC_CFGR_HPRE_DIV2   /*!< SYSCLK divided by 2 */
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_4                RCC_CFGR_HPRE_DIV4   /*!< SYSCLK divided by 4 */
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_8                RCC_CFGR_HPRE_DIV8   /*!< SYSCLK divided by 8 */
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_16               RCC_CFGR_HPRE_DIV16  /*!< SYSCLK divided by 16 */
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_64               RCC_CFGR_HPRE_DIV64  /*!< SYSCLK divided by 64 */
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_128              RCC_CFGR_HPRE_DIV128 /*!< SYSCLK divided by 128 */
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_256              RCC_CFGR_HPRE_DIV256 /*!< SYSCLK divided by 256 */
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_512              RCC_CFGR_HPRE_DIV512 /*!< SYSCLK divided by 512 */
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB1_DIV  APB low-speed prescaler (APB1)
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_1                  RCC_CFGR_PPRE_DIV1  /*!< HCLK not divided */
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_2                  RCC_CFGR_PPRE_DIV2  /*!< HCLK divided by 2 */
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_4                  RCC_CFGR_PPRE_DIV4  /*!< HCLK divided by 4 */
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_8                  RCC_CFGR_PPRE_DIV8  /*!< HCLK divided by 8 */
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_16                 RCC_CFGR_PPRE_DIV16 /*!< HCLK divided by 16 */
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1SOURCE  MCO1 SOURCE selection
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_NOCLOCK          RCC_CFGR_MCOSEL_NOCLOCK      /*!< MCO output disabled, n
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI14            RCC_CFGR_MCOSEL_HSI14        /*!< HSI14 oscillator clock
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_SYSCLK           RCC_CFGR_MCOSEL_SYSCLK       /*!< SYSCLK selection as MC
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI              RCC_CFGR_MCOSEL_HSI          /*!< HSI selection as MCO s
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSE              RCC_CFGR_MCOSEL_HSE          /*!< HSE selection as MCO s
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSI              RCC_CFGR_MCOSEL_LSI          /*!< LSI selection as MCO s
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSE              RCC_CFGR_MCOSEL_LSE          /*!< LSE selection as MCO s
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_MCOSEL_HSI48)
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI48            RCC_CFGR_MCOSEL_HSI48        /*!< HSI48 selection as MCO
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_MCOSEL_HSI48 */
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLCLK_DIV_2     RCC_CFGR_MCOSEL_PLL_DIV2     /*!< PLL clock divided by 2
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLNODIV)
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLCLK           (RCC_CFGR_MCOSEL_PLL_DIV2 | RCC_CFGR_PLLNODIV) /*!< PLL 
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_PLLNODIV */
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1_DIV  MCO1 prescaler
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_1                  ((uint32_t)0x00000000U)/*!< MCO Clock divided by 1 */
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_MCOPRE)
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_2                  RCC_CFGR_MCOPRE_DIV2   /*!< MCO Clock divided by 2 */
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_4                  RCC_CFGR_MCOPRE_DIV4   /*!< MCO Clock divided by 4 */
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_8                  RCC_CFGR_MCOPRE_DIV8   /*!< MCO Clock divided by 8 */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 201


 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_16                 RCC_CFGR_MCOPRE_DIV16  /*!< MCO Clock divided by 16 */
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_32                 RCC_CFGR_MCOPRE_DIV32  /*!< MCO Clock divided by 32 */
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_64                 RCC_CFGR_MCOPRE_DIV64  /*!< MCO Clock divided by 64 */
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_128                RCC_CFGR_MCOPRE_DIV128 /*!< MCO Clock divided by 128 */
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_MCOPRE */
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PERIPH_FREQUENCY Peripheral clock frequency
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NO         0x00000000U      /*!< No clock enabled for the periphera
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NA         0xFFFFFFFFU      /*!< Frequency cannot be provided as ex
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USART1_CLKSOURCE Peripheral USART clock source selection
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_PCLK1      (uint32_t)((RCC_POSITION_USART1SW << 24) | RCC_CFGR3_USA
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_SYSCLK     (uint32_t)((RCC_POSITION_USART1SW << 24) | RCC_CFGR3_USA
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_LSE        (uint32_t)((RCC_POSITION_USART1SW << 24) | RCC_CFGR3_USA
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_HSI        (uint32_t)((RCC_POSITION_USART1SW << 24) | RCC_CFGR3_USA
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR3_USART2SW)
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_PCLK1      (uint32_t)((RCC_POSITION_USART2SW << 24) | RCC_CFGR3_USA
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_SYSCLK     (uint32_t)((RCC_POSITION_USART2SW << 24) | RCC_CFGR3_USA
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_LSE        (uint32_t)((RCC_POSITION_USART2SW << 24) | RCC_CFGR3_USA
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_HSI        (uint32_t)((RCC_POSITION_USART2SW << 24) | RCC_CFGR3_USA
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR3_USART2SW */
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR3_USART3SW)
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_PCLK1      (uint32_t)((RCC_POSITION_USART3SW << 24) | RCC_CFGR3_USA
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_SYSCLK     (uint32_t)((RCC_POSITION_USART3SW << 24) | RCC_CFGR3_USA
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_LSE        (uint32_t)((RCC_POSITION_USART3SW << 24) | RCC_CFGR3_USA
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE_HSI        (uint32_t)((RCC_POSITION_USART3SW << 24) | RCC_CFGR3_USA
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR3_USART3SW */
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2C1_CLKSOURCE Peripheral I2C clock source selection
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_HSI          RCC_CFGR3_I2C1SW_HSI    /*!< HSI oscillator clock used a
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_SYSCLK       RCC_CFGR3_I2C1SW_SYSCLK /*!< System clock selected as I2
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(CEC)
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CEC_CLKSOURCE Peripheral CEC clock source selection
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CEC_CLKSOURCE_HSI_DIV244    RCC_CFGR3_CECSW_HSI_DIV244 /*!< HSI clock divided by 244
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 202


 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CEC_CLKSOURCE_LSE           RCC_CFGR3_CECSW_LSE        /*!< LSE clock selected as HD
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* CEC */
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USB)
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB_CLKSOURCE Peripheral USB clock source selection
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR3_USBSW_HSI48)
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_HSI48         RCC_CFGR3_USBSW_HSI48   /*!< HSI48 oscillator clock used
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #else
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_NONE          ((uint32_t)0x00000000)  /*!< USB Clock disabled */
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /*RCC_CFGR3_USBSW_HSI48*/
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL           RCC_CFGR3_USBSW_PLLCLK  /*!< PLL selected as USB clock s
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* USB */
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USART1 Peripheral USART get clock source
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE            RCC_POSITION_USART1SW /*!< USART1 Clock source selection
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR3_USART2SW)
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE            RCC_POSITION_USART2SW /*!< USART2 Clock source selection
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR3_USART2SW */
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR3_USART3SW)
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USART3_CLKSOURCE            RCC_POSITION_USART3SW /*!< USART3 Clock source selection
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR3_USART3SW */
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2C1 Peripheral I2C get clock source
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE              RCC_CFGR3_I2C1SW     /*!< I2C1 Clock source selection */
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(CEC)
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CEC Peripheral CEC get clock source
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_CEC_CLKSOURCE               RCC_CFGR3_CECSW            /*!< CEC Clock source selecti
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* CEC */
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USB)
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB Peripheral USB get clock source
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 203


 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE               RCC_CFGR3_USBSW         /*!< USB Clock source selection 
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* USB */
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_CLKSOURCE  RTC clock source selection
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_NONE          0x00000000U                   /*!< No clock used as RTC 
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSE           RCC_BDCR_RTCSEL_0       /*!< LSE oscillator clock used a
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSI           RCC_BDCR_RTCSEL_1       /*!< LSI oscillator clock used a
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_HSE_DIV32     RCC_BDCR_RTCSEL         /*!< HSE oscillator clock divide
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL_MUL PLL Multiplicator factor
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_2                   RCC_CFGR_PLLMUL2  /*!< PLL input clock*2 */
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_3                   RCC_CFGR_PLLMUL3  /*!< PLL input clock*3 */
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_4                   RCC_CFGR_PLLMUL4  /*!< PLL input clock*4 */
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_5                   RCC_CFGR_PLLMUL5  /*!< PLL input clock*5 */
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_6                   RCC_CFGR_PLLMUL6  /*!< PLL input clock*6 */
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_7                   RCC_CFGR_PLLMUL7  /*!< PLL input clock*7 */
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_8                   RCC_CFGR_PLLMUL8  /*!< PLL input clock*8 */
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_9                   RCC_CFGR_PLLMUL9  /*!< PLL input clock*9 */
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_10                  RCC_CFGR_PLLMUL10  /*!< PLL input clock*10 */
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_11                  RCC_CFGR_PLLMUL11  /*!< PLL input clock*11 */
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_12                  RCC_CFGR_PLLMUL12  /*!< PLL input clock*12 */
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_13                  RCC_CFGR_PLLMUL13  /*!< PLL input clock*13 */
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_14                  RCC_CFGR_PLLMUL14  /*!< PLL input clock*14 */
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_15                  RCC_CFGR_PLLMUL15  /*!< PLL input clock*15 */
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_16                  RCC_CFGR_PLLMUL16  /*!< PLL input clock*16 */
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSOURCE PLL SOURCE
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE               RCC_CFGR_PLLSRC_HSE_PREDIV                    /*!< HSE/P
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_PLLSRC_PREDIV1_SUPPORT)
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI               RCC_CFGR_PLLSRC_HSI_PREDIV                    /*!< HSI/P
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_SW_HSI48)
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI48             RCC_CFGR_PLLSRC_HSI48_PREDIV                  /*!< HSI48
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_SW_HSI48 */
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #else
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI_DIV_2         RCC_CFGR_PLLSRC_HSI_DIV2                      /*!< HSI c
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_1         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV1)    
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_2         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV2)    
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_3         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV3)    
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_4         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV4)    
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_5         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV5)    
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 204


 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_6         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV6)    
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_7         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV7)    
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_8         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV8)    
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_9         (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV9)    
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_10        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV10)   
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_11        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV11)   
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_12        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV12)   
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_13        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV13)   
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_14        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV14)   
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_15        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV15)   
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_16        (RCC_CFGR_PLLSRC_HSE_PREDIV | RCC_CFGR2_PREDIV_DIV16)   
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_PLLSRC_PREDIV1_SUPPORT */
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PREDIV_DIV PREDIV Division factor
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_1                RCC_CFGR2_PREDIV_DIV1   /*!< PREDIV input clock not divi
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_2                RCC_CFGR2_PREDIV_DIV2   /*!< PREDIV input clock divided 
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_3                RCC_CFGR2_PREDIV_DIV3   /*!< PREDIV input clock divided 
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_4                RCC_CFGR2_PREDIV_DIV4   /*!< PREDIV input clock divided 
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_5                RCC_CFGR2_PREDIV_DIV5   /*!< PREDIV input clock divided 
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_6                RCC_CFGR2_PREDIV_DIV6   /*!< PREDIV input clock divided 
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_7                RCC_CFGR2_PREDIV_DIV7   /*!< PREDIV input clock divided 
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_8                RCC_CFGR2_PREDIV_DIV8   /*!< PREDIV input clock divided 
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_9                RCC_CFGR2_PREDIV_DIV9   /*!< PREDIV input clock divided 
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_10               RCC_CFGR2_PREDIV_DIV10  /*!< PREDIV input clock divided 
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_11               RCC_CFGR2_PREDIV_DIV11  /*!< PREDIV input clock divided 
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_12               RCC_CFGR2_PREDIV_DIV12  /*!< PREDIV input clock divided 
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_13               RCC_CFGR2_PREDIV_DIV13  /*!< PREDIV input clock divided 
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_14               RCC_CFGR2_PREDIV_DIV14  /*!< PREDIV input clock divided 
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_15               RCC_CFGR2_PREDIV_DIV15  /*!< PREDIV input clock divided 
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_16               RCC_CFGR2_PREDIV_DIV16  /*!< PREDIV input clock divided 
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Exported macro ------------------------------------------------------------*/
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Macros RCC Exported Macros
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_WRITE_READ Common Write and read registers Macros
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Write a value in RCC register
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __REG__ Register to be written
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __VALUE__ Value to be written in the register
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 205


 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_WriteReg(__REG__, __VALUE__) WRITE_REG(RCC->__REG__, (__VALUE__))
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Read a value in RCC register
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __REG__ Register to be read
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Register value
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define LL_RCC_ReadReg(__REG__) READ_REG(RCC->__REG__)
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_CALC_FREQ Calculate frequencies
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_PLLSRC_PREDIV1_SUPPORT)
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE, @ref LL_RCC_PLL_GetMultiplicator()
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *             , @ref LL_RCC_PLL_GetPrediv());
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE/HSI/HSI48)
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __PLLMUL__ This parameter can be one of the following values:
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_2
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_10
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_11
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_13
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_14
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_15
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __PLLPREDIV__ This parameter can be one of the following values:
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_1
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_2
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_3
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_4
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_5
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_6
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_7
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_8
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_9
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_10
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_11
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_12
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_13
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_14
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_15
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_16
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 206


 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLMUL__, __PLLPREDIV__) \
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****           (((__INPUTFREQ__) / ((((__PLLPREDIV__) & RCC_CFGR2_PREDIV) + 1U))) * ((((__PLLMUL__) & RC
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #else
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE / (@ref LL_RCC_PLL_GetPrediv () + 1), @ref 
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE div Prediv / HSI div 2)
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __PLLMUL__ This parameter can be one of the following values:
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_2
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_10
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_11
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_13
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_14
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_15
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLMUL__) \
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****           ((__INPUTFREQ__) * ((((__PLLMUL__) & RCC_CFGR_PLLMUL) >> RCC_POSITION_PLLMUL) + 2U))
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_PLLSRC_PREDIV1_SUPPORT */
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the HCLK frequency
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note: __AHBPRESCALER__ be retrieved by @ref LL_RCC_GetAHBPrescaler
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_HCLK_FREQ(LL_RCC_GetAHBPrescaler())
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __SYSCLKFREQ__ SYSCLK frequency (based on HSE/HSI/PLLCLK)
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __AHBPRESCALER__ This parameter can be one of the following values:
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval HCLK clock frequency (in Hz)
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define __LL_RCC_CALC_HCLK_FREQ(__SYSCLKFREQ__, __AHBPRESCALER__) ((__SYSCLKFREQ__) >> AHBPrescTabl
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK1 frequency (ABP1)
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note: __APB1PRESCALER__ be retrieved by @ref LL_RCC_GetAPB1Prescaler
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_PCLK1_FREQ(LL_RCC_GetAPB1Prescaler())
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  __APB1PRESCALER__ This parameter can be one of the following values:
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 207


 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval PCLK1 clock frequency (in Hz)
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK1_FREQ(__HCLKFREQ__, __APB1PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /* Exported functions --------------------------------------------------------*/
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Functions RCC Exported Functions
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSE HSE
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable the Clock Security System.
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           CSSON         LL_RCC_HSE_EnableCSS
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableCSS(void)
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_CSSON);
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable the Clock Security System.
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note Cannot be disabled in HSE is ready (only by hardware)
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           CSSON         LL_RCC_HSE_DisableCSS
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_DisableCSS(void)
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON);
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable HSE external oscillator (HSE Bypass)
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_EnableBypass
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableBypass(void)
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEBYP);
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable HSE external oscillator (HSE Bypass)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 208


 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_DisableBypass
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_DisableBypass(void)
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable HSE crystal oscillator (HSE ON)
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Enable
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Enable(void)
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEON);
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable HSE crystal oscillator (HSE ON)
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Disable
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Disable(void)
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON);
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if HSE oscillator Ready
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSERDY        LL_RCC_HSE_IsReady
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_IsReady(void)
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY));
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI HSI
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable HSI oscillator
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Enable
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Enable(void)
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSION);
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 209


 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable HSI oscillator
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Disable
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Disable(void)
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if HSI clock is ready
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY));
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get HSI Calibration value
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note When HSITRIM is written, HSICAL is updated with the sum of
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *       HSITRIM and the factory trim value
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR        HSICAL        LL_RCC_HSI_GetCalibration
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibration(void)
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_HSICAL) >> RCC_CR_HSICAL_Pos);
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Set HSI Calibration trimming
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the HSICAL
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note Default value is 16, which, when added to the HSICAL value,
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *       should trim the HSI to 16 MHz +/- 1 %
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR        HSITRIM       LL_RCC_HSI_SetCalibTrimming
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Value between Min_Data = 0x00 and Max_Data = 0x1F
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_SetCalibTrimming(uint32_t Value)
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, Value << RCC_CR_HSITRIM_Pos);
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get HSI Calibration trimming
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR        HSITRIM       LL_RCC_HSI_GetCalibTrimming
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1F
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibTrimming(void)
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_Pos);
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 210


 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI48 HSI48
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable HSI48
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI48ON       LL_RCC_HSI48_Enable
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_Enable(void)
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR2, RCC_CR2_HSI48ON);
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable HSI48
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI48ON       LL_RCC_HSI48_Disable
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_Disable(void)
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR2, RCC_CR2_HSI48ON);
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if HSI48 oscillator Ready
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI48RDY      LL_RCC_HSI48_IsReady
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_IsReady(void)
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR2, RCC_CR2_HSI48RDY) == (RCC_CR2_HSI48RDY));
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get HSI48 Calibration value
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI48CAL      LL_RCC_HSI48_GetCalibration
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_GetCalibration(void)
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR2, RCC_CR2_HSI48CAL) >> RCC_POSITION_HSI48CAL);
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI14 HSI14
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 211


 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable HSI14
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14ON       LL_RCC_HSI14_Enable
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI14_Enable(void)
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR2, RCC_CR2_HSI14ON);
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable HSI14
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14ON       LL_RCC_HSI14_Disable
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI14_Disable(void)
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR2, RCC_CR2_HSI14ON);
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if HSI14 oscillator Ready
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14RDY      LL_RCC_HSI14_IsReady
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI14_IsReady(void)
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR2, RCC_CR2_HSI14RDY) == (RCC_CR2_HSI14RDY));
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  ADC interface can turn on the HSI14 oscillator
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14DIS      LL_RCC_HSI14_EnableADCControl
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI14_EnableADCControl(void)
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR2, RCC_CR2_HSI14DIS);
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  ADC interface can not turn on the HSI14 oscillator
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14DIS      LL_RCC_HSI14_DisableADCControl
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI14_DisableADCControl(void)
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR2, RCC_CR2_HSI14DIS);
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Set HSI14 Calibration trimming
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the HSI14CAL
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note Default value is 16, which, when added to the HSI14CAL value,
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *       should trim the HSI14 to 14 MHz +/- 1 %
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14TRIM     LL_RCC_HSI14_SetCalibTrimming
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Value between Min_Data = 0x00 and Max_Data = 0xFF
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 212


 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI14_SetCalibTrimming(uint32_t Value)
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CR2, RCC_CR2_HSI14TRIM, Value << RCC_POSITION_HSI14TRIM);
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get HSI14 Calibration value
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note When HSI14TRIM is written, HSI14CAL is updated with the sum of
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *       HSI14TRIM and the factory trim value
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14TRIM     LL_RCC_HSI14_GetCalibTrimming
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1F
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI14_GetCalibTrimming(void)
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR2, RCC_CR2_HSI14TRIM) >> RCC_POSITION_HSI14TRIM);
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get HSI14 Calibration trimming
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR2          HSI14CAL      LL_RCC_HSI14_GetCalibration
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1F
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI14_GetCalibration(void)
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR2, RCC_CR2_HSI14CAL) >> RCC_POSITION_HSI14CAL);
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSE LSE
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable  Low Speed External (LSE) crystal.
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Enable
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Enable(void)
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable  Low Speed External (LSE) crystal.
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Disable
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Disable(void)
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 213


 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable external clock source (LSE bypass).
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_EnableBypass
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableBypass(void)
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable external clock source (LSE bypass).
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_DisableBypass
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableBypass(void)
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Set LSE oscillator drive capability
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note The oscillator is in Xtal mode when it is not in bypass mode.
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSEDRV        LL_RCC_LSE_SetDriveCapability
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  LSEDrive This parameter can be one of the following values:
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_SetDriveCapability(uint32_t LSEDrive)
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_LSEDRV, LSEDrive);
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get LSE oscillator drive capability
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSEDRV        LL_RCC_LSE_GetDriveCapability
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_GetDriveCapability(void)
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_LSEDRV));
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if LSE oscillator Ready
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         LSERDY        LL_RCC_LSE_IsReady
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsReady(void)
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 214


1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == (RCC_BDCR_LSERDY));
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSI LSI
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable LSI Oscillator
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Enable
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Enable(void)
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSION);
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable LSI Oscillator
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Disable
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Disable(void)
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if LSI is Ready
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CSR          LSIRDY        LL_RCC_LSI_IsReady
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSI_IsReady(void)
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == (RCC_CSR_LSIRDY));
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_System System
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure the system clock source
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         SW            LL_RCC_SetSysClkSource
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSI
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSI48 (*)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 215


1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get the system clock source
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         SWS           LL_RCC_GetSysClkSource
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI48 (*)
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Set AHB prescaler
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_SetAHBPrescaler
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Set APB1 prescaler
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE         LL_RCC_SetAPB1Prescaler
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 216


1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, Prescaler);
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get AHB prescaler
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_GetAHBPrescaler
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAHBPrescaler(void)
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get APB1 prescaler
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE         LL_RCC_GetAPB1Prescaler
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE));
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MCO MCO
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure MCOx
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         MCO           LL_RCC_ConfigMCO\n
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR         MCOPRE        LL_RCC_ConfigMCO\n
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR         PLLNODIV      LL_RCC_ConfigMCO
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  MCOxSource This parameter can be one of the following values:
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_NOCLOCK
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI14
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_SYSCLK
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSE
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 217


1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSI
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSE
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI48 (*)
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLCLK (*)
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLCLK_DIV_2
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  MCOxPrescaler This parameter can be one of the following values:
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_1
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_2 (*)
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_4 (*)
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_8 (*)
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_16 (*)
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_32 (*)
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_64 (*)
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_128 (*)
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ConfigMCO(uint32_t MCOxSource, uint32_t MCOxPrescaler)
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_MCOPRE)
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLNODIV)
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE | RCC_CFGR_PLLNODIV, MCOxSource | MCOxPre
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #else
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE, MCOxSource | MCOxPrescaler);
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_PLLNODIV */
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #else
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL, MCOxSource);
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* RCC_CFGR_MCOPRE */
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_Peripheral_Clock_Source Peripheral Clock Source
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure USARTx clock source
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        USART1SW      LL_RCC_SetUSARTClockSource\n
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR3        USART2SW      LL_RCC_SetUSARTClockSource\n
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR3        USART3SW      LL_RCC_SetUSARTClockSource
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  USARTxSource This parameter can be one of the following values:
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_PCLK1
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_SYSCLK
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_LSE
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_HSI
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_PCLK1 (*)
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_SYSCLK (*)
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_LSE (*)
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_HSI (*)
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_PCLK1 (*)
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_SYSCLK (*)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 218


1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_LSE (*)
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_HSI (*)
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSARTClockSource(uint32_t USARTxSource)
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR3, (RCC_CFGR3_USART1SW << ((USARTxSource  & 0xFF000000U) >> 24U)), (USARTxSou
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure I2Cx clock source
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        I2C1SW        LL_RCC_SetI2CClockSource
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  I2CxSource This parameter can be one of the following values:
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_HSI
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_SYSCLK
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetI2CClockSource(uint32_t I2CxSource)
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR3, RCC_CFGR3_I2C1SW, I2CxSource);
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(CEC)
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure CEC clock source
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        CECSW         LL_RCC_SetCECClockSource
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  CECxSource This parameter can be one of the following values:
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE_HSI_DIV244
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE_LSE
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetCECClockSource(uint32_t CECxSource)
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR3, RCC_CFGR3_CECSW, CECxSource);
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* CEC */
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USB)
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure USB clock source
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        USBSW         LL_RCC_SetUSBClockSource
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  USBxSource This parameter can be one of the following values:
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_HSI48 (*)
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_NONE (*)
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSBClockSource(uint32_t USBxSource)
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR3, RCC_CFGR3_USBSW, USBxSource);
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* USB */
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 219


1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get USARTx clock source
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        USART1SW      LL_RCC_GetUSARTClockSource\n
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR3        USART2SW      LL_RCC_GetUSARTClockSource\n
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR3        USART3SW      LL_RCC_GetUSARTClockSource
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  USARTx This parameter can be one of the following values:
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE (*)
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE (*)
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_PCLK1
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_SYSCLK
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_LSE
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_HSI
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_PCLK1 (*)
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_SYSCLK (*)
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_LSE (*)
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_HSI (*)
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_PCLK1 (*)
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_SYSCLK (*)
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_LSE (*)
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART3_CLKSOURCE_HSI (*)
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSARTClockSource(uint32_t USARTx)
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR3, (RCC_CFGR3_USART1SW << USARTx)) | (USARTx << 24U));
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get I2Cx clock source
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        I2C1SW        LL_RCC_GetI2CClockSource
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  I2Cx This parameter can be one of the following values:
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_HSI
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2C1_CLKSOURCE_SYSCLK
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetI2CClockSource(uint32_t I2Cx)
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR3, I2Cx));
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(CEC)
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get CEC clock source
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        CECSW         LL_RCC_GetCECClockSource
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  CECx This parameter can be one of the following values:
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE_HSI_DIV244
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_CEC_CLKSOURCE_LSE
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetCECClockSource(uint32_t CECx)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 220


1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR3, CECx));
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* CEC */
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(USB)
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get USBx clock source
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR3        USBSW         LL_RCC_GetUSBClockSource
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  USBx This parameter can be one of the following values:
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_HSI48 (*)
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_NONE (*)
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSBClockSource(uint32_t USBx)
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR3, USBx));
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #endif /* USB */
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_RTC RTC
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Set RTC Clock Source
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note Once the RTC clock source has been selected, it cannot be changed any more unless
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *       the Backup domain is reset. The BDRST bit can be used to reset them.
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_SetRTCClockSource
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE_DIV32
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRTCClockSource(uint32_t Source)
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_RTCSEL, Source);
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Get RTC Clock Source
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_GetRTCClockSource
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE_DIV32
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 221


1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRTCClockSource(void)
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL));
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable RTC
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_EnableRTC
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_EnableRTC(void)
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
 1396              		.loc 12 1466 0
 1397 0004 174A     		ldr	r2, .L27
 1398 0006 136A     		ldr	r3, [r2, #32]
 1399 0008 8021     		movs	r1, #128
 1400 000a 0902     		lsls	r1, r1, #8
 1401 000c 0B43     		orrs	r3, r1
 1402 000e 1362     		str	r3, [r2, #32]
 1403              	.LBE325:
 1404              	.LBE324:
 252:Src/main.c    ****     RTC_InitStruct.AsynchPrescaler = 127;
 1405              		.loc 1 252 0
 1406 0010 0025     		movs	r5, #0
 1407 0012 0395     		str	r5, [sp, #12]
 253:Src/main.c    ****     RTC_InitStruct.SynchPrescaler = 255;
 1408              		.loc 1 253 0
 1409 0014 7F23     		movs	r3, #127
 1410 0016 0493     		str	r3, [sp, #16]
 254:Src/main.c    ****     LL_RTC_Init(RTC, &RTC_InitStruct);
 1411              		.loc 1 254 0
 1412 0018 FF26     		movs	r6, #255
 1413 001a 0596     		str	r6, [sp, #20]
 255:Src/main.c    **** 
 1414              		.loc 1 255 0
 1415 001c 124C     		ldr	r4, .L27+4
 1416 001e 03A9     		add	r1, sp, #12
 1417 0020 2000     		movs	r0, r4
 1418 0022 FFF7FEFF 		bl	LL_RTC_Init
 1419              	.LVL92:
 1420              	.LBB326:
 1421              	.LBB327:
 1422              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @file    stm32f0xx_ll_rtc.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief   Header file of RTC LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * are permitted provided that the following conditions are met:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 222


  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #ifndef __STM32F0xx_LL_RTC_H
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __STM32F0xx_LL_RTC_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #ifdef __cplusplus
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** extern "C" {
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #include "stm32f0xx.h"
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC)
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL RTC
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_Private_Constants RTC Private Constants
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Masks Definition */
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_INIT_MASK                 0xFFFFFFFFU
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_RSF_MASK                  0xFFFFFF5FU
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Write protection defines */
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_DISABLE  ((uint8_t)0xFFU)
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_ENABLE_1 ((uint8_t)0xCAU)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 223


  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_ENABLE_2 ((uint8_t)0x53U)
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Defines used to combine date & time */
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_OFFSET_WEEKDAY            24U
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_OFFSET_DAY                16U
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_OFFSET_MONTH              8U
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_OFFSET_HOUR               16U
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_OFFSET_MINUTE             8U
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Private macros ------------------------------------------------------------*/
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_Private_Macros RTC Private Macros
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /*USE_FULL_LL_DRIVER*/
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Exported types ------------------------------------------------------------*/
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_ES_INIT RTC Exported Init structure
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  RTC Init structures definition
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** typedef struct
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint32_t HourFormat;   /*!< Specifies the RTC Hours Format.
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               This parameter can be a value of @ref RTC_LL_EC_HOURFORMAT
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               @ref LL_RTC_SetHourFormat(). */
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint32_t AsynchPrescaler; /*!< Specifies the RTC Asynchronous Predivider value.
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               This parameter must be a number between Min_Data = 0x00 and Max_Data 
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               @ref LL_RTC_SetAsynchPrescaler(). */
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint32_t SynchPrescaler;  /*!< Specifies the RTC Synchronous Predivider value.
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               This parameter must be a number between Min_Data = 0x00 and Max_Data 
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               @ref LL_RTC_SetSynchPrescaler(). */
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** } LL_RTC_InitTypeDef;
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  RTC Time structure definition
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** typedef struct
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 224


 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint32_t TimeFormat; /*!< Specifies the RTC AM/PM Time.
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This parameter can be a value of @ref RTC_LL_EC_TIME_FORMAT
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t Hours;       /*!< Specifies the RTC Time Hours.
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 12 
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 23 
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t Minutes;     /*!< Specifies the RTC Time Minutes.
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 59
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t Seconds;     /*!< Specifies the RTC Time Seconds.
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 59
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** } LL_RTC_TimeTypeDef;
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  RTC Date structure definition
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** typedef struct
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t WeekDay;  /*!< Specifies the RTC Date WeekDay.
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This parameter can be a value of @ref RTC_LL_EC_WEEKDAY
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t Month;    /*!< Specifies the RTC Date Month.
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This parameter can be a value of @ref RTC_LL_EC_MONTH
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t Day;      /*!< Specifies the RTC Date Day.
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This parameter must be a number between Min_Data = 1 and Max_Data = 31
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t Year;     /*!< Specifies the RTC Date Year.
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This parameter must be a number between Min_Data = 0 and Max_Data = 99
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** } LL_RTC_DateTypeDef;
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  RTC Alarm structure definition
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** typedef struct
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   LL_RTC_TimeTypeDef AlarmTime;  /*!< Specifies the RTC Alarm Time members. */
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint32_t AlarmMask;            /*!< Specifies the RTC Alarm Masks.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 225


 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       This parameter can be a value of @ref RTC_LL_EC_ALMA_MASK
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                  */
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint32_t AlarmDateWeekDaySel;  /*!< Specifies the RTC Alarm is on day or WeekDay.
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       This parameter can be a value of @ref RTC_LL_EC_ALMA_WEEKDAY_
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                  */
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t AlarmDateWeekDay;      /*!< Specifies the RTC Alarm Day/WeekDay.
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       If AlarmDateWeekDaySel set to day, this parameter  must be a 
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       If AlarmDateWeekDaySel set to Weekday, this parameter can be 
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                  */
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** } LL_RTC_AlarmTypeDef;
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* USE_FULL_LL_DRIVER */
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Exported constants --------------------------------------------------------*/
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Constants RTC Exported Constants
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_FORMAT FORMAT
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_FORMAT_BIN                  0x000000000U /*!< Binary data format */
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_FORMAT_BCD                  0x000000001U /*!< BCD data format */
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_WEEKDAY_SELECTION RTC Alarm A Date WeekDay
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_DATEWEEKDAYSEL_DATE    0x00000000U             /*!< Alarm A Date is selected */
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_DATEWEEKDAYSEL_WEEKDAY RTC_ALRMAR_WDSEL        /*!< Alarm A WeekDay is selected
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* USE_FULL_LL_DRIVER */
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_GET_FLAG Get Flags Defines
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief    Flags defines which can be used with LL_RTC_ReadReg function
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 226


 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_RECALPF                 RTC_ISR_RECALPF
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP3F                  RTC_ISR_TAMP3F
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP2F                  RTC_ISR_TAMP2F
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP1F                  RTC_ISR_TAMP1F
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_TSOVF                   RTC_ISR_TSOVF
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_TSF                     RTC_ISR_TSF
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_WUTF                    RTC_ISR_WUTF
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_ALRAF                   RTC_ISR_ALRAF
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_INITF                   RTC_ISR_INITF
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_RSF                     RTC_ISR_RSF
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_INITS                   RTC_ISR_INITS
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_SHPF                    RTC_ISR_SHPF
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_WUTWF                   RTC_ISR_WUTWF
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_ALRAWF                  RTC_ISR_ALRAWF
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_IT IT Defines
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief    IT defines which can be used with LL_RTC_ReadReg and  LL_RTC_WriteReg functions
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CR_TSIE                     RTC_CR_TSIE
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CR_WUTIE                    RTC_CR_WUTIE
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CR_ALRAIE                   RTC_CR_ALRAIE
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAFCR_TAMPIE               RTC_TAFCR_TAMPIE
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_WEEKDAY  WEEK DAY
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_MONDAY              ((uint8_t)0x01U) /*!< Monday    */
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_TUESDAY             ((uint8_t)0x02U) /*!< Tuesday   */
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_WEDNESDAY           ((uint8_t)0x03U) /*!< Wednesday */
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_THURSDAY            ((uint8_t)0x04U) /*!< Thrusday  */
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_FRIDAY              ((uint8_t)0x05U) /*!< Friday    */
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_SATURDAY            ((uint8_t)0x06U) /*!< Saturday  */
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_SUNDAY              ((uint8_t)0x07U) /*!< Sunday    */
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_MONTH  MONTH
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_JANUARY               ((uint8_t)0x01U)  /*!< January   */
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_FEBRUARY              ((uint8_t)0x02U)  /*!< February  */
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_MARCH                 ((uint8_t)0x03U)  /*!< March     */
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_APRIL                 ((uint8_t)0x04U)  /*!< April     */
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_MAY                   ((uint8_t)0x05U)  /*!< May       */
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_JUNE                  ((uint8_t)0x06U)  /*!< June      */
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_JULY                  ((uint8_t)0x07U)  /*!< July      */
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_AUGUST                ((uint8_t)0x08U)  /*!< August    */
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_SEPTEMBER             ((uint8_t)0x09U)  /*!< September */
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_OCTOBER               ((uint8_t)0x10U)  /*!< October   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 227


 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_NOVEMBER              ((uint8_t)0x11U)  /*!< November  */
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_DECEMBER              ((uint8_t)0x12U)  /*!< December  */
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_HOURFORMAT  HOUR FORMAT
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_HOURFORMAT_24HOUR           0x00000000U           /*!< 24 hour/day format */
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_HOURFORMAT_AMPM             RTC_CR_FMT            /*!< AM/PM hour format */
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALARMOUT  ALARM OUTPUT
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_DISABLE            0x00000000U             /*!< Output disabled */
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_ALMA               RTC_CR_OSEL_0           /*!< Alarm A output enabled */
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_ALMB               RTC_CR_OSEL_1           /*!< Alarm B output enabled */
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_WAKEUP             RTC_CR_OSEL             /*!< Wakeup output enabled */
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALARM_OUTPUTTYPE  ALARM OUTPUT TYPE
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN  0x00000000U                          /*!< RTC_ALARM, whe
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL   RTC_TAFCR_ALARMOUTTYPE /*!< RTC_ALARM, when mapped on PC
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_PIN PIN
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_PIN_PC13                    RTC_TAFCR_PC13MODE    /*!< PC13 is forced to push-pull o
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_PIN_PC14                    RTC_TAFCR_PC14MODE    /*!< PC14 is forced to push-pull o
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_PIN_PC15                    RTC_TAFCR_PC15MODE    /*!< PC15 is forced to push-pull o
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_OUTPUTPOLARITY_PIN  OUTPUT POLARITY PIN
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_OUTPUTPOLARITY_PIN_HIGH     0x00000000U           /*!< Pin is high when ALRAF/ALRBF/
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_OUTPUTPOLARITY_PIN_LOW      RTC_CR_POL            /*!< Pin is low when ALRAF/ALRBF/W
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TIME_FORMAT TIME FORMAT
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 228


 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TIME_FORMAT_AM_OR_24        0x00000000U           /*!< AM or 24-hour format */
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TIME_FORMAT_PM              RTC_TR_PM             /*!< PM */
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_SHIFT_SECOND  SHIFT SECOND
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_SHIFT_SECOND_DELAY          0x00000000U           /* Delay (seconds) = SUBFS / (PRED
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_SHIFT_SECOND_ADVANCE        RTC_SHIFTR_ADD1S      /* Advance (seconds) = (1 - (SUBFS
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_MASK  ALARMA MASK
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_NONE              0x00000000U             /*!< No masks applied on Alarm A
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_DATEWEEKDAY       RTC_ALRMAR_MSK4         /*!< Date/day do not care in Ala
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_HOURS             RTC_ALRMAR_MSK3         /*!< Hours do not care in Alarm 
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_MINUTES           RTC_ALRMAR_MSK2         /*!< Minutes do not care in Alar
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_SECONDS           RTC_ALRMAR_MSK1         /*!< Seconds do not care in Alar
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_ALL               (RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | R
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_TIME_FORMAT  ALARMA TIME FORMAT
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_TIME_FORMAT_AM         0x00000000U           /*!< AM or 24-hour format */
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_TIME_FORMAT_PM         RTC_ALRMAR_PM         /*!< PM */
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TIMESTAMP_EDGE  TIMESTAMP EDGE
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TIMESTAMP_EDGE_RISING       0x00000000U           /*!< RTC_TS input rising edge gene
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TIMESTAMP_EDGE_FALLING      RTC_CR_TSEDGE         /*!< RTC_TS input falling edge gen
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TS_TIME_FORMAT  TIMESTAMP TIME FORMAT
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TS_TIME_FORMAT_AM           0x00000000U           /*!< AM or 24-hour format */
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TS_TIME_FORMAT_PM           RTC_TSTR_PM           /*!< PM */
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER  TAMPER
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 229


 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_1                    RTC_TAFCR_TAMP1E /*!< RTC_TAMP1 input detection */
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_2                    RTC_TAFCR_TAMP2E /*!< RTC_TAMP2 input detection */
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_3                    RTC_TAFCR_TAMP3E /*!< RTC_TAMP3 input detection */
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_MASK  TAMPER MASK
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER1         RTC_TAFCR_TAMP1MF /*!< Tamper 1 event generates a trigge
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER2         RTC_TAFCR_TAMP2MF /*!< Tamper 2 event generates a trigge
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER3         RTC_TAFCR_TAMP3MF /*!< Tamper 3 event generates a trigge
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_NOERASE  TAMPER NO ERASE
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER1      RTC_TAFCR_TAMP1NOERASE /*!< Tamper 1 event does not eras
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER2      RTC_TAFCR_TAMP2NOERASE /*!< Tamper 2 event does not eras
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER3      RTC_TAFCR_TAMP3NOERASE /*!< Tamper 3 event does not eras
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPPRCH)
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_DURATION  TAMPER DURATION
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_1RTCCLK     0x00000000U                             /*!< Tamper pins
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_2RTCCLK     RTC_TAFCR_TAMPPRCH_0  /*!< Tamper pins are pre-charged b
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_4RTCCLK     RTC_TAFCR_TAMPPRCH_1  /*!< Tamper pins are pre-charged b
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_8RTCCLK     RTC_TAFCR_TAMPPRCH    /*!< Tamper pins are pre-charged b
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 230


 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPPRCH */
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPFLT)
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_FILTER  TAMPER FILTER
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_DISABLE       0x00000000U                              /*!< Tamper fil
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_2SAMPLE       RTC_TAFCR_TAMPFLT_0    /*!< Tamper is activated after 2 
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_4SAMPLE       RTC_TAFCR_TAMPFLT_1    /*!< Tamper is activated after 4 
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_8SAMPLE       RTC_TAFCR_TAMPFLT      /*!< Tamper is activated after 8 
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPFLT */
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPFREQ)
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_SAMPLFREQDIV  TAMPER SAMPLING FREQUENCY DIVIDER
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_32768   0x00000000U                                             
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_16384   RTC_TAFCR_TAMPFREQ_0                           /*!< Each
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_8192    RTC_TAFCR_TAMPFREQ_1                           /*!< Each
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_4096    (RTC_TAFCR_TAMPFREQ_1 | RTC_TAFCR_TAMPFREQ_0) /*!< Each 
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_2048    RTC_TAFCR_TAMPFREQ_2                           /*!< Each
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_1024    (RTC_TAFCR_TAMPFREQ_2 | RTC_TAFCR_TAMPFREQ_0) /*!< Each 
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_512     (RTC_TAFCR_TAMPFREQ_2 | RTC_TAFCR_TAMPFREQ_1) /*!< Each 
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_256     RTC_TAFCR_TAMPFREQ                             /*!< Each
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPFREQ */
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_ACTIVELEVEL  TAMPER ACTIVE LEVEL
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP1    RTC_TAFCR_TAMP1TRG /*!< RTC_TAMP1 input falling edge (if
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP2    RTC_TAFCR_TAMP2TRG /*!< RTC_TAMP2 input falling edge (if
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP3    RTC_TAFCR_TAMP3TRG /*!< RTC_TAMP3 input falling edge (if
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_WAKEUPCLOCK_DIV  WAKEUP CLOCK DIV
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_16          0x00000000U                           /*!< RTC/16 clock 
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_8           (RTC_CR_WUCKSEL_0)                    /*!< RTC/8 clock i
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_4           (RTC_CR_WUCKSEL_1)                    /*!< RTC/4 clock i
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_2           (RTC_CR_WUCKSEL_1 | RTC_CR_WUCKSEL_0) /*!< RTC/2 clock i
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_CKSPRE          (RTC_CR_WUCKSEL_2)                    /*!< ck_spre (usua
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_CKSPRE_WUT      (RTC_CR_WUCKSEL_2 | RTC_CR_WUCKSEL_1) /*!< ck_spre (usua
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 231


 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_BACKUP_SUPPORT)
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_BKP  BACKUP
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_BKP_DR0                     0x00000000U
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_BKP_DR1                     0x00000001U
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_BKP_DR2                     0x00000002U
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_BKP_DR3                     0x00000003U
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_BKP_DR4                     0x00000004U
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_BACKUP_SUPPORT */
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_OUTPUT  Calibration output
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_NONE           0x00000000U                 /*!< Calibration output disa
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_1HZ            (RTC_CR_COE | RTC_CR_COSEL) /*!< Calibration output is 1
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_512HZ          (RTC_CR_COE)                /*!< Calibration output is 5
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_INSERTPULSE  Calibration pulse insertion 
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_INSERTPULSE_NONE      0x00000000U           /*!< No RTCCLK pulses are added */
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_INSERTPULSE_SET       RTC_CALR_CALP         /*!< One RTCCLK pulse is effective
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_PERIOD  Calibration period
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_32SEC          0x00000000U           /*!< Use a 32-second calibration c
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_16SEC          RTC_CALR_CALW16       /*!< Use a 16-second calibration c
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_8SEC           RTC_CALR_CALW8        /*!< Use a 8-second calibration cy
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Exported macro ------------------------------------------------------------*/
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Macros RTC Exported Macros
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_WRITE_READ Common Write and read registers Macros
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 232


 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Write a value in RTC register
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __INSTANCE__ RTC Instance
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __REG__ Register to be written
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __VALUE__ Value to be written in the register
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Read a value in RTC register
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __INSTANCE__ RTC Instance
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __REG__ Register to be read
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Register value
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Convert Convert helper Macros
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to convert a value from 2 digit decimal format to BCD format
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __VALUE__ Byte to be converted
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Converted byte
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_CONVERT_BIN2BCD(__VALUE__) (uint8_t)((((__VALUE__) / 10U) << 4U) | ((__VALUE__) % 
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to convert a value from BCD format to 2 digit decimal format
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __VALUE__ BCD value to be converted
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Converted byte
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_CONVERT_BCD2BIN(__VALUE__) (uint8_t)(((uint8_t)((__VALUE__) & (uint8_t)0xF0U) >> (
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Date Date helper Macros
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve weekday.
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Date returned by @ref  LL_RTC_DATE_Get function.
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 233


 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_WEEKDAY(__RTC_DATE__) (((__RTC_DATE__) >> RTC_OFFSET_WEEKDAY) & 0x000000FFU)
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Year in BCD format
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Year in BCD format (0x00 . . . 0x99)
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_YEAR(__RTC_DATE__) ((__RTC_DATE__) & 0x000000FFU)
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Month in BCD format
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_MONTH(__RTC_DATE__) (((__RTC_DATE__) >>RTC_OFFSET_MONTH) & 0x000000FFU)
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Day in BCD format
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Day in BCD format (0x01 . . . 0x31)
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_DAY(__RTC_DATE__) (((__RTC_DATE__) >>RTC_OFFSET_DAY) & 0x000000FFU)
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Time Time helper Macros
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve hour in BCD format
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Hours in BCD format (0x01. . .0x12 or between Min_Data=0x00 and Max_Data=0x23)
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_HOUR(__RTC_TIME__) (((__RTC_TIME__) >> RTC_OFFSET_HOUR) & 0x000000FFU)
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve minute in BCD format
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 234


 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Minutes in BCD format (0x00. . .0x59)
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_MINUTE(__RTC_TIME__) (((__RTC_TIME__) >> RTC_OFFSET_MINUTE) & 0x000000FFU)
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve second in BCD format
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Seconds in  format (0x00. . .0x59)
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_SECOND(__RTC_TIME__) ((__RTC_TIME__) & 0x000000FFU)
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Exported functions --------------------------------------------------------*/
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Functions RTC Exported Functions
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Configuration Configuration
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Hours format (24 hour/day or AM/PM hour format)
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           FMT           LL_RTC_SetHourFormat
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  HourFormat This parameter can be one of the following values:
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_24HOUR
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_AMPM
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetHourFormat(RTC_TypeDef *RTCx, uint32_t HourFormat)
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_FMT, HourFormat);
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Hours format (24 hour/day or AM/PM hour format)
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           FMT           LL_RTC_GetHourFormat
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_24HOUR
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_AMPM
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetHourFormat(RTC_TypeDef *RTCx)
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_FMT));
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 235


 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Select the flag to be routed to RTC_ALARM output
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           OSEL          LL_RTC_SetAlarmOutEvent
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  AlarmOutput This parameter can be one of the following values:
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_DISABLE
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMA
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMB
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_WAKEUP
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutEvent(RTC_TypeDef *RTCx, uint32_t AlarmOutput)
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_OSEL, AlarmOutput);
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get the flag to be routed to RTC_ALARM output
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           OSEL          LL_RTC_GetAlarmOutEvent
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_DISABLE
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMA
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMB
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_WAKEUP
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutEvent(RTC_TypeDef *RTCx)
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_OSEL));
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set RTC_ALARM output type (ALARM in push-pull or open-drain output)
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Used only when RTC_ALARM is mapped on PC13
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   If all RTC alternate functions are disabled and PC13MODE = 1, PC13VALUE configures the
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         PC13 output data
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        ALARMOUTTYPE  LL_RTC_SetAlarmOutputType
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Output This parameter can be one of the following values:
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutputType(RTC_TypeDef *RTCx, uint32_t Output)
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAFCR, RTC_TAFCR_ALARMOUTTYPE, Output);
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get RTC_ALARM output type (ALARM in push-pull or open-drain output)
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   used only when RTC_ALARM is mapped on PC13
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   If all RTC alternate functions are disabled and PC13MODE = 1, PC13VALUE configures the
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         PC13 output data
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        ALARMOUTTYPE  LL_RTC_GetAlarmOutputType
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 236


 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutputType(RTC_TypeDef *RTCx)
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAFCR, RTC_TAFCR_ALARMOUTTYPE));
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable push-pull output on PC13, PC14 and/or PC15
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   PC13 forced to push-pull output if all RTC alternate functions are disabled
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   PC14 and PC15 forced to push-pull output if LSE is disabled
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        PC13MODE  LL_RTC_EnablePushPullMode\n
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        PC14MODE  LL_RTC_EnablePushPullMode\n
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        PC15MODE  LL_RTC_EnablePushPullMode
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  PinMask This parameter can be a combination of the following values:
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC13
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC14
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC15
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnablePushPullMode(RTC_TypeDef *RTCx, uint32_t PinMask)
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, PinMask);
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable push-pull output on PC13, PC14 and/or PC15
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   PC13, PC14 and/or PC15 are controlled by the GPIO configuration registers.
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         Consequently PC13, PC14 and/or PC15 are floating in Standby mode.
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        PC13MODE      LL_RTC_DisablePushPullMode\n
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR        PC14MODE      LL_RTC_DisablePushPullMode\n
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR        PC15MODE      LL_RTC_DisablePushPullMode
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  PinMask This parameter can be a combination of the following values:
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC13
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC14
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC15
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisablePushPullMode(RTC_TypeDef* RTCx, uint32_t PinMask)
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, PinMask);
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set PC14 and/or PC15 to high level.
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Output data configuration is possible if the LSE is disabled and PushPull output is ena
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        PC14VALUE     LL_RTC_SetOutputPin\n
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR        PC15VALUE     LL_RTC_SetOutputPin
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  PinMask This parameter can be a combination of the following values:
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC14
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC15
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 237


 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetOutputPin(RTC_TypeDef* RTCx, uint32_t PinMask)
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, (PinMask >> 1));
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set PC14 and/or PC15 to low level.
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Output data configuration is possible if the LSE is disabled and PushPull output is ena
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        PC14VALUE     LL_RTC_ResetOutputPin\n
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR        PC15VALUE     LL_RTC_ResetOutputPin
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  PinMask This parameter can be a combination of the following values:
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC14
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC15
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ResetOutputPin(RTC_TypeDef* RTCx, uint32_t PinMask)
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, (PinMask >> 1));
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable initialization mode
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Initialization mode is used to program time and date register (RTC_TR and RTC_DR)
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         and prescaler register (RTC_PRER).
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         Counters are stopped and start counting from the new value when INIT is reset.
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          INIT          LL_RTC_EnableInitMode
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableInitMode(RTC_TypeDef *RTCx)
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   /* Set the Initialization mode */
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, RTC_INIT_MASK);
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable initialization mode (Free running mode)
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          INIT          LL_RTC_DisableInitMode
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableInitMode(RTC_TypeDef *RTCx)
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   /* Exit Initialization mode */
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (uint32_t)~RTC_ISR_INIT);
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Output polarity (pin is low when ALRAF/ALRBF/WUTF is asserted)
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           POL           LL_RTC_SetOutputPolarity
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Polarity This parameter can be one of the following values:
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_HIGH
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_LOW
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 238


 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetOutputPolarity(RTC_TypeDef *RTCx, uint32_t Polarity)
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_POL, Polarity);
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Output polarity
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           POL           LL_RTC_GetOutputPolarity
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_HIGH
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_LOW
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetOutputPolarity(RTC_TypeDef *RTCx)
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_POL));
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable Bypass the shadow registers
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_EnableShadowRegBypass
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableShadowRegBypass(RTC_TypeDef *RTCx)
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_BYPSHAD);
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable Bypass the shadow registers
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_DisableShadowRegBypass
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableShadowRegBypass(RTC_TypeDef *RTCx)
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_BYPSHAD);
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Check if Shadow registers bypass is enabled or not.
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_IsShadowRegBypassEnabled
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsShadowRegBypassEnabled(RTC_TypeDef *RTCx)
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_BYPSHAD) == (RTC_CR_BYPSHAD));
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable RTC_REFIN reference clock detection (50 or 60 Hz)
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 239


 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           REFCKON       LL_RTC_EnableRefClock
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableRefClock(RTC_TypeDef *RTCx)
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_REFCKON);
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable RTC_REFIN reference clock detection (50 or 60 Hz)
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           REFCKON       LL_RTC_DisableRefClock
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableRefClock(RTC_TypeDef *RTCx)
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_REFCKON);
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Asynchronous prescaler factor
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_A      LL_RTC_SetAsynchPrescaler
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  AsynchPrescaler Value between Min_Data = 0 and Max_Data = 0x7F
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAsynchPrescaler(RTC_TypeDef *RTCx, uint32_t AsynchPrescaler)
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->PRER, RTC_PRER_PREDIV_A, AsynchPrescaler << RTC_PRER_PREDIV_A_Pos);
 1423              		.loc 13 1013 0
 1424 0026 2269     		ldr	r2, [r4, #16]
 1425 0028 104B     		ldr	r3, .L27+8
 1426 002a 1A40     		ands	r2, r3
 1427 002c FE23     		movs	r3, #254
 1428 002e DB03     		lsls	r3, r3, #15
 1429 0030 1A43     		orrs	r2, r3
 1430 0032 2261     		str	r2, [r4, #16]
 1431              	.LVL93:
 1432              	.LBE327:
 1433              	.LBE326:
 1434              	.LBB328:
 1435              	.LBB329:
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Synchronous prescaler factor
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_S      LL_RTC_SetSynchPrescaler
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  SynchPrescaler Value between Min_Data = 0 and Max_Data = 0x7FFF
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetSynchPrescaler(RTC_TypeDef *RTCx, uint32_t SynchPrescaler)
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->PRER, RTC_PRER_PREDIV_S, SynchPrescaler);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 240


 1436              		.loc 13 1025 0
 1437 0034 2369     		ldr	r3, [r4, #16]
 1438 0036 DB0B     		lsrs	r3, r3, #15
 1439 0038 DB03     		lsls	r3, r3, #15
 1440 003a 3343     		orrs	r3, r6
 1441 003c 2361     		str	r3, [r4, #16]
 1442              	.LVL94:
 1443              	.LBE329:
 1444              	.LBE328:
 269:Src/main.c    ****         RTC_TimeStruct.Minutes = 0;
 1445              		.loc 1 269 0
 1446 003e 01AA     		add	r2, sp, #4
 1447 0040 1571     		strb	r5, [r2, #4]
 270:Src/main.c    ****         RTC_TimeStruct.Seconds = 0;
 1448              		.loc 1 270 0
 1449 0042 5571     		strb	r5, [r2, #5]
 271:Src/main.c    ****         LL_RTC_TIME_Init(RTC, LL_RTC_FORMAT_BCD, &RTC_TimeStruct);
 1450              		.loc 1 271 0
 1451 0044 9571     		strb	r5, [r2, #6]
 272:Src/main.c    **** 
 1452              		.loc 1 272 0
 1453 0046 0121     		movs	r1, #1
 1454 0048 2000     		movs	r0, r4
 1455 004a FFF7FEFF 		bl	LL_RTC_TIME_Init
 1456              	.LVL95:
 274:Src/main.c    ****         RTC_DateStruct.Month = LL_RTC_MONTH_JANUARY;
 1457              		.loc 1 274 0
 1458 004e 0123     		movs	r3, #1
 1459 0050 6A46     		mov	r2, sp
 1460 0052 1370     		strb	r3, [r2]
 275:Src/main.c    ****         RTC_DateStruct.Year = 0;
 1461              		.loc 1 275 0
 1462 0054 5370     		strb	r3, [r2, #1]
 276:Src/main.c    ****         LL_RTC_DATE_Init(RTC, LL_RTC_FORMAT_BCD, &RTC_DateStruct);
 1463              		.loc 1 276 0
 1464 0056 D570     		strb	r5, [r2, #3]
 277:Src/main.c    **** 
 1465              		.loc 1 277 0
 1466 0058 0121     		movs	r1, #1
 1467 005a 2000     		movs	r0, r4
 1468 005c FFF7FEFF 		bl	LL_RTC_DATE_Init
 1469              	.LVL96:
 282:Src/main.c    **** 
 1470              		.loc 1 282 0
 1471 0060 06B0     		add	sp, sp, #24
 1472              		@ sp needed
 1473 0062 70BD     		pop	{r4, r5, r6, pc}
 1474              	.L28:
 1475              		.align	2
 1476              	.L27:
 1477 0064 00100240 		.word	1073876992
 1478 0068 00280040 		.word	1073752064
 1479 006c FFFF80FF 		.word	-8323073
 1480              		.cfi_endproc
 1481              	.LFE745:
 1483              		.section	.text._Error_Handler,"ax",%progbits
 1484              		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 241


 1485              		.global	_Error_Handler
 1486              		.code	16
 1487              		.thumb_func
 1489              	_Error_Handler:
 1490              	.LFB751:
 587:Src/main.c    **** 
 588:Src/main.c    **** /* USER CODE BEGIN 4 */
 589:Src/main.c    **** 
 590:Src/main.c    **** /* USER CODE END 4 */
 591:Src/main.c    **** 
 592:Src/main.c    **** /**
 593:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 594:Src/main.c    ****   * @param  file: The file name as string.
 595:Src/main.c    ****   * @param  line: The line in file as a number.
 596:Src/main.c    ****   * @retval None
 597:Src/main.c    ****   */
 598:Src/main.c    **** void _Error_Handler(char *file, int line)
 599:Src/main.c    **** {
 1491              		.loc 1 599 0
 1492              		.cfi_startproc
 1493              		@ Volatile: function does not return.
 1494              		@ args = 0, pretend = 0, frame = 0
 1495              		@ frame_needed = 0, uses_anonymous_args = 0
 1496              		@ link register save eliminated.
 1497              	.LVL97:
 1498              	.L30:
 1499 0000 FEE7     		b	.L30
 1500              		.cfi_endproc
 1501              	.LFE751:
 1503 0002 C046     		.section	.text.SystemClock_Config,"ax",%progbits
 1504              		.align	2
 1505              		.global	SystemClock_Config
 1506              		.code	16
 1507              		.thumb_func
 1509              	SystemClock_Config:
 1510              	.LFB742:
 144:Src/main.c    **** 
 1511              		.loc 1 144 0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 144:Src/main.c    **** 
 1515              		.loc 1 144 0
 1516 0000 10B5     		push	{r4, lr}
 1517              	.LCFI16:
 1518              		.cfi_def_cfa_offset 8
 1519              		.cfi_offset 4, -8
 1520              		.cfi_offset 14, -4
 1521              	.LVL98:
 1522              	.LBB330:
 1523              	.LBB331:
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_USART1TX_DMA_RMP || SYSCFG_CFGR1_USART1RX_DMA_RMP || SYSCFG_CFGR1_USART2_DMA
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_SPI2_DMA_RMP)
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set DMA request remapping bits for SPI
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 242


 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 SPI2_DMA_RMP  LL_SYSCFG_SetRemapDMA_SPI
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Remap This parameter can be one of the following values:
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_SPI2_RMP_DMA1_CH45
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_SPI2_RMP_DMA1_CH67
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapDMA_SPI(uint32_t Remap)
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_SPI2_DMA_RMP, Remap);
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_SPI2_DMA_RMP */
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_I2C1_DMA_RMP)
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set DMA request remapping bits for I2C
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 I2C1_DMA_RMP  LL_SYSCFG_SetRemapDMA_I2C
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Remap This parameter can be one of the following values:
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C1_RMP_DMA1_CH32
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C1_RMP_DMA1_CH76
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapDMA_I2C(uint32_t Remap)
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_I2C1_DMA_RMP, Remap);
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_I2C1_DMA_RMP */
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_ADC_DMA_RMP)
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set DMA request remapping bits for ADC
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 ADC_DMA_RMP   LL_SYSCFG_SetRemapDMA_ADC
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Remap This parameter can be one of the following values:
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_ADC1_RMP_DMA1_CH1
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_ADC1_RMP_DMA1_CH2
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapDMA_ADC(uint32_t Remap)
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_ADC_DMA_RMP, Remap);
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_ADC_DMA_RMP */
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_TIM16_DMA_RMP) || defined(SYSCFG_CFGR1_TIM17_DMA_RMP) || defined(SYSCFG_CF
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set DMA request remapping bits for TIM
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 TIM16_DMA_RMP  LL_SYSCFG_SetRemapDMA_TIM\n
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 TIM17_DMA_RMP  LL_SYSCFG_SetRemapDMA_TIM\n
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 TIM16_DMA_RMP2 LL_SYSCFG_SetRemapDMA_TIM\n
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 TIM17_DMA_RMP2 LL_SYSCFG_SetRemapDMA_TIM\n
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 TIM1_DMA_RMP   LL_SYSCFG_SetRemapDMA_TIM\n
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 TIM2_DMA_RMP   LL_SYSCFG_SetRemapDMA_TIM\n
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 TIM3_DMA_RMP   LL_SYSCFG_SetRemapDMA_TIM
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Remap This parameter can be one of the following values:
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM16_RMP_DMA1_CH3 (*)
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM16_RMP_DMA1_CH4 (*)
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM16_RMP_DMA1_CH6 (*)
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM17_RMP_DMA1_CH1 (*)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 243


 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM17_RMP_DMA1_CH2 (*)
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM17_RMP_DMA1_CH7 (*)
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM1_RMP_DMA1_CH234 (*)
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM1_RMP_DMA1_CH6 (*)
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM2_RMP_DMA1_CH34 (*)
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM2_RMP_DMA1_CH7 (*)
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM3_RMP_DMA1_CH4 (*)
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIM3_RMP_DMA1_CH6 (*)
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices.
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapDMA_TIM(uint32_t Remap)
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, (Remap & 0x00FF00FFU) << 8U, (Remap & 0xFF00FF00U));
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_TIM16_DMA_RMP || SYSCFG_CFGR1_TIM17_DMA_RMP || SYSCFG_CFGR1_TIM1_DMA_RMP || 
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_PA11_PA12_RMP)
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Enable PIN pair PA11/12 mapped instead of PA9/10 (control the mapping of either
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * PA9/10 or PA11/12 pin pair on small pin-count packages)
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 PA11_PA12_RMP  LL_SYSCFG_EnablePinRemap
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnablePinRemap(void)
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_PA11_PA12_RMP);
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Disable PIN pair PA11/12 mapped instead of PA9/10 (control the mapping of either
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * PA9/10 or PA11/12 pin pair on small pin-count packages)
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 PA11_PA12_RMP  LL_SYSCFG_DisablePinRemap
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisablePinRemap(void)
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_PA11_PA12_RMP);
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_PA11_PA12_RMP */
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Enable the I2C fast mode plus driving capability.
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 I2C_FMP_PB6   LL_SYSCFG_EnableFastModePlus\n
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PB7   LL_SYSCFG_EnableFastModePlus\n
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PB8   LL_SYSCFG_EnableFastModePlus\n
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PB9   LL_SYSCFG_EnableFastModePlus\n
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_I2C1  LL_SYSCFG_EnableFastModePlus\n
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_I2C2  LL_SYSCFG_EnableFastModePlus\n
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PA9   LL_SYSCFG_EnableFastModePlus\n
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PA10  LL_SYSCFG_EnableFastModePlus
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 244


 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1 (*)
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PA9 (*)
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PA10 (*)
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableFastModePlus(uint32_t ConfigFastModePlus)
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR1, ConfigFastModePlus);
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Disable the I2C fast mode plus driving capability.
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 I2C_FMP_PB6   LL_SYSCFG_DisableFastModePlus\n
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PB7   LL_SYSCFG_DisableFastModePlus\n
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PB8   LL_SYSCFG_DisableFastModePlus\n
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PB9   LL_SYSCFG_DisableFastModePlus\n
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_I2C1  LL_SYSCFG_DisableFastModePlus\n
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_I2C2  LL_SYSCFG_DisableFastModePlus\n
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PA9   LL_SYSCFG_DisableFastModePlus\n
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR1 I2C_FMP_PA10  LL_SYSCFG_DisableFastModePlus
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1 (*)
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PA9 (*)
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PA10 (*)
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableFastModePlus(uint32_t ConfigFastModePlus)
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR1, ConfigFastModePlus);
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Configure source input for the EXTI external interrupt.
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTI0         LL_SYSCFG_SetEXTISource\n
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI1         LL_SYSCFG_SetEXTISource\n
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI2         LL_SYSCFG_SetEXTISource\n
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI3         LL_SYSCFG_SetEXTISource\n
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI4         LL_SYSCFG_SetEXTISource\n
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI5         LL_SYSCFG_SetEXTISource\n
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI6         LL_SYSCFG_SetEXTISource\n
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI7         LL_SYSCFG_SetEXTISource\n
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI8         LL_SYSCFG_SetEXTISource\n
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI9         LL_SYSCFG_SetEXTISource\n
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI10        LL_SYSCFG_SetEXTISource\n
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI11        LL_SYSCFG_SetEXTISource\n
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI12        LL_SYSCFG_SetEXTISource\n
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI13        LL_SYSCFG_SetEXTISource\n
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 245


 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI14        LL_SYSCFG_SetEXTISource\n
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI15        LL_SYSCFG_SetEXTISource
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Port This parameter can be one of the following values:
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD (*)
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE (*)
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTF
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetEXTISource(uint32_t Port, uint32_t Line)
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->EXTICR[Line & 0xFF], SYSCFG_EXTICR1_EXTI0 << (Line >> 16), Port << (Line >> 16
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Get the configured defined for specific EXTI Line
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTI0         LL_SYSCFG_SetEXTISource\n
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI1         LL_SYSCFG_SetEXTISource\n
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI2         LL_SYSCFG_SetEXTISource\n
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI3         LL_SYSCFG_SetEXTISource\n
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI4         LL_SYSCFG_SetEXTISource\n
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI5         LL_SYSCFG_SetEXTISource\n
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI6         LL_SYSCFG_SetEXTISource\n
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI7         LL_SYSCFG_SetEXTISource\n
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI8         LL_SYSCFG_SetEXTISource\n
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI9         LL_SYSCFG_SetEXTISource\n
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI10        LL_SYSCFG_SetEXTISource\n
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI11        LL_SYSCFG_SetEXTISource\n
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI12        LL_SYSCFG_SetEXTISource\n
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI13        LL_SYSCFG_SetEXTISource\n
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI14        LL_SYSCFG_SetEXTISource\n
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI15        LL_SYSCFG_SetEXTISource
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 246


 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD (*)
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE (*)
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTF
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetEXTISource(uint32_t Line)
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->EXTICR[Line & 0xFF], (SYSCFG_EXTICR1_EXTI0 << (Line >> 16))) >
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE0_SR_EWDG)
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Window watchdog interrupt occurred or not.
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE0 SR_EWDG       LL_SYSCFG_IsActiveFlag_WWDG
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_WWDG(void)
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[0], SYSCFG_ITLINE0_SR_EWDG) == (SYSCFG_ITLINE0_SR_EWDG));
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE0_SR_EWDG */
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE1_SR_PVDOUT)
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if PVD supply monitoring interrupt occurred or not (EXTI line 16).
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE1 SR_PVDOUT     LL_SYSCFG_IsActiveFlag_PVDOUT
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_PVDOUT(void)
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[1], SYSCFG_ITLINE1_SR_PVDOUT) == (SYSCFG_ITLINE1_SR_PVDOUT));
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE1_SR_PVDOUT */
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE1_SR_VDDIO2)
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if VDDIO2 supply monitoring interrupt occurred or not (EXTI line 31).
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE1 SR_VDDIO2     LL_SYSCFG_IsActiveFlag_VDDIO2
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 247


 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_VDDIO2(void)
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[1], SYSCFG_ITLINE1_SR_VDDIO2) == (SYSCFG_ITLINE1_SR_VDDIO2));
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE1_SR_VDDIO2 */
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE2_SR_RTC_WAKEUP)
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if RTC Wake Up interrupt occurred or not (EXTI line 20).
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE2 SR_RTC_WAKEUP  LL_SYSCFG_IsActiveFlag_RTC_WAKEUP
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_RTC_WAKEUP(void)
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[2], SYSCFG_ITLINE2_SR_RTC_WAKEUP) == (SYSCFG_ITLINE2_SR_RTC_W
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE2_SR_RTC_WAKEUP */
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE2_SR_RTC_TSTAMP)
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if RTC Tamper and TimeStamp interrupt occurred or not (EXTI line 19).
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE2 SR_RTC_TSTAMP  LL_SYSCFG_IsActiveFlag_RTC_TSTAMP
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_RTC_TSTAMP(void)
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[2], SYSCFG_ITLINE2_SR_RTC_TSTAMP) == (SYSCFG_ITLINE2_SR_RTC_T
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE2_SR_RTC_TSTAMP */
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE2_SR_RTC_ALRA)
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if RTC Alarm interrupt occurred or not (EXTI line 17).
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE2 SR_RTC_ALRA   LL_SYSCFG_IsActiveFlag_RTC_ALRA
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_RTC_ALRA(void)
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[2], SYSCFG_ITLINE2_SR_RTC_ALRA) == (SYSCFG_ITLINE2_SR_RTC_ALR
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE2_SR_RTC_ALRA */
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE3_SR_FLASH_ITF)
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Flash interface interrupt occurred or not.
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE3 SR_FLASH_ITF  LL_SYSCFG_IsActiveFlag_FLASH_ITF
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_FLASH_ITF(void)
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[3], SYSCFG_ITLINE3_SR_FLASH_ITF) == (SYSCFG_ITLINE3_SR_FLASH_
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE3_SR_FLASH_ITF */
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE4_SR_CRS)
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 248


 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Clock recovery system interrupt occurred or not.
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE4 SR_CRS        LL_SYSCFG_IsActiveFlag_CRS
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_CRS(void)
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[4], SYSCFG_ITLINE4_SR_CRS) == (SYSCFG_ITLINE4_SR_CRS));
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE4_SR_CRS */
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE4_SR_CLK_CTRL)
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Reset and clock control interrupt occurred or not.
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE4 SR_CLK_CTRL   LL_SYSCFG_IsActiveFlag_CLK_CTRL
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_CLK_CTRL(void)
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[4], SYSCFG_ITLINE4_SR_CLK_CTRL) == (SYSCFG_ITLINE4_SR_CLK_CTR
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE4_SR_CLK_CTRL */
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE5_SR_EXTI0)
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 0 interrupt occurred or not.
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE5 SR_EXTI0      LL_SYSCFG_IsActiveFlag_EXTI0
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI0(void)
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[5], SYSCFG_ITLINE5_SR_EXTI0) == (SYSCFG_ITLINE5_SR_EXTI0));
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE5_SR_EXTI0 */
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE5_SR_EXTI1)
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 1 interrupt occurred or not.
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE5 SR_EXTI1      LL_SYSCFG_IsActiveFlag_EXTI1
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI1(void)
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[5], SYSCFG_ITLINE5_SR_EXTI1) == (SYSCFG_ITLINE5_SR_EXTI1));
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE5_SR_EXTI1 */
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE6_SR_EXTI2)
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 2 interrupt occurred or not.
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE6 SR_EXTI2      LL_SYSCFG_IsActiveFlag_EXTI2
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI2(void)
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[6], SYSCFG_ITLINE6_SR_EXTI2) == (SYSCFG_ITLINE6_SR_EXTI2));
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE6_SR_EXTI2 */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 249


 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE6_SR_EXTI3)
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 3 interrupt occurred or not.
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE6 SR_EXTI3      LL_SYSCFG_IsActiveFlag_EXTI3
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI3(void)
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[6], SYSCFG_ITLINE6_SR_EXTI3) == (SYSCFG_ITLINE6_SR_EXTI3));
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE6_SR_EXTI3 */
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI4)
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 4 interrupt occurred or not.
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI4      LL_SYSCFG_IsActiveFlag_EXTI4
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI4(void)
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI4) == (SYSCFG_ITLINE7_SR_EXTI4));
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI4 */
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI5)
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 5 interrupt occurred or not.
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI5      LL_SYSCFG_IsActiveFlag_EXTI5
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI5(void)
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI5) == (SYSCFG_ITLINE7_SR_EXTI5));
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI5 */
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI6)
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 6 interrupt occurred or not.
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI6      LL_SYSCFG_IsActiveFlag_EXTI6
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI6(void)
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI6) == (SYSCFG_ITLINE7_SR_EXTI6));
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI6 */
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI7)
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 7 interrupt occurred or not.
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI7      LL_SYSCFG_IsActiveFlag_EXTI7
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI7(void)
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 250


 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI7) == (SYSCFG_ITLINE7_SR_EXTI7));
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI7 */
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI8)
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 8 interrupt occurred or not.
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI8      LL_SYSCFG_IsActiveFlag_EXTI8
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI8(void)
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI8) == (SYSCFG_ITLINE7_SR_EXTI8));
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI8 */
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI9)
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 9 interrupt occurred or not.
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI9      LL_SYSCFG_IsActiveFlag_EXTI9
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI9(void)
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI9) == (SYSCFG_ITLINE7_SR_EXTI9));
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI9 */
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI10)
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 10 interrupt occurred or not.
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI10     LL_SYSCFG_IsActiveFlag_EXTI10
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI10(void)
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI10) == (SYSCFG_ITLINE7_SR_EXTI10));
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI10 */
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI11)
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 11 interrupt occurred or not.
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI11     LL_SYSCFG_IsActiveFlag_EXTI11
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI11(void)
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI11) == (SYSCFG_ITLINE7_SR_EXTI11));
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI11 */
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI12)
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 12 interrupt occurred or not.
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI12     LL_SYSCFG_IsActiveFlag_EXTI12
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 251


 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI12(void)
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI12) == (SYSCFG_ITLINE7_SR_EXTI12));
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI12 */
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI13)
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 13 interrupt occurred or not.
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI13     LL_SYSCFG_IsActiveFlag_EXTI13
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI13(void)
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI13) == (SYSCFG_ITLINE7_SR_EXTI13));
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI13 */
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI14)
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 14 interrupt occurred or not.
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI14     LL_SYSCFG_IsActiveFlag_EXTI14
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI14(void)
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI14) == (SYSCFG_ITLINE7_SR_EXTI14));
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI14 */
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE7_SR_EXTI15)
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if EXTI line 15 interrupt occurred or not.
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE7 SR_EXTI15     LL_SYSCFG_IsActiveFlag_EXTI15
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_EXTI15(void)
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[7], SYSCFG_ITLINE7_SR_EXTI15) == (SYSCFG_ITLINE7_SR_EXTI15));
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE7_SR_EXTI15 */
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE8_SR_TSC_EOA)
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Touch sensing controller end of acquisition interrupt occurred or not.
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE8 SR_TSC_EOA    LL_SYSCFG_IsActiveFlag_TSC_EOA
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TSC_EOA(void)
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[8], SYSCFG_ITLINE8_SR_TSC_EOA) == (SYSCFG_ITLINE8_SR_TSC_EOA)
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE8_SR_TSC_EOA */
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE8_SR_TSC_MCE)
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 252


1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Touch sensing controller max counterror interrupt occurred or not.
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE8 SR_TSC_MCE    LL_SYSCFG_IsActiveFlag_TSC_MCE
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TSC_MCE(void)
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[8], SYSCFG_ITLINE8_SR_TSC_MCE) == (SYSCFG_ITLINE8_SR_TSC_MCE)
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE8_SR_TSC_MCE */
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE9_SR_DMA1_CH1)
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 1 interrupt occurred or not.
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE9 SR_DMA1_CH1   LL_SYSCFG_IsActiveFlag_DMA1_CH1
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH1(void)
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[9], SYSCFG_ITLINE9_SR_DMA1_CH1) == (SYSCFG_ITLINE9_SR_DMA1_CH
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE9_SR_DMA1_CH1 */
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE10_SR_DMA1_CH2)
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 2 interrupt occurred or not.
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE10 SR_DMA1_CH2   LL_SYSCFG_IsActiveFlag_DMA1_CH2
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH2(void)
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[10], SYSCFG_ITLINE10_SR_DMA1_CH2) == (SYSCFG_ITLINE10_SR_DMA1
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE10_SR_DMA1_CH2 */
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE10_SR_DMA1_CH3)
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 3 interrupt occurred or not.
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE10 SR_DMA1_CH3   LL_SYSCFG_IsActiveFlag_DMA1_CH3
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH3(void)
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[10], SYSCFG_ITLINE10_SR_DMA1_CH3) == (SYSCFG_ITLINE10_SR_DMA1
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE10_SR_DMA1_CH3 */
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE10_SR_DMA2_CH1)
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA2 channel 1 interrupt occurred or not.
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE10 SR_DMA2_CH1   LL_SYSCFG_IsActiveFlag_DMA2_CH1
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA2_CH1(void)
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[10], SYSCFG_ITLINE10_SR_DMA2_CH1) == (SYSCFG_ITLINE10_SR_DMA2
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE10_SR_DMA2_CH1 */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 253


1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE10_SR_DMA2_CH2)
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA2 channel 2 interrupt occurred or not.
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE10 SR_DMA2_CH2   LL_SYSCFG_IsActiveFlag_DMA2_CH2
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA2_CH2(void)
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[10], SYSCFG_ITLINE10_SR_DMA2_CH2) == (SYSCFG_ITLINE10_SR_DMA2
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE10_SR_DMA2_CH2 */
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA1_CH4)
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 4 interrupt occurred or not.
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA1_CH4   LL_SYSCFG_IsActiveFlag_DMA1_CH4
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH4(void)
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA1_CH4) == (SYSCFG_ITLINE11_SR_DMA1
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA1_CH4 */
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA1_CH5)
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 5 interrupt occurred or not.
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA1_CH5   LL_SYSCFG_IsActiveFlag_DMA1_CH5
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH5(void)
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA1_CH5) == (SYSCFG_ITLINE11_SR_DMA1
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA1_CH5 */
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA1_CH6)
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 6 interrupt occurred or not.
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA1_CH6   LL_SYSCFG_IsActiveFlag_DMA1_CH6
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH6(void)
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA1_CH6) == (SYSCFG_ITLINE11_SR_DMA1
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA1_CH6 */
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA1_CH7)
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA1 channel 7 interrupt occurred or not.
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA1_CH7   LL_SYSCFG_IsActiveFlag_DMA1_CH7
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA1_CH7(void)
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 254


1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA1_CH7) == (SYSCFG_ITLINE11_SR_DMA1
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA1_CH7 */
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA2_CH3)
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA2 channel 3 interrupt occurred or not.
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA2_CH3   LL_SYSCFG_IsActiveFlag_DMA2_CH3
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA2_CH3(void)
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA2_CH3) == (SYSCFG_ITLINE11_SR_DMA2
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA2_CH3 */
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA2_CH4)
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA2 channel 4 interrupt occurred or not.
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA2_CH4   LL_SYSCFG_IsActiveFlag_DMA2_CH4
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA2_CH4(void)
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA2_CH4) == (SYSCFG_ITLINE11_SR_DMA2
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA2_CH4 */
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE11_SR_DMA2_CH5)
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DMA2 channel 5 interrupt occurred or not.
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE11 SR_DMA2_CH5   LL_SYSCFG_IsActiveFlag_DMA2_CH5
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DMA2_CH5(void)
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[11], SYSCFG_ITLINE11_SR_DMA2_CH5) == (SYSCFG_ITLINE11_SR_DMA2
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE11_SR_DMA2_CH5 */
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE12_SR_ADC)
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if ADC interrupt occurred or not.
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE12 SR_ADC        LL_SYSCFG_IsActiveFlag_ADC
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_ADC(void)
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[12], SYSCFG_ITLINE12_SR_ADC) == (SYSCFG_ITLINE12_SR_ADC));
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE12_SR_ADC */
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE12_SR_COMP1)
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Comparator 1 interrupt occurred or not (EXTI line 21).
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE12 SR_COMP1      LL_SYSCFG_IsActiveFlag_COMP1
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 255


1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_COMP1(void)
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[12], SYSCFG_ITLINE12_SR_COMP1) == (SYSCFG_ITLINE12_SR_COMP1))
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE12_SR_COMP1 */
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE12_SR_COMP2)
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Comparator 2 interrupt occurred or not (EXTI line 22).
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE12 SR_COMP2      LL_SYSCFG_IsActiveFlag_COMP2
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_COMP2(void)
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[12], SYSCFG_ITLINE12_SR_COMP2) == (SYSCFG_ITLINE12_SR_COMP2))
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE12_SR_COMP2 */
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE13_SR_TIM1_BRK)
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 1 break interrupt occurred or not.
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE13 SR_TIM1_BRK   LL_SYSCFG_IsActiveFlag_TIM1_BRK
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM1_BRK(void)
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[13], SYSCFG_ITLINE13_SR_TIM1_BRK) == (SYSCFG_ITLINE13_SR_TIM1
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE13_SR_TIM1_BRK */
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE13_SR_TIM1_UPD)
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 1 update interrupt occurred or not.
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE13 SR_TIM1_UPD   LL_SYSCFG_IsActiveFlag_TIM1_UPD
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM1_UPD(void)
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[13], SYSCFG_ITLINE13_SR_TIM1_UPD) == (SYSCFG_ITLINE13_SR_TIM1
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE13_SR_TIM1_UPD */
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE13_SR_TIM1_TRG)
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 1 trigger interrupt occurred or not.
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE13 SR_TIM1_TRG   LL_SYSCFG_IsActiveFlag_TIM1_TRG
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM1_TRG(void)
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[13], SYSCFG_ITLINE13_SR_TIM1_TRG) == (SYSCFG_ITLINE13_SR_TIM1
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE13_SR_TIM1_TRG */
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE13_SR_TIM1_CCU)
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 256


1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 1 commutation interrupt occurred or not.
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE13 SR_TIM1_CCU   LL_SYSCFG_IsActiveFlag_TIM1_CCU
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM1_CCU(void)
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[13], SYSCFG_ITLINE13_SR_TIM1_CCU) == (SYSCFG_ITLINE13_SR_TIM1
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE13_SR_TIM1_CCU */
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE14_SR_TIM1_CC)
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 1 capture compare interrupt occurred or not.
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE14 SR_TIM1_CC    LL_SYSCFG_IsActiveFlag_TIM1_CC
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM1_CC(void)
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[14], SYSCFG_ITLINE14_SR_TIM1_CC) == (SYSCFG_ITLINE14_SR_TIM1_
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE14_SR_TIM1_CC */
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE15_SR_TIM2_GLB)
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 2 interrupt occurred or not.
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE15 SR_TIM2_GLB   LL_SYSCFG_IsActiveFlag_TIM2
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM2(void)
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[15], SYSCFG_ITLINE15_SR_TIM2_GLB) == (SYSCFG_ITLINE15_SR_TIM2
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE15_SR_TIM2_GLB */
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE16_SR_TIM3_GLB)
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 3 interrupt occurred or not.
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE16 SR_TIM3_GLB   LL_SYSCFG_IsActiveFlag_TIM3
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM3(void)
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[16], SYSCFG_ITLINE16_SR_TIM3_GLB) == (SYSCFG_ITLINE16_SR_TIM3
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE16_SR_TIM3_GLB */
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE17_SR_DAC)
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if DAC underrun interrupt occurred or not.
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE17 SR_DAC        LL_SYSCFG_IsActiveFlag_DAC
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_DAC(void)
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[17], SYSCFG_ITLINE17_SR_DAC) == (SYSCFG_ITLINE17_SR_DAC));
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE17_SR_DAC */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 257


1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE17_SR_TIM6_GLB)
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 6 interrupt occurred or not.
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE17 SR_TIM6_GLB   LL_SYSCFG_IsActiveFlag_TIM6
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM6(void)
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[17], SYSCFG_ITLINE17_SR_TIM6_GLB) == (SYSCFG_ITLINE17_SR_TIM6
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE17_SR_TIM6_GLB */
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE18_SR_TIM7_GLB)
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 7 interrupt occurred or not.
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE18 SR_TIM7_GLB   LL_SYSCFG_IsActiveFlag_TIM7
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM7(void)
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[18], SYSCFG_ITLINE18_SR_TIM7_GLB) == (SYSCFG_ITLINE18_SR_TIM7
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE18_SR_TIM7_GLB */
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE19_SR_TIM14_GLB)
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 14 interrupt occurred or not.
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE19 SR_TIM14_GLB  LL_SYSCFG_IsActiveFlag_TIM14
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM14(void)
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[19], SYSCFG_ITLINE19_SR_TIM14_GLB) == (SYSCFG_ITLINE19_SR_TIM
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE19_SR_TIM14_GLB */
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE20_SR_TIM15_GLB)
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 15 interrupt occurred or not.
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE20 SR_TIM15_GLB  LL_SYSCFG_IsActiveFlag_TIM15
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM15(void)
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[20], SYSCFG_ITLINE20_SR_TIM15_GLB) == (SYSCFG_ITLINE20_SR_TIM
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE20_SR_TIM15_GLB */
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE21_SR_TIM16_GLB)
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 16 interrupt occurred or not.
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE21 SR_TIM16_GLB  LL_SYSCFG_IsActiveFlag_TIM16
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM16(void)
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 258


1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[21], SYSCFG_ITLINE21_SR_TIM16_GLB) == (SYSCFG_ITLINE21_SR_TIM
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE21_SR_TIM16_GLB */
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE22_SR_TIM17_GLB)
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if Timer 17 interrupt occurred or not.
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE22 SR_TIM17_GLB  LL_SYSCFG_IsActiveFlag_TIM17
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_TIM17(void)
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[22], SYSCFG_ITLINE22_SR_TIM17_GLB) == (SYSCFG_ITLINE22_SR_TIM
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE22_SR_TIM17_GLB */
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE23_SR_I2C1_GLB)
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if I2C1 interrupt occurred or not, combined with EXTI line 23.
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE23 SR_I2C1_GLB   LL_SYSCFG_IsActiveFlag_I2C1
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_I2C1(void)
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[23], SYSCFG_ITLINE23_SR_I2C1_GLB) == (SYSCFG_ITLINE23_SR_I2C1
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE23_SR_I2C1_GLB */
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE24_SR_I2C2_GLB)
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if I2C2 interrupt occurred or not.
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE24 SR_I2C2_GLB   LL_SYSCFG_IsActiveFlag_I2C2
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_I2C2(void)
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[24], SYSCFG_ITLINE24_SR_I2C2_GLB) == (SYSCFG_ITLINE24_SR_I2C2
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE24_SR_I2C2_GLB */
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE25_SR_SPI1)
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if SPI1 interrupt occurred or not.
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE25 SR_SPI1       LL_SYSCFG_IsActiveFlag_SPI1
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_SPI1(void)
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[25], SYSCFG_ITLINE25_SR_SPI1) == (SYSCFG_ITLINE25_SR_SPI1));
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE25_SR_SPI1 */
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE26_SR_SPI2)
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if SPI2 interrupt occurred or not.
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE26 SR_SPI2       LL_SYSCFG_IsActiveFlag_SPI2
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 259


1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_SPI2(void)
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[26], SYSCFG_ITLINE26_SR_SPI2) == (SYSCFG_ITLINE26_SR_SPI2));
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE26_SR_SPI2 */
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE27_SR_USART1_GLB)
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART1 interrupt occurred or not, combined with EXTI line 25.
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE27 SR_USART1_GLB  LL_SYSCFG_IsActiveFlag_USART1
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART1(void)
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[27], SYSCFG_ITLINE27_SR_USART1_GLB) == (SYSCFG_ITLINE27_SR_US
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE27_SR_USART1_GLB */
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE28_SR_USART2_GLB)
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART2 interrupt occurred or not, combined with EXTI line 26.
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE28 SR_USART2_GLB  LL_SYSCFG_IsActiveFlag_USART2
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART2(void)
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[28], SYSCFG_ITLINE28_SR_USART2_GLB) == (SYSCFG_ITLINE28_SR_US
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE28_SR_USART2_GLB */
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE29_SR_USART3_GLB)
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART3 interrupt occurred or not, combined with EXTI line 28.
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE29 SR_USART3_GLB  LL_SYSCFG_IsActiveFlag_USART3
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART3(void)
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[29], SYSCFG_ITLINE29_SR_USART3_GLB) == (SYSCFG_ITLINE29_SR_US
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE29_SR_USART3_GLB */
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE29_SR_USART4_GLB)
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART4 interrupt occurred or not.
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE29 SR_USART4_GLB  LL_SYSCFG_IsActiveFlag_USART4
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART4(void)
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[29], SYSCFG_ITLINE29_SR_USART4_GLB) == (SYSCFG_ITLINE29_SR_US
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE29_SR_USART4_GLB */
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE29_SR_USART5_GLB)
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 260


1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART5 interrupt occurred or not.
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE29 SR_USART5_GLB  LL_SYSCFG_IsActiveFlag_USART5
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART5(void)
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[29], SYSCFG_ITLINE29_SR_USART5_GLB) == (SYSCFG_ITLINE29_SR_US
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE29_SR_USART5_GLB */
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE29_SR_USART6_GLB)
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART6 interrupt occurred or not.
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE29 SR_USART6_GLB  LL_SYSCFG_IsActiveFlag_USART6
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART6(void)
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[29], SYSCFG_ITLINE29_SR_USART6_GLB) == (SYSCFG_ITLINE29_SR_US
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE29_SR_USART6_GLB */
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE29_SR_USART7_GLB)
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART7 interrupt occurred or not.
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE29 SR_USART7_GLB  LL_SYSCFG_IsActiveFlag_USART7
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART7(void)
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[29], SYSCFG_ITLINE29_SR_USART7_GLB) == (SYSCFG_ITLINE29_SR_US
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE29_SR_USART7_GLB */
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE29_SR_USART8_GLB)
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if USART8 interrupt occurred or not.
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE29 SR_USART8_GLB  LL_SYSCFG_IsActiveFlag_USART8
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_USART8(void)
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[29], SYSCFG_ITLINE29_SR_USART8_GLB) == (SYSCFG_ITLINE29_SR_US
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE29_SR_USART8_GLB */
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE30_SR_CAN)
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if CAN interrupt occurred or not.
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE30 SR_CAN        LL_SYSCFG_IsActiveFlag_CAN
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_CAN(void)
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[30], SYSCFG_ITLINE30_SR_CAN) == (SYSCFG_ITLINE30_SR_CAN));
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE30_SR_CAN */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 261


1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_ITLINE30_SR_CEC)
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if CEC interrupt occurred or not, combined with EXTI line 27.
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_ITLINE30 SR_CEC        LL_SYSCFG_IsActiveFlag_CEC
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_CEC(void)
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->IT_LINE_SR[30], SYSCFG_ITLINE30_SR_CEC) == (SYSCFG_ITLINE30_SR_CEC));
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /* SYSCFG_ITLINE30_SR_CEC */
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set connections to TIMx Break inputs
1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 LOCKUP_LOCK   LL_SYSCFG_SetTIMBreakInputs\n
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR2 SRAM_PARITY_LOCK  LL_SYSCFG_SetTIMBreakInputs\n
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR2 PVD_LOCK      LL_SYSCFG_SetTIMBreakInputs
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Break This parameter can be a combination of the following values:
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_PVD (*)
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_SRAM_PARITY
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_LOCKUP
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetTIMBreakInputs(uint32_t Break)
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_PVD_LOCK)
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR2, SYSCFG_CFGR2_LOCKUP_LOCK | SYSCFG_CFGR2_SRAM_PARITY_LOCK | SYSCFG_CFGR2
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #else
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR2, SYSCFG_CFGR2_LOCKUP_LOCK | SYSCFG_CFGR2_SRAM_PARITY_LOCK, Break);
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR2_PVD_LOCK*/
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Get connections to TIMx Break inputs
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 LOCKUP_LOCK   LL_SYSCFG_GetTIMBreakInputs\n
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR2 SRAM_PARITY_LOCK  LL_SYSCFG_GetTIMBreakInputs\n
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         SYSCFG_CFGR2 PVD_LOCK      LL_SYSCFG_GetTIMBreakInputs
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Returned value can be can be a combination of the following values:
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_PVD (*)
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_SRAM_PARITY
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_TIMBREAK_LOCKUP
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetTIMBreakInputs(void)
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_PVD_LOCK)
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR2,
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****                              SYSCFG_CFGR2_LOCKUP_LOCK | SYSCFG_CFGR2_SRAM_PARITY_LOCK | SYSCFG_CFGR
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #else
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_LOCKUP_LOCK | SYSCFG_CFGR2_SRAM_PARITY_LOC
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** #endif /*SYSCFG_CFGR2_PVD_LOCK*/
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 262


1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Check if SRAM parity error detected
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 SRAM_PEF      LL_SYSCFG_IsActiveFlag_SP
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval State of bit (1 or 0).
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsActiveFlag_SP(void)
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (READ_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_SRAM_PEF) == (SYSCFG_CFGR2_SRAM_PEF));
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Clear SRAM parity error flag
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 SRAM_PEF      LL_SYSCFG_ClearFlag_SP
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_ClearFlag_SP(void)
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_SRAM_PEF);
1599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
1603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_DBGMCU DBGMCU
1606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
1607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Return the device identifier
1611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @note For STM32F03x devices, the device ID is 0x444
1612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @note For STM32F04x devices, the device ID is 0x445.
1613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @note For STM32F05x devices, the device ID is 0x440
1614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @note For STM32F07x devices, the device ID is 0x448
1615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @note For STM32F09x devices, the device ID is 0x442
1616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE DEV_ID        LL_DBGMCU_GetDeviceID
1617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFF
1618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetDeviceID(void)
1620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_DEV_ID));
1622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Return the device revision identifier
1626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @note This field indicates the revision of the device.
1627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****           For example, it is read as 0x1000 for Revision 1.0.
1628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE REV_ID        LL_DBGMCU_GetRevisionID
1629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFFF
1630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetRevisionID(void)
1632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_REV_ID) >> DBGMCU_IDCODE_REV_ID_Pos);
1634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Enable the Debug Module during STOP mode
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 263


1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_EnableDBGStopMode
1639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStopMode(void)
1642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
1644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Disable the Debug Module during STOP mode
1648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_DisableDBGStopMode
1649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStopMode(void)
1652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
1654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Enable the Debug Module during STANDBY mode
1658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_EnableDBGStandbyMode
1659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStandbyMode(void)
1662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
1664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Disable the Debug Module during STANDBY mode
1668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_DisableDBGStandbyMode
1669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStandbyMode(void)
1672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
1674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group1 peripherals)
1678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_APB1FZ DBG_TIM2_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM3_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM6_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM7_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM14_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_RTC_STOP            LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_WWDG_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_IWDG_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_I2C1_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_FreezePeriph\n
1687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_CAN_STOP  LL_DBGMCU_APB1_GRP1_FreezePeriph
1688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP (*)
1690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
1691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP (*)
1692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP (*)
1693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM14_STOP
1694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 264


1695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
1696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
1697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
1698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN_STOP (*)
1699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
1700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
1701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_FreezePeriph(uint32_t Periphs)
1704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(DBGMCU->APB1FZ, Periphs);
1706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group1 peripherals)
1710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_APB1FZ DBG_TIM2_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM3_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM6_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM7_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_TIM14_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_RTC_STOP            LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_WWDG_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_IWDG_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_I2C1_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
1719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB1FZ DBG_CAN_STOP            LL_DBGMCU_APB1_GRP1_UnFreezePeriph
1720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP (*)
1722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
1723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP (*)
1724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP (*)
1725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM14_STOP
1726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
1727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
1728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
1729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
1730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN_STOP (*)
1731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
1732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
1733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_UnFreezePeriph(uint32_t Periphs)
1736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB1FZ, Periphs);
1738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group2 peripherals)
1742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_APB2FZ DBG_TIM1_STOP   LL_DBGMCU_APB1_GRP2_FreezePeriph\n
1743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB2FZ DBG_TIM15_STOP  LL_DBGMCU_APB1_GRP2_FreezePeriph\n
1744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB2FZ DBG_TIM16_STOP  LL_DBGMCU_APB1_GRP2_FreezePeriph\n
1745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB2FZ DBG_TIM17_STOP  LL_DBGMCU_APB1_GRP2_FreezePeriph
1746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM1_STOP
1748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM15_STOP (*)
1749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM16_STOP
1750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM17_STOP
1751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 265


1752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
1753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP2_FreezePeriph(uint32_t Periphs)
1756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   SET_BIT(DBGMCU->APB2FZ, Periphs);
1758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group2 peripherals)
1762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll DBGMCU_APB2FZ DBG_TIM1_STOP   LL_DBGMCU_APB1_GRP2_UnFreezePeriph\n
1763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB2FZ DBG_TIM15_STOP  LL_DBGMCU_APB1_GRP2_UnFreezePeriph\n
1764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB2FZ DBG_TIM16_STOP  LL_DBGMCU_APB1_GRP2_UnFreezePeriph\n
1765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         DBGMCU_APB2FZ DBG_TIM17_STOP  LL_DBGMCU_APB1_GRP2_UnFreezePeriph
1766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
1767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM1_STOP
1768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM15_STOP (*)
1769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM16_STOP
1770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP2_TIM17_STOP
1771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *
1772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         (*) value not defined in all devices
1773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP2_UnFreezePeriph(uint32_t Periphs)
1776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB2FZ, Periphs);
1778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @}
1781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_FLASH FLASH
1784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @{
1785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Set FLASH Latency
1789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_SetLatency
1790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @param  Latency This parameter can be one of the following values:
1791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
1792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
1793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval None
1794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
1796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 1524              		.loc 10 1797 0
 1525 0002 4149     		ldr	r1, .L37
 1526 0004 0B68     		ldr	r3, [r1]
 1527 0006 0122     		movs	r2, #1
 1528 0008 9343     		bics	r3, r2
 1529 000a 1343     		orrs	r3, r2
 1530 000c 0B60     		str	r3, [r1]
 1531              	.LVL99:
 1532              	.LBE331:
 1533              	.LBE330:
 1534              	.LBB332:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 266


 1535              	.LBB333:
1798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** }
1799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** 
1800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** /**
1801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @brief  Get FLASH Latency
1802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_GetLatency
1803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
1804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
1805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
1806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   */
1807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
1808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h **** {
1809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_system.h ****   return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 1536              		.loc 10 1809 0
 1537 000e 0B68     		ldr	r3, [r1]
 1538              	.LBE333:
 1539              	.LBE332:
 148:Src/main.c    ****     {
 1540              		.loc 1 148 0
 1541 0010 1A42     		tst	r2, r3
 1542 0012 03D1     		bne	.L32
 150:Src/main.c    ****     }
 1543              		.loc 1 150 0
 1544 0014 9621     		movs	r1, #150
 1545 0016 3D48     		ldr	r0, .L37+4
 1546 0018 FFF7FEFF 		bl	_Error_Handler
 1547              	.LVL100:
 1548              	.L32:
 1549              	.LBB334:
 1550              	.LBB335:
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1551              		.loc 12 765 0
 1552 001c 3C4A     		ldr	r2, .L37+8
 1553 001e 1168     		ldr	r1, [r2]
 1554 0020 0123     		movs	r3, #1
 1555 0022 0B43     		orrs	r3, r1
 1556 0024 1360     		str	r3, [r2]
 1557              	.L33:
 1558              	.LBE335:
 1559              	.LBE334:
 1560              	.LBB336:
 1561              	.LBB337:
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1562              		.loc 12 785 0 discriminator 1
 1563 0026 3A4B     		ldr	r3, .L37+8
 1564 0028 1B68     		ldr	r3, [r3]
 1565              	.LBE337:
 1566              	.LBE336:
 155:Src/main.c    ****     {
 1567              		.loc 1 155 0 discriminator 1
 1568 002a 9B07     		lsls	r3, r3, #30
 1569 002c FBD5     		bpl	.L33
 1570              	.LVL101:
 1571              	.LBB338:
 1572              	.LBB339:
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1573              		.loc 12 811 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 267


 1574 002e 384B     		ldr	r3, .L37+8
 1575 0030 1A68     		ldr	r2, [r3]
 1576 0032 F821     		movs	r1, #248
 1577 0034 8A43     		bics	r2, r1
 1578 0036 7839     		subs	r1, r1, #120
 1579 0038 0A43     		orrs	r2, r1
 1580 003a 1A60     		str	r2, [r3]
 1581              	.LVL102:
 1582              	.LBE339:
 1583              	.LBE338:
 1584              	.LBB340:
 1585              	.LBB341:
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1586              		.loc 12 1072 0
 1587 003c 596A     		ldr	r1, [r3, #36]
 1588 003e 0122     		movs	r2, #1
 1589 0040 0A43     		orrs	r2, r1
 1590 0042 5A62     		str	r2, [r3, #36]
 1591              	.L34:
 1592              	.LBE341:
 1593              	.LBE340:
 1594              	.LBB342:
 1595              	.LBB343:
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1596              		.loc 12 1092 0 discriminator 1
 1597 0044 324B     		ldr	r3, .L37+8
 1598 0046 5B6A     		ldr	r3, [r3, #36]
 1599              	.LBE343:
 1600              	.LBE342:
 163:Src/main.c    ****     {
 1601              		.loc 1 163 0 discriminator 1
 1602 0048 9B07     		lsls	r3, r3, #30
 1603 004a FBD5     		bpl	.L34
 1604              	.LBB344:
 1605              	.LBB345:
 1606              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @file    stm32f0xx_ll_pwr.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @brief   Header file of PWR LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   *
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 268


  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #ifndef __STM32F0xx_LL_PWR_H
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define __STM32F0xx_LL_PWR_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #ifdef __cplusplus
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** extern "C" {
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #include "stm32f0xx.h"
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR)
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @defgroup PWR_LL PWR
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /* Private macros ------------------------------------------------------------*/
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /* Exported types ------------------------------------------------------------*/
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /* Exported constants --------------------------------------------------------*/
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Constants PWR Exported Constants
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @{
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_CLEAR_FLAG Clear Flags Defines
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_WriteReg function
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @{
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CR_CSBF                     PWR_CR_CSBF            /*!< Clear standby flag */
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CR_CWUF                     PWR_CR_CWUF            /*!< Clear wakeup flag */
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @}
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GET_FLAG Get Flags Defines
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_ReadReg function
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 269


  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @{
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CSR_WUF                     PWR_CSR_WUF            /*!< Wakeup flag */
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CSR_SBF                     PWR_CSR_SBF            /*!< Standby flag */
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_PVD_SUPPORT)
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CSR_PVDO                    PWR_CSR_PVDO           /*!< Power voltage detector outpu
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_PVD_SUPPORT */
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_VREFINTRDYF)
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CSR_VREFINTRDYF             PWR_CSR_VREFINTRDYF    /*!< VREFINT ready flag */
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_VREFINTRDYF */
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP1                   PWR_CSR_EWUP1          /*!< Enable WKUP pin 1 */
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP2                   PWR_CSR_EWUP2          /*!< Enable WKUP pin 2 */
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP3)
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP3                   PWR_CSR_EWUP3          /*!< Enable WKUP pin 3 */
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP3 */
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP4)
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP4                   PWR_CSR_EWUP4          /*!< Enable WKUP pin 4 */
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP4 */
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP5)
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP5                   PWR_CSR_EWUP5          /*!< Enable WKUP pin 5 */
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP5 */
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP6)
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP6                   PWR_CSR_EWUP6          /*!< Enable WKUP pin 6 */
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP6 */
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP7)
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP7                   PWR_CSR_EWUP7          /*!< Enable WKUP pin 7 */
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP7 */
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP8)
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP8                   PWR_CSR_EWUP8          /*!< Enable WKUP pin 8 */
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP8 */
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @}
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_MODE_PWR Mode Power
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @{
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_MODE_STOP_MAINREGU             0x00000000U                    /*!< Enter Stop mode w
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_MODE_STOP_LPREGU               (PWR_CR_LPDS)                  /*!< Enter Stop mode (
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_MODE_STANDBY                   (PWR_CR_PDDS)                  /*!< Enter Standby mod
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @}
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CR_LPDS)
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_REGU_MODE_DS_MODE  Regulator Mode In Deep Sleep Mode
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****  * @{
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****  */
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_REGU_DSMODE_MAIN        0x00000000U           /*!< Voltage Regulator in main mode du
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_REGU_DSMODE_LOW_POWER   (PWR_CR_LPDS)         /*!< Voltage Regulator in low-power mo
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @}
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CR_LPDS */
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_PVD_SUPPORT)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 270


 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_PVDLEVEL Power Voltage Detector Level
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @{
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_0                  (PWR_CR_PLS_LEV0)      /*!< Voltage threshold 0 */
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_1                  (PWR_CR_PLS_LEV1)      /*!< Voltage threshold 1 */
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_2                  (PWR_CR_PLS_LEV2)      /*!< Voltage threshold 2 */
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_3                  (PWR_CR_PLS_LEV3)      /*!< Voltage threshold 3 */
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_4                  (PWR_CR_PLS_LEV4)      /*!< Voltage threshold 4 */
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_5                  (PWR_CR_PLS_LEV5)      /*!< Voltage threshold 5 */
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_6                  (PWR_CR_PLS_LEV6)      /*!< Voltage threshold 6 */
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_7                  (PWR_CR_PLS_LEV7)      /*!< Voltage threshold 7 */
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @}
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_PVD_SUPPORT */
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_WAKEUP_PIN  Wakeup Pins
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @{
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN1                 (PWR_CSR_EWUP1)        /*!< WKUP pin 1 : PA0 */
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN2                 (PWR_CSR_EWUP2)        /*!< WKUP pin 2 : PC13 */
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP3)
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN3                 (PWR_CSR_EWUP3)        /*!< WKUP pin 3 : PE6 or PA2 acco
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP3 */
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP4)
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN4                 (PWR_CSR_EWUP4)        /*!< WKUP pin 4 : LLG TBD */
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP4 */
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP5)
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN5                 (PWR_CSR_EWUP5)        /*!< WKUP pin 5 : LLG TBD */
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP5 */
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP6)
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN6                 (PWR_CSR_EWUP6)        /*!< WKUP pin 6 : LLG TBD */
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP6 */
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP7)
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN7                 (PWR_CSR_EWUP7)        /*!< WKUP pin 7 : LLG TBD */
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP7 */
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP8)
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN8                 (PWR_CSR_EWUP8)        /*!< WKUP pin 8 : LLG TBD */
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP8 */
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @}
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @}
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /* Exported macro ------------------------------------------------------------*/
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Macros PWR Exported Macros
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @{
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @defgroup PWR_LL_EM_WRITE_READ Common write and read registers Macros
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @{
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 271


 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @brief  Write a value in PWR register
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @param  __REG__ Register to be written
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @param  __VALUE__ Value to be written in the register
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @retval None
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_WriteReg(__REG__, __VALUE__) WRITE_REG(PWR->__REG__, (__VALUE__))
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @brief  Read a value in PWR register
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @param  __REG__ Register to be read
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @retval Register value
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** #define LL_PWR_ReadReg(__REG__) READ_REG(PWR->__REG__)
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @}
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @}
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /* Exported functions --------------------------------------------------------*/
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Functions PWR Exported Functions
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @{
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /** @defgroup PWR_LL_EF_Configuration Configuration
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @{
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** 
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** /**
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @brief  Enable access to the backup domain
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @rmtoll CR    DBP       LL_PWR_EnableBkUpAccess
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   * @retval None
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   */
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableBkUpAccess(void)
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h **** {
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_pwr.h ****   SET_BIT(PWR->CR, PWR_CR_DBP);
 1607              		.loc 14 230 0
 1608 004c 314A     		ldr	r2, .L37+12
 1609 004e 1368     		ldr	r3, [r2]
 1610 0050 8021     		movs	r1, #128
 1611 0052 4900     		lsls	r1, r1, #1
 1612 0054 0B43     		orrs	r3, r1
 1613 0056 1360     		str	r3, [r2]
 1614              	.LBE345:
 1615              	.LBE344:
 1616              	.LBB346:
 1617              	.LBB347:
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable RTC
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_DisableRTC
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_DisableRTC(void)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 272


1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if RTC has been enabled or not
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_IsEnabledRTC
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_IsEnabledRTC(void)
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->BDCR, RCC_BDCR_RTCEN) == (RCC_BDCR_RTCEN));
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Force the Backup domain reset
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ForceBackupDomainReset
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ForceBackupDomainReset(void)
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_BDRST);
 1618              		.loc 12 1496 0
 1619 0058 2D4B     		ldr	r3, .L37+8
 1620 005a 1A6A     		ldr	r2, [r3, #32]
 1621 005c 8021     		movs	r1, #128
 1622 005e 4902     		lsls	r1, r1, #9
 1623 0060 0A43     		orrs	r2, r1
 1624 0062 1A62     		str	r2, [r3, #32]
 1625              	.LBE347:
 1626              	.LBE346:
 1627              	.LBB348:
 1628              	.LBB349:
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Release the Backup domain reset
1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ReleaseBackupDomainReset
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ReleaseBackupDomainReset(void)
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_BDRST);
 1629              		.loc 12 1506 0
 1630 0064 196A     		ldr	r1, [r3, #32]
 1631 0066 2C4A     		ldr	r2, .L37+16
 1632 0068 0A40     		ands	r2, r1
 1633 006a 1A62     		str	r2, [r3, #32]
 1634              	.LVL103:
 1635              	.LBE349:
 1636              	.LBE348:
 1637              	.LBB350:
 1638              	.LBB351:
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1639              		.loc 12 1442 0
 1640 006c 196A     		ldr	r1, [r3, #32]
 1641 006e 2B4A     		ldr	r2, .L37+20
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 273


 1642 0070 0A40     		ands	r2, r1
 1643 0072 8021     		movs	r1, #128
 1644 0074 8900     		lsls	r1, r1, #2
 1645 0076 0A43     		orrs	r2, r1
 1646 0078 1A62     		str	r2, [r3, #32]
 1647              	.LVL104:
 1648              	.LBE351:
 1649              	.LBE350:
 1650              	.LBB352:
 1651              	.LBB353:
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1652              		.loc 12 1466 0
 1653 007a 1A6A     		ldr	r2, [r3, #32]
 1654 007c 8021     		movs	r1, #128
 1655 007e 0902     		lsls	r1, r1, #8
 1656 0080 0A43     		orrs	r2, r1
 1657 0082 1A62     		str	r2, [r3, #32]
 1658              	.LVL105:
 1659              	.LBE353:
 1660              	.LBE352:
 1661              	.LBB354:
 1662              	.LBB355:
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @}
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_PLL PLL
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @{
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Enable PLL
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Enable
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Enable(void)
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_PLLON);
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Disable PLL
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @note Cannot be disabled if the PLL clock is used as the system clock
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Disable
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Disable(void)
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Check if PLL Ready
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CR           PLLRDY        LL_RCC_PLL_IsReady
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 274


1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_IsReady(void)
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == (RCC_CR_PLLRDY));
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** 
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** #if defined(RCC_PLLSRC_PREDIV1_SUPPORT)
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** /**
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @brief  Configure PLL used for SYSCLK Domain
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @rmtoll CFGR         PLLSRC        LL_RCC_PLL_ConfigDomain_SYS\n
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR         PLLMUL        LL_RCC_PLL_ConfigDomain_SYS\n
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         CFGR2        PREDIV        LL_RCC_PLL_ConfigDomain_SYS
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI48 (*)
1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         (*) value not defined in all devices
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  PLLMul This parameter can be one of the following values:
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_2
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_10
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_11
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_13
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_14
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_15
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @param  PLLDiv This parameter can be one of the following values:
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_1
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_2
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_3
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_4
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_5
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_6
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_7
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_8
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_9
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_10
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_11
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_12
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_13
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_14
1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_15
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PREDIV_DIV_16
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   * @retval None
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   */
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigDomain_SYS(uint32_t Source, uint32_t PLLMul, uint32_t PLLDiv)
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** {
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PLLSRC | RCC_CFGR_PLLMUL, Source | PLLMul);
 1663              		.loc 12 1597 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 275


 1664 0084 5968     		ldr	r1, [r3, #4]
 1665 0086 264A     		ldr	r2, .L37+24
 1666 0088 0A40     		ands	r2, r1
 1667 008a A221     		movs	r1, #162
 1668 008c 8903     		lsls	r1, r1, #14
 1669 008e 0A43     		orrs	r2, r1
 1670 0090 5A60     		str	r2, [r3, #4]
1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PREDIV, PLLDiv);
 1671              		.loc 12 1598 0
 1672 0092 DA6A     		ldr	r2, [r3, #44]
 1673 0094 0F21     		movs	r1, #15
 1674 0096 8A43     		bics	r2, r1
 1675 0098 0E39     		subs	r1, r1, #14
 1676 009a 0A43     		orrs	r2, r1
 1677 009c DA62     		str	r2, [r3, #44]
 1678              	.LVL106:
 1679              	.LBE355:
 1680              	.LBE354:
 1681              	.LBB356:
 1682              	.LBB357:
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1683              		.loc 12 1524 0
 1684 009e 1A68     		ldr	r2, [r3]
 1685 00a0 8021     		movs	r1, #128
 1686 00a2 4904     		lsls	r1, r1, #17
 1687 00a4 0A43     		orrs	r2, r1
 1688 00a6 1A60     		str	r2, [r3]
 1689              	.L35:
 1690              	.LBE357:
 1691              	.LBE356:
 1692              	.LBB358:
 1693              	.LBB359:
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1694              		.loc 12 1545 0 discriminator 1
 1695 00a8 194B     		ldr	r3, .L37+8
 1696 00aa 1B68     		ldr	r3, [r3]
 1697              	.LBE359:
 1698              	.LBE358:
 181:Src/main.c    ****     {
 1699              		.loc 1 181 0 discriminator 1
 1700 00ac 9B01     		lsls	r3, r3, #6
 1701 00ae FBD5     		bpl	.L35
 1702              	.LVL107:
 1703              	.LBB360:
 1704              	.LBB361:
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1705              		.loc 12 1153 0
 1706 00b0 174B     		ldr	r3, .L37+8
 1707 00b2 5A68     		ldr	r2, [r3, #4]
 1708 00b4 F021     		movs	r1, #240
 1709 00b6 8A43     		bics	r2, r1
 1710 00b8 5A60     		str	r2, [r3, #4]
 1711              	.LVL108:
 1712              	.LBE361:
 1713              	.LBE360:
 1714              	.LBB362:
 1715              	.LBB363:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 276


1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1716              		.loc 12 1169 0
 1717 00ba 5968     		ldr	r1, [r3, #4]
 1718 00bc 194A     		ldr	r2, .L37+28
 1719 00be 0A40     		ands	r2, r1
 1720 00c0 5A60     		str	r2, [r3, #4]
 1721              	.LVL109:
 1722              	.LBE363:
 1723              	.LBE362:
 1724              	.LBB364:
 1725              	.LBB365:
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1726              		.loc 12 1117 0
 1727 00c2 5A68     		ldr	r2, [r3, #4]
 1728 00c4 0321     		movs	r1, #3
 1729 00c6 8A43     		bics	r2, r1
 1730 00c8 0139     		subs	r1, r1, #1
 1731 00ca 0A43     		orrs	r2, r1
 1732 00cc 5A60     		str	r2, [r3, #4]
 1733              	.L36:
 1734              	.LBE365:
 1735              	.LBE364:
 1736              	.LBB366:
 1737              	.LBB367:
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1738              		.loc 12 1133 0 discriminator 1
 1739 00ce 104B     		ldr	r3, .L37+8
 1740 00d0 5B68     		ldr	r3, [r3, #4]
 1741 00d2 0C22     		movs	r2, #12
 1742 00d4 1340     		ands	r3, r2
 1743              	.LBE367:
 1744              	.LBE366:
 191:Src/main.c    ****     {
 1745              		.loc 1 191 0 discriminator 1
 1746 00d6 082B     		cmp	r3, #8
 1747 00d8 F9D1     		bne	.L36
 194:Src/main.c    **** 
 1748              		.loc 1 194 0
 1749 00da 134C     		ldr	r4, .L37+32
 1750 00dc 2000     		movs	r0, r4
 1751 00de FFF7FEFF 		bl	LL_Init1msTick
 1752              	.LVL110:
 1753              	.LBB368:
 1754              	.LBB369:
 1755              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @file    stm32f0xx_ll_cortex.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @brief   Header file of CORTEX LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   @verbatim
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ==============================================================================
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****                      ##### How to use this driver #####
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****     [..]
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****     The LL CORTEX driver contains a set of generic APIs that can be
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****     used by user:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 277


  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****       (+) SYSTICK configuration used by @ref LL_mDelay and @ref LL_Init1msTick
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****           functions
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****       (+) Low power mode configuration (SCB register of Cortex-MCU)
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****       (+) API to access to MCU info (CPUID register)
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   @endverbatim
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ******************************************************************************
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @attention
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * Redistribution and use in source and binary forms, with or without modification,
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * are permitted provided that the following conditions are met:
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *      this list of conditions and the following disclaimer.
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *      this list of conditions and the following disclaimer in the documentation
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *      and/or other materials provided with the distribution.
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *      may be used to endorse or promote products derived from this software
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *      without specific prior written permission.
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ******************************************************************************
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #ifndef __STM32F0xx_LL_CORTEX_H
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #define __STM32F0xx_LL_CORTEX_H
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #ifdef __cplusplus
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** extern "C" {
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #endif
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Includes ------------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #include "stm32f0xx.h"
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @addtogroup STM32F0xx_LL_Driver
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL CORTEX
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Private types -------------------------------------------------------------*/
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Private variables ---------------------------------------------------------*/
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 278


  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Private constants ---------------------------------------------------------*/
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Private macros ------------------------------------------------------------*/
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Exported types ------------------------------------------------------------*/
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Exported constants --------------------------------------------------------*/
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Constants CORTEX Exported Constants
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CLKSOURCE_HCLK SYSTICK Clock Source
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK_DIV8     0x00000000U                 /*!< AHB clock divided by 8 
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK          SysTick_CTRL_CLKSOURCE_Msk  /*!< AHB clock selected as S
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @}
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @}
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Exported macro ------------------------------------------------------------*/
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Exported functions --------------------------------------------------------*/
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Functions CORTEX Exported Functions
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EF_SYSTICK SYSTICK
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @brief  This function checks if the Systick counter flag is active or not.
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @note   It can be used in timeout function on application side.
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @rmtoll STK_CTRL     COUNTFLAG     LL_SYSTICK_IsActiveCounterFlag
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @retval State of bit (1 or 0).
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** __STATIC_INLINE uint32_t LL_SYSTICK_IsActiveCounterFlag(void)
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** {
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   return ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) == (SysTick_CTRL_COUNTFLAG_Msk));
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** }
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @brief  Configures the SysTick clock source
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @rmtoll STK_CTRL     CLKSOURCE     LL_SYSTICK_SetClkSource
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @param  Source This parameter can be one of the following values:
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *         @arg @ref LL_SYSTICK_CLKSOURCE_HCLK_DIV8
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *         @arg @ref LL_SYSTICK_CLKSOURCE_HCLK
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @retval None
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** __STATIC_INLINE void LL_SYSTICK_SetClkSource(uint32_t Source)
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** {
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   if (Source == LL_SYSTICK_CLKSOURCE_HCLK)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 279


 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   {
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****     SET_BIT(SysTick->CTRL, LL_SYSTICK_CLKSOURCE_HCLK);
 1756              		.loc 15 128 0
 1757 00e2 124A     		ldr	r2, .L37+36
 1758 00e4 1168     		ldr	r1, [r2]
 1759 00e6 0423     		movs	r3, #4
 1760 00e8 0B43     		orrs	r3, r1
 1761 00ea 1360     		str	r3, [r2]
 1762              	.LVL111:
 1763              	.LBE369:
 1764              	.LBE368:
 198:Src/main.c    **** 
 1765              		.loc 1 198 0
 1766 00ec 2000     		movs	r0, r4
 1767 00ee FFF7FEFF 		bl	LL_SetSystemCoreClock
 1768              	.LVL112:
 1769              	.LBB370:
 1770              	.LBB371:
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h **** }
 1771              		.loc 12 1290 0
 1772 00f2 074A     		ldr	r2, .L37+8
 1773 00f4 136B     		ldr	r3, [r2, #48]
 1774 00f6 0321     		movs	r1, #3
 1775 00f8 8B43     		bics	r3, r1
 1776 00fa 1363     		str	r3, [r2, #48]
 1777              	.LVL113:
 1778              	.LBE371:
 1779              	.LBE370:
 1780              	.LBB372:
 1781              	.LBB373:
 692:Drivers/CMSIS/Include/core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 1782              		.loc 3 692 0
 1783 00fc 0C4A     		ldr	r2, .L37+40
 1784 00fe 136A     		ldr	r3, [r2, #32]
 1785 0100 1B02     		lsls	r3, r3, #8
 1786 0102 1B0A     		lsrs	r3, r3, #8
 1787 0104 1362     		str	r3, [r2, #32]
 1788              	.LVL114:
 1789              	.LBE373:
 1790              	.LBE372:
 204:Src/main.c    **** 
 1791              		.loc 1 204 0
 1792              		@ sp needed
 1793 0106 10BD     		pop	{r4, pc}
 1794              	.L38:
 1795              		.align	2
 1796              	.L37:
 1797 0108 00200240 		.word	1073881088
 1798 010c 00000000 		.word	.LC0
 1799 0110 00100240 		.word	1073876992
 1800 0114 00700040 		.word	1073770496
 1801 0118 FFFFFEFF 		.word	-65537
 1802 011c FFFCFFFF 		.word	-769
 1803 0120 FF7FC2FF 		.word	-4030465
 1804 0124 FFF8FFFF 		.word	-1793
 1805 0128 006CDC02 		.word	48000000
 1806 012c 10E000E0 		.word	-536813552
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 280


 1807 0130 00ED00E0 		.word	-536810240
 1808              		.cfi_endproc
 1809              	.LFE742:
 1811              		.section	.text.main,"ax",%progbits
 1812              		.align	2
 1813              		.global	main
 1814              		.code	16
 1815              		.thumb_func
 1817              	main:
 1818              	.LFB740:
  79:Src/main.c    ****     /* USER CODE BEGIN 1 */
 1819              		.loc 1 79 0
 1820              		.cfi_startproc
 1821              		@ Volatile: function does not return.
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824 0000 10B5     		push	{r4, lr}
 1825              	.LCFI17:
 1826              		.cfi_def_cfa_offset 8
 1827              		.cfi_offset 4, -8
 1828              		.cfi_offset 14, -4
  87:Src/main.c    **** 
 1829              		.loc 1 87 0
 1830 0002 FFF7FEFF 		bl	LL_Init
 1831              	.LVL115:
  94:Src/main.c    **** 
 1832              		.loc 1 94 0
 1833 0006 FFF7FEFF 		bl	SystemClock_Config
 1834              	.LVL116:
 101:Src/main.c    ****     MX_DMA_Init();
 1835              		.loc 1 101 0
 1836 000a FFF7FEFF 		bl	MX_GPIO_Init
 1837              	.LVL117:
 102:Src/main.c    ****     MX_SPI1_Init();
 1838              		.loc 1 102 0
 1839 000e FFF7FEFF 		bl	MX_DMA_Init
 1840              	.LVL118:
 103:Src/main.c    ****     MX_USART1_UART_Init();
 1841              		.loc 1 103 0
 1842 0012 FFF7FEFF 		bl	MX_SPI1_Init
 1843              	.LVL119:
 104:Src/main.c    ****     MX_IWDG_Init();
 1844              		.loc 1 104 0
 1845 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 1846              	.LVL120:
 105:Src/main.c    ****     MX_RTC_Init();
 1847              		.loc 1 105 0
 1848 001a FFF7FEFF 		bl	MX_IWDG_Init
 1849              	.LVL121:
 106:Src/main.c    ****     MX_WWDG_Init();
 1850              		.loc 1 106 0
 1851 001e FFF7FEFF 		bl	MX_RTC_Init
 1852              	.LVL122:
 107:Src/main.c    ****     MX_CRC_Init();
 1853              		.loc 1 107 0
 1854 0022 FFF7FEFF 		bl	MX_WWDG_Init
 1855              	.LVL123:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 281


 108:Src/main.c    ****     /* USER CODE BEGIN 2 */
 1856              		.loc 1 108 0
 1857 0026 FFF7FEFF 		bl	MX_CRC_Init
 1858              	.LVL124:
 1859              	.L40:
 1860 002a FEE7     		b	.L40
 1861              		.cfi_endproc
 1862              	.LFE740:
 1864              		.section	.rodata.str1.4,"aMS",%progbits,1
 1865              		.align	2
 1866              	.LC0:
 1867 0000 5372632F 		.ascii	"Src/main.c\000"
 1867      6D61696E 
 1867      2E6300
 1868              		.text
 1869              	.Letext0:
 1870              		.file 16 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f070x6.h"
 1871              		.file 17 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defau
 1872              		.file 18 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 1873              		.file 19 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_utils.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s 			page 282


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:20     .text.LL_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:24     .text.LL_Init:00000000 LL_Init
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:91     .text.LL_Init:00000034 $d
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:98     .text.MX_CRC_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:102    .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:159    .text.MX_CRC_Init:0000002c $d
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:165    .text.MX_IWDG_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:169    .text.MX_IWDG_Init:00000000 MX_IWDG_Init
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:246    .text.MX_IWDG_Init:00000024 $d
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:255    .text.MX_WWDG_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:259    .text.MX_WWDG_Init:00000000 MX_WWDG_Init
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:343    .text.MX_WWDG_Init:00000044 $d
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:350    .text.MX_DMA_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:354    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:430    .text.MX_DMA_Init:0000003c $d
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:437    .text.MX_GPIO_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:441    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:729    .text.MX_GPIO_Init:00000124 $d
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:735    .text.MX_SPI1_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:739    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1057   .text.MX_SPI1_Init:00000134 $d
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1069   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1073   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1357   .text.MX_USART1_UART_Init:00000114 $d
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1373   .text.MX_RTC_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1377   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1477   .text.MX_RTC_Init:00000064 $d
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1484   .text._Error_Handler:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1489   .text._Error_Handler:00000000 _Error_Handler
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1504   .text.SystemClock_Config:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1509   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1797   .text.SystemClock_Config:00000108 $d
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1812   .text.main:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1817   .text.main:00000000 main
C:\Users\strag\AppData\Local\Temp\ccPv3bgG.s:1865   .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
LL_GPIO_Init
LL_SPI_Init
LL_USART_Init
LL_RTC_Init
LL_RTC_TIME_Init
LL_RTC_DATE_Init
LL_Init1msTick
LL_SetSystemCoreClock
