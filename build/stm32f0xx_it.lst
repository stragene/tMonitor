ARM GAS  C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f0xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	2
  21              		.global	NMI_Handler
  22              		.code	16
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB740:
  27              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /**
   2:Src/stm32f0xx_it.c ****   ******************************************************************************
   3:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   4:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f0xx_it.c ****   ******************************************************************************
   6:Src/stm32f0xx_it.c ****   *
   7:Src/stm32f0xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f0xx_it.c ****   *
   9:Src/stm32f0xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f0xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f0xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f0xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f0xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f0xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f0xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f0xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f0xx_it.c ****   *
  20:Src/stm32f0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f0xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f0xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f0xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f0xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f0xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f0xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f0xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f0xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f0xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f0xx_it.c ****   *
  31:Src/stm32f0xx_it.c ****   ******************************************************************************
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s 			page 2


  32:Src/stm32f0xx_it.c ****   */
  33:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f0xx_it.c **** #include "stm32f0xx.h"
  35:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  36:Src/stm32f0xx_it.c **** #include "uart_hal.h"
  37:Src/stm32f0xx_it.c **** #include "nbModule.h"
  38:Src/stm32f0xx_it.c **** 
  39:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  40:Src/stm32f0xx_it.c **** 
  41:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  42:Src/stm32f0xx_it.c **** 
  43:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  44:Src/stm32f0xx_it.c **** 
  45:Src/stm32f0xx_it.c **** /******************************************************************************/
  46:Src/stm32f0xx_it.c **** /*            Cortex-M0 Processor Interruption and Exception Handlers         */
  47:Src/stm32f0xx_it.c **** /******************************************************************************/
  48:Src/stm32f0xx_it.c **** 
  49:Src/stm32f0xx_it.c **** /**
  50:Src/stm32f0xx_it.c **** * @brief This function handles Non maskable interrupt.
  51:Src/stm32f0xx_it.c **** */
  52:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  53:Src/stm32f0xx_it.c **** {
  28              		.loc 1 53 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  54:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  55:Src/stm32f0xx_it.c **** 
  56:Src/stm32f0xx_it.c ****     /* USER CODE END NonMaskableInt_IRQn 0 */
  57:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  58:Src/stm32f0xx_it.c **** 
  59:Src/stm32f0xx_it.c ****     /* USER CODE END NonMaskableInt_IRQn 1 */
  60:Src/stm32f0xx_it.c **** }
  33              		.loc 1 60 0
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE740:
  39 0002 C046     		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	2
  41              		.global	HardFault_Handler
  42              		.code	16
  43              		.thumb_func
  45              	HardFault_Handler:
  46              	.LFB741:
  61:Src/stm32f0xx_it.c **** 
  62:Src/stm32f0xx_it.c **** /**
  63:Src/stm32f0xx_it.c **** * @brief This function handles Hard fault interrupt.
  64:Src/stm32f0xx_it.c **** */
  65:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  66:Src/stm32f0xx_it.c **** {
  47              		.loc 1 66 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s 			page 3


  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE741:
  58 0002 C046     		.section	.text.SVC_Handler,"ax",%progbits
  59              		.align	2
  60              		.global	SVC_Handler
  61              		.code	16
  62              		.thumb_func
  64              	SVC_Handler:
  65              	.LFB742:
  67:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN HardFault_IRQn 0 */
  68:Src/stm32f0xx_it.c **** 
  69:Src/stm32f0xx_it.c ****     /* USER CODE END HardFault_IRQn 0 */
  70:Src/stm32f0xx_it.c ****     while (1)
  71:Src/stm32f0xx_it.c ****     {
  72:Src/stm32f0xx_it.c ****         /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  73:Src/stm32f0xx_it.c ****         /* USER CODE END W1_HardFault_IRQn 0 */
  74:Src/stm32f0xx_it.c ****     }
  75:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN HardFault_IRQn 1 */
  76:Src/stm32f0xx_it.c **** 
  77:Src/stm32f0xx_it.c ****     /* USER CODE END HardFault_IRQn 1 */
  78:Src/stm32f0xx_it.c **** }
  79:Src/stm32f0xx_it.c **** 
  80:Src/stm32f0xx_it.c **** /**
  81:Src/stm32f0xx_it.c **** * @brief This function handles System service call via SWI instruction.
  82:Src/stm32f0xx_it.c **** */
  83:Src/stm32f0xx_it.c **** void SVC_Handler(void)
  84:Src/stm32f0xx_it.c **** {
  66              		.loc 1 84 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  85:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN SVC_IRQn 0 */
  86:Src/stm32f0xx_it.c **** 
  87:Src/stm32f0xx_it.c ****     /* USER CODE END SVC_IRQn 0 */
  88:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN SVC_IRQn 1 */
  89:Src/stm32f0xx_it.c **** 
  90:Src/stm32f0xx_it.c ****     /* USER CODE END SVC_IRQn 1 */
  91:Src/stm32f0xx_it.c **** }
  71              		.loc 1 91 0
  72              		@ sp needed
  73 0000 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE742:
  77 0002 C046     		.section	.text.PendSV_Handler,"ax",%progbits
  78              		.align	2
  79              		.global	PendSV_Handler
  80              		.code	16
  81              		.thumb_func
  83              	PendSV_Handler:
  84              	.LFB743:
  92:Src/stm32f0xx_it.c **** 
  93:Src/stm32f0xx_it.c **** /**
  94:Src/stm32f0xx_it.c **** * @brief This function handles Pendable request for system service.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s 			page 4


  95:Src/stm32f0xx_it.c **** */
  96:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
  97:Src/stm32f0xx_it.c **** {
  85              		.loc 1 97 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  98:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN PendSV_IRQn 0 */
  99:Src/stm32f0xx_it.c **** 
 100:Src/stm32f0xx_it.c ****     /* USER CODE END PendSV_IRQn 0 */
 101:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN PendSV_IRQn 1 */
 102:Src/stm32f0xx_it.c **** 
 103:Src/stm32f0xx_it.c ****     /* USER CODE END PendSV_IRQn 1 */
 104:Src/stm32f0xx_it.c **** }
  90              		.loc 1 104 0
  91              		@ sp needed
  92 0000 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE743:
  96 0002 C046     		.section	.text.SysTick_Handler,"ax",%progbits
  97              		.align	2
  98              		.global	SysTick_Handler
  99              		.code	16
 100              		.thumb_func
 102              	SysTick_Handler:
 103              	.LFB744:
 105:Src/stm32f0xx_it.c **** 
 106:Src/stm32f0xx_it.c **** /**
 107:Src/stm32f0xx_it.c **** * @brief This function handles System tick timer.
 108:Src/stm32f0xx_it.c **** */
 109:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 110:Src/stm32f0xx_it.c **** {
 104              		.loc 1 110 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 111:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN SysTick_IRQn 0 */
 112:Src/stm32f0xx_it.c **** 
 113:Src/stm32f0xx_it.c ****     /* USER CODE END SysTick_IRQn 0 */
 114:Src/stm32f0xx_it.c **** 
 115:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN SysTick_IRQn 1 */
 116:Src/stm32f0xx_it.c **** 
 117:Src/stm32f0xx_it.c ****     /* USER CODE END SysTick_IRQn 1 */
 118:Src/stm32f0xx_it.c **** }
 109              		.loc 1 118 0
 110              		@ sp needed
 111 0000 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE744:
 115 0002 C046     		.section	.text.DMA1_Channel2_3_IRQHandler,"ax",%progbits
 116              		.align	2
 117              		.global	DMA1_Channel2_3_IRQHandler
 118              		.code	16
 119              		.thumb_func
 121              	DMA1_Channel2_3_IRQHandler:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s 			page 5


 122              	.LFB745:
 119:Src/stm32f0xx_it.c **** 
 120:Src/stm32f0xx_it.c **** /******************************************************************************/
 121:Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 122:Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 123:Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 124:Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 125:Src/stm32f0xx_it.c **** /******************************************************************************/
 126:Src/stm32f0xx_it.c **** 
 127:Src/stm32f0xx_it.c **** /**
 128:Src/stm32f0xx_it.c **** * @brief This function handles DMA1 channel 2 and 3 interrupts.
 129:Src/stm32f0xx_it.c **** */
 130:Src/stm32f0xx_it.c **** void DMA1_Channel2_3_IRQHandler(void)
 131:Src/stm32f0xx_it.c **** {
 123              		.loc 1 131 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 132:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */
 133:Src/stm32f0xx_it.c **** 
 134:Src/stm32f0xx_it.c ****     /* USER CODE END DMA1_Channel2_3_IRQn 0 */
 135:Src/stm32f0xx_it.c **** 
 136:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */
 137:Src/stm32f0xx_it.c **** 
 138:Src/stm32f0xx_it.c ****     /* USER CODE END DMA1_Channel2_3_IRQn 1 */
 139:Src/stm32f0xx_it.c **** }
 128              		.loc 1 139 0
 129              		@ sp needed
 130 0000 7047     		bx	lr
 131              		.cfi_endproc
 132              	.LFE745:
 134 0002 C046     		.section	.text.DMA1_Channel4_5_IRQHandler,"ax",%progbits
 135              		.align	2
 136              		.global	DMA1_Channel4_5_IRQHandler
 137              		.code	16
 138              		.thumb_func
 140              	DMA1_Channel4_5_IRQHandler:
 141              	.LFB746:
 140:Src/stm32f0xx_it.c **** 
 141:Src/stm32f0xx_it.c **** /**
 142:Src/stm32f0xx_it.c **** * @brief This function handles DMA1 channel 4 and 5 interrupts.
 143:Src/stm32f0xx_it.c **** */
 144:Src/stm32f0xx_it.c **** void DMA1_Channel4_5_IRQHandler(void)
 145:Src/stm32f0xx_it.c **** {
 142              		.loc 1 145 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 146:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN DMA1_Channel4_5_IRQn 0 */
 147:Src/stm32f0xx_it.c **** 
 148:Src/stm32f0xx_it.c ****     /* USER CODE END DMA1_Channel4_5_IRQn 0 */
 149:Src/stm32f0xx_it.c **** 
 150:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN DMA1_Channel4_5_IRQn 1 */
 151:Src/stm32f0xx_it.c **** 
 152:Src/stm32f0xx_it.c ****     /* USER CODE END DMA1_Channel4_5_IRQn 1 */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s 			page 6


 153:Src/stm32f0xx_it.c **** }
 147              		.loc 1 153 0
 148              		@ sp needed
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE746:
 153 0002 C046     		.section	.text.USART1_IRQHandler,"ax",%progbits
 154              		.align	2
 155              		.global	USART1_IRQHandler
 156              		.code	16
 157              		.thumb_func
 159              	USART1_IRQHandler:
 160              	.LFB747:
 154:Src/stm32f0xx_it.c **** 
 155:Src/stm32f0xx_it.c **** /**
 156:Src/stm32f0xx_it.c **** * @brief This function handles USART1 global interrupt.
 157:Src/stm32f0xx_it.c **** */
 158:Src/stm32f0xx_it.c **** void USART1_IRQHandler(void)
 159:Src/stm32f0xx_it.c **** {
 161              		.loc 1 159 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 160:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN USART1_IRQn 0 */
 161:Src/stm32f0xx_it.c **** 
 162:Src/stm32f0xx_it.c ****     /* USER CODE END USART1_IRQn 0 */
 163:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN USART1_IRQn 1 */
 164:Src/stm32f0xx_it.c **** 
 165:Src/stm32f0xx_it.c ****     /* USER CODE END USART1_IRQn 1 */
 166:Src/stm32f0xx_it.c **** }
 166              		.loc 1 166 0
 167              		@ sp needed
 168 0000 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE747:
 172 0002 C046     		.text
 173              	.Letext0:
 174              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 175              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 176              		.file 4 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_dma.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:20     .text.NMI_Handler:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:40     .text.HardFault_Handler:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:59     .text.SVC_Handler:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:64     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:78     .text.PendSV_Handler:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:83     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:97     .text.SysTick_Handler:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:102    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:116    .text.DMA1_Channel2_3_IRQHandler:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:121    .text.DMA1_Channel2_3_IRQHandler:00000000 DMA1_Channel2_3_IRQHandler
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:135    .text.DMA1_Channel4_5_IRQHandler:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:140    .text.DMA1_Channel4_5_IRQHandler:00000000 DMA1_Channel4_5_IRQHandler
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:154    .text.USART1_IRQHandler:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccgVCXJD.s:159    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
