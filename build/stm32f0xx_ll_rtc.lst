ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f0xx_ll_rtc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.LL_RTC_StructInit,"ax",%progbits
  20              		.align	2
  21              		.global	LL_RTC_StructInit
  22              		.code	16
  23              		.thumb_func
  25              	LL_RTC_StructInit:
  26              	.LFB191:
  27              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @file    stm32f0xx_ll_rtc.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief   RTC LL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 2


  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #if defined(USE_FULL_LL_DRIVER)
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /* Includes ------------------------------------------------------------------*/
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #include "stm32f0xx_ll_rtc.h"
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #include "stm32f0xx_ll_cortex.h"
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #ifdef  USE_FULL_ASSERT
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #include "stm32_assert.h"
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #else
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define assert_param(expr) ((void)0U)
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #endif
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /** @addtogroup STM32F0xx_LL_Driver
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @{
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #if defined(RTC)
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /** @addtogroup RTC_LL
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @{
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /* Private types -------------------------------------------------------------*/
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /* Private variables ---------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /* Private constants ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /** @addtogroup RTC_LL_Private_Constants
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @{
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /* Default values used for prescaler */
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define RTC_ASYNCH_PRESC_DEFAULT     0x0000007FU
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define RTC_SYNCH_PRESC_DEFAULT      0x000000FFU
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /* Values used for timeout */
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define RTC_INITMODE_TIMEOUT         1000U /* 1s when tick set to 1ms */
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define RTC_SYNCHRO_TIMEOUT          1000U /* 1s when tick set to 1ms */
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @}
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /* Private macros ------------------------------------------------------------*/
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /** @addtogroup RTC_LL_Private_Macros
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @{
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_HOURFORMAT(__VALUE__) (((__VALUE__) == LL_RTC_HOURFORMAT_24HOUR) \
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                       || ((__VALUE__) == LL_RTC_HOURFORMAT_AMPM))
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_ASYNCH_PREDIV(__VALUE__)   ((__VALUE__) <= 0x7FU)
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_SYNCH_PREDIV(__VALUE__)    ((__VALUE__) <= 0x7FFFU)
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_FORMAT(__VALUE__) (((__VALUE__) == LL_RTC_FORMAT_BIN) \
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                   || ((__VALUE__) == LL_RTC_FORMAT_BCD))
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_TIME_FORMAT(__VALUE__) (((__VALUE__) == LL_RTC_TIME_FORMAT_AM_OR_24) \
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 3


  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                        || ((__VALUE__) == LL_RTC_TIME_FORMAT_PM))
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_HOUR12(__HOUR__)            (((__HOUR__) > 0U) && ((__HOUR__) <= 12U))
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_HOUR24(__HOUR__)            ((__HOUR__) <= 23U)
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_MINUTES(__MINUTES__)        ((__MINUTES__) <= 59U)
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_SECONDS(__SECONDS__)        ((__SECONDS__) <= 59U)
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_WEEKDAY(__VALUE__) (((__VALUE__) == LL_RTC_WEEKDAY_MONDAY) \
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_TUESDAY) \
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_WEDNESDAY) \
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_THURSDAY) \
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_FRIDAY) \
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_SATURDAY) \
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_SUNDAY))
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_DAY(__DAY__)    (((__DAY__) >= 1U) && ((__DAY__) <= 31U))
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_MONTH(__VALUE__) (((__VALUE__) == LL_RTC_MONTH_JANUARY) \
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_FEBRUARY) \
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_MARCH) \
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_APRIL) \
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_MAY) \
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_JUNE) \
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_JULY) \
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_AUGUST) \
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_SEPTEMBER) \
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_OCTOBER) \
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_NOVEMBER) \
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                  || ((__VALUE__) == LL_RTC_MONTH_DECEMBER))
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_YEAR(__YEAR__) ((__YEAR__) <= 99U)
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_ALMA_MASK(__VALUE__) (((__VALUE__) == LL_RTC_ALMA_MASK_NONE) \
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_DATEWEEKDAY) \
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_HOURS) \
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_MINUTES) \
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_SECONDS) \
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_ALL))
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #define IS_LL_RTC_ALMA_DATE_WEEKDAY_SEL(__SEL__) (((__SEL__) == LL_RTC_ALMA_DATEWEEKDAYSEL_DATE) ||
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                                                   ((__SEL__) == LL_RTC_ALMA_DATEWEEKDAYSEL_WEEKDAY)
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @}
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /* Exported functions --------------------------------------------------------*/
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /** @addtogroup RTC_LL_Exported_Functions
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @{
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /** @addtogroup RTC_LL_EF_Init
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @{
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 4


 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief  De-Initializes the RTC registers to their default reset values.
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @note   This function doesn't reset the RTC Clock source and RTC Backup Data
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         registers.
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - SUCCESS: RTC registers are de-initialized
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - ERROR: RTC registers are not de-initialized
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** ErrorStatus LL_RTC_DeInit(RTC_TypeDef *RTCx)
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** {
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Check the parameter */
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Set Initialization mode */
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   if (LL_RTC_EnterInitMode(RTCx) != ERROR)
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Reset TR, DR and CR registers */
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, TR,       0x00000000U);
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #if defined(RTC_WAKEUP_SUPPORT)
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, WUTR,     RTC_WUTR_WUT);
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #endif /* RTC_WAKEUP_SUPPORT */
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, DR  ,     (RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #if defined(RTC_WAKEUP_SUPPORT)
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, CR, (LL_RTC_ReadReg(RTCx, CR) & RTC_CR_WUCKSEL));
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #else
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, CR, 0x00000000U);
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #endif /* RTC_WAKEUP_SUPPORT */
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, PRER,     (RTC_PRER_PREDIV_A | RTC_SYNCH_PRESC_DEFAULT));
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMAR,   0x00000000U);
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, SHIFTR,   0x00000000U);
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, CALR,     0x00000000U);
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMASSR, 0x00000000U);
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Reset ISR register and exit initialization mode */
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ISR,      0x00000000U);
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Reset Tamper and alternate functions configuration register */
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, TAFCR, 0x00000000U);
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Wait till the RTC RSF flag is set */
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     status = LL_RTC_WaitForSynchro(RTCx);
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   return status;
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** }
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 5


 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief  Initializes the RTC registers according to the specified parameters
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         in RTC_InitStruct.
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTC_InitStruct pointer to a @ref LL_RTC_InitTypeDef structure that contains
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         the configuration information for the RTC peripheral.
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @note   The RTC Prescaler register is write protected and can be written in
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         initialization mode only.
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - SUCCESS: RTC registers are initialized
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - ERROR: RTC registers are not initialized
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** ErrorStatus LL_RTC_Init(RTC_TypeDef *RTCx, LL_RTC_InitTypeDef *RTC_InitStruct)
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** {
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Check the parameters */
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_HOURFORMAT(RTC_InitStruct->HourFormat));
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ASYNCH_PREDIV(RTC_InitStruct->AsynchPrescaler));
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_SYNCH_PREDIV(RTC_InitStruct->SynchPrescaler));
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Set Initialization mode */
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   if (LL_RTC_EnterInitMode(RTCx) != ERROR)
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Set Hour Format */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_SetHourFormat(RTCx, RTC_InitStruct->HourFormat);
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Configure Synchronous and Asynchronous prescaler factor */
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_SetSynchPrescaler(RTCx, RTC_InitStruct->SynchPrescaler);
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_SetAsynchPrescaler(RTCx, RTC_InitStruct->AsynchPrescaler);
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Exit Initialization mode */
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_DisableInitMode(RTCx);
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     status = SUCCESS;
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   return status;
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** }
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_InitTypeDef field to default value.
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTC_InitStruct pointer to a @ref LL_RTC_InitTypeDef structure which will be initialized
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @retval None
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** void LL_RTC_StructInit(LL_RTC_InitTypeDef *RTC_InitStruct)
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** {
  28              		.loc 1 254 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 6


  33              	.LVL0:
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Set RTC_InitStruct fields to default values */
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_InitStruct->HourFormat      = LL_RTC_HOURFORMAT_24HOUR;
  34              		.loc 1 256 0
  35 0000 0023     		movs	r3, #0
  36 0002 0360     		str	r3, [r0]
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_InitStruct->AsynchPrescaler = RTC_ASYNCH_PRESC_DEFAULT;
  37              		.loc 1 257 0
  38 0004 7F33     		adds	r3, r3, #127
  39 0006 4360     		str	r3, [r0, #4]
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_InitStruct->SynchPrescaler  = RTC_SYNCH_PRESC_DEFAULT;
  40              		.loc 1 258 0
  41 0008 8033     		adds	r3, r3, #128
  42 000a 8360     		str	r3, [r0, #8]
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** }
  43              		.loc 1 259 0
  44              		@ sp needed
  45 000c 7047     		bx	lr
  46              		.cfi_endproc
  47              	.LFE191:
  49 000e C046     		.section	.text.LL_RTC_TIME_StructInit,"ax",%progbits
  50              		.align	2
  51              		.global	LL_RTC_TIME_StructInit
  52              		.code	16
  53              		.thumb_func
  55              	LL_RTC_TIME_StructInit:
  56              	.LFB193:
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief  Set the RTC current time.
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTC_Format This parameter can be one of the following values:
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BIN
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BCD
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTC_TimeStruct pointer to a RTC_TimeTypeDef structure that contains
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *                        the time configuration information for the RTC.
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - SUCCESS: RTC Time register is configured
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - ERROR: RTC Time register is not configured
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** ErrorStatus LL_RTC_TIME_Init(RTC_TypeDef *RTCx, uint32_t RTC_Format, LL_RTC_TimeTypeDef *RTC_TimeSt
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** {
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Check the parameters */
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_FORMAT(RTC_Format));
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   if (RTC_Format == LL_RTC_FORMAT_BIN)
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(RTC_TimeStruct->Hours));
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_TimeStruct->TimeFormat));
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     else
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 7


 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       RTC_TimeStruct->TimeFormat = 0x00U;
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(RTC_TimeStruct->Hours));
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(RTC_TimeStruct->Minutes));
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(RTC_TimeStruct->Seconds));
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   else
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Hours)));
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_TimeStruct->TimeFormat));
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     else
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       RTC_TimeStruct->TimeFormat = 0x00U;
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Hours)));
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Minutes)));
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Seconds)));
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Set Initialization mode */
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   if (LL_RTC_EnterInitMode(RTCx) != ERROR)
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Check the input parameters format */
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (RTC_Format != LL_RTC_FORMAT_BIN)
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       LL_RTC_TIME_Config(RTCx, RTC_TimeStruct->TimeFormat, RTC_TimeStruct->Hours,
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                          RTC_TimeStruct->Minutes, RTC_TimeStruct->Seconds);
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     else
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       LL_RTC_TIME_Config(RTCx, RTC_TimeStruct->TimeFormat, __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct-
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct->Minutes),
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct->Seconds));
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Exit Initialization mode */
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_DisableInitMode(RTC);
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (LL_RTC_IsShadowRegBypassEnabled(RTCx) == 0U)
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       status = LL_RTC_WaitForSynchro(RTCx);
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     else
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       status = SUCCESS;
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 8


 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   return status;
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** }
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_TimeTypeDef field to default value (Time = 00h:00min:00sec).
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTC_TimeStruct pointer to a @ref LL_RTC_TimeTypeDef structure which will be initialized
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @retval None
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** void LL_RTC_TIME_StructInit(LL_RTC_TimeTypeDef *RTC_TimeStruct)
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** {
  57              		.loc 1 356 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62              	.LVL1:
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Time = 00h:00min:00sec */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_TimeStruct->TimeFormat = LL_RTC_TIME_FORMAT_AM_OR_24;
  63              		.loc 1 358 0
  64 0000 0023     		movs	r3, #0
  65 0002 0360     		str	r3, [r0]
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_TimeStruct->Hours      = 0U;
  66              		.loc 1 359 0
  67 0004 0371     		strb	r3, [r0, #4]
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_TimeStruct->Minutes    = 0U;
  68              		.loc 1 360 0
  69 0006 4371     		strb	r3, [r0, #5]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_TimeStruct->Seconds    = 0U;
  70              		.loc 1 361 0
  71 0008 8371     		strb	r3, [r0, #6]
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** }
  72              		.loc 1 362 0
  73              		@ sp needed
  74 000a 7047     		bx	lr
  75              		.cfi_endproc
  76              	.LFE193:
  78              		.section	.text.LL_RTC_DATE_StructInit,"ax",%progbits
  79              		.align	2
  80              		.global	LL_RTC_DATE_StructInit
  81              		.code	16
  82              		.thumb_func
  84              	LL_RTC_DATE_StructInit:
  85              	.LFB195:
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief  Set the RTC current date.
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTC_Format This parameter can be one of the following values:
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BIN
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BCD
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTC_DateStruct pointer to a RTC_DateTypeDef structure that contains
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *                         the date configuration information for the RTC.
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - SUCCESS: RTC Day register is configured
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - ERROR: RTC Day register is not configured
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** ErrorStatus LL_RTC_DATE_Init(RTC_TypeDef *RTCx, uint32_t RTC_Format, LL_RTC_DateTypeDef *RTC_DateSt
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 9


 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** {
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Check the parameters */
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_FORMAT(RTC_Format));
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   if ((RTC_Format == LL_RTC_FORMAT_BIN) && ((RTC_DateStruct->Month & 0x10U) == 0x10U))
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     RTC_DateStruct->Month = (RTC_DateStruct->Month & (uint32_t)~(0x10U)) + 0x0AU;
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   if (RTC_Format == LL_RTC_FORMAT_BIN)
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_YEAR(RTC_DateStruct->Year));
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MONTH(RTC_DateStruct->Month));
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_DAY(RTC_DateStruct->Day));
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   else
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_YEAR(__LL_RTC_CONVERT_BCD2BIN(RTC_DateStruct->Year)));
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MONTH(__LL_RTC_CONVERT_BCD2BIN(RTC_DateStruct->Month)));
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_DAY(__LL_RTC_CONVERT_BCD2BIN(RTC_DateStruct->Day)));
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_WEEKDAY(RTC_DateStruct->WeekDay));
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Set Initialization mode */
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   if (LL_RTC_EnterInitMode(RTCx) != ERROR)
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Check the input parameters format */
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (RTC_Format != LL_RTC_FORMAT_BIN)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       LL_RTC_DATE_Config(RTCx, RTC_DateStruct->WeekDay, RTC_DateStruct->Day, RTC_DateStruct->Month,
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     else
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       LL_RTC_DATE_Config(RTCx, RTC_DateStruct->WeekDay, __LL_RTC_CONVERT_BIN2BCD(RTC_DateStruct->Da
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_DateStruct->Month), __LL_RTC_CONVERT_BIN2BCD(
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Exit Initialization mode */
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_DisableInitMode(RTC);
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (LL_RTC_IsShadowRegBypassEnabled(RTCx) == 0U)
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       status = LL_RTC_WaitForSynchro(RTCx);
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     else
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       status = SUCCESS;
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 10


 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   return status;
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** }
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_DateTypeDef field to default value (date = Monday, January 01 xx00
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTC_DateStruct pointer to a @ref LL_RTC_DateTypeDef structure which will be initialized
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @retval None
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** void LL_RTC_DATE_StructInit(LL_RTC_DateTypeDef *RTC_DateStruct)
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** {
  86              		.loc 1 444 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.LVL2:
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Monday, January 01 xx00 */
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_DateStruct->WeekDay = LL_RTC_WEEKDAY_MONDAY;
  92              		.loc 1 446 0
  93 0000 0123     		movs	r3, #1
  94 0002 0370     		strb	r3, [r0]
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_DateStruct->Day     = 1U;
  95              		.loc 1 447 0
  96 0004 8370     		strb	r3, [r0, #2]
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_DateStruct->Month   = LL_RTC_MONTH_JANUARY;
  97              		.loc 1 448 0
  98 0006 4370     		strb	r3, [r0, #1]
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_DateStruct->Year    = 0U;
  99              		.loc 1 449 0
 100 0008 0023     		movs	r3, #0
 101 000a C370     		strb	r3, [r0, #3]
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** }
 102              		.loc 1 450 0
 103              		@ sp needed
 104 000c 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE195:
 108              		.global	__aeabi_uidiv
 109              		.global	__aeabi_uidivmod
 110 000e C046     		.section	.text.LL_RTC_ALMA_Init,"ax",%progbits
 111              		.align	2
 112              		.global	LL_RTC_ALMA_Init
 113              		.code	16
 114              		.thumb_func
 116              	LL_RTC_ALMA_Init:
 117              	.LFB196:
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief  Set the RTC Alarm A.
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         is disabled (Use @ref LL_RTC_ALMA_Disable function).
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTC_Format This parameter can be one of the following values:
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BIN
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BCD
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTC_AlarmStruct pointer to a @ref LL_RTC_AlarmTypeDef structure that
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 11


 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *                         contains the alarm configuration parameters.
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - SUCCESS: ALARMA registers are configured
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - ERROR: ALARMA registers are not configured
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** ErrorStatus LL_RTC_ALMA_Init(RTC_TypeDef *RTCx, uint32_t RTC_Format, LL_RTC_AlarmTypeDef *RTC_Alarm
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** {
 118              		.loc 1 467 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL3:
 123 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 124              	.LCFI0:
 125              		.cfi_def_cfa_offset 20
 126              		.cfi_offset 4, -20
 127              		.cfi_offset 5, -16
 128              		.cfi_offset 6, -12
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 5746     		mov	r7, r10
 132 0004 4E46     		mov	r6, r9
 133 0006 4546     		mov	r5, r8
 134 0008 E0B4     		push	{r5, r6, r7}
 135              	.LCFI1:
 136              		.cfi_def_cfa_offset 32
 137              		.cfi_offset 8, -32
 138              		.cfi_offset 9, -28
 139              		.cfi_offset 10, -24
 140 000a 0400     		movs	r4, r0
 141 000c 0E00     		movs	r6, r1
 142 000e 1500     		movs	r5, r2
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Check the parameters */
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_FORMAT(RTC_Format));
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ALMA_MASK(RTC_AlarmStruct->AlarmMask));
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ALMA_DATE_WEEKDAY_SEL(RTC_AlarmStruct->AlarmDateWeekDaySel));
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   if (RTC_Format == LL_RTC_FORMAT_BIN)
 143              		.loc 1 474 0
 144 0010 0029     		cmp	r1, #0
 145 0012 05D1     		bne	.L5
 146              	.LVL4:
 147              	.LBB96:
 148              	.LBB97:
 149              		.file 2 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @file    stm32f0xx_ll_rtc.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief   Header file of RTC LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * Redistribution and use in source and binary forms, with or without modification,
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 12


  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #ifndef __STM32F0xx_LL_RTC_H
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __STM32F0xx_LL_RTC_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #ifdef __cplusplus
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** extern "C" {
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #include "stm32f0xx.h"
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC)
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL RTC
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_Private_Constants RTC Private Constants
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Masks Definition */
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_INIT_MASK                 0xFFFFFFFFU
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_RSF_MASK                  0xFFFFFF5FU
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Write protection defines */
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_DISABLE  ((uint8_t)0xFFU)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 13


  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_ENABLE_1 ((uint8_t)0xCAU)
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_ENABLE_2 ((uint8_t)0x53U)
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Defines used to combine date & time */
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_OFFSET_WEEKDAY            24U
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_OFFSET_DAY                16U
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_OFFSET_MONTH              8U
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_OFFSET_HOUR               16U
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define RTC_OFFSET_MINUTE             8U
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Private macros ------------------------------------------------------------*/
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_Private_Macros RTC Private Macros
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /*USE_FULL_LL_DRIVER*/
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Exported types ------------------------------------------------------------*/
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_ES_INIT RTC Exported Init structure
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  RTC Init structures definition
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** typedef struct
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint32_t HourFormat;   /*!< Specifies the RTC Hours Format.
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               This parameter can be a value of @ref RTC_LL_EC_HOURFORMAT
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               @ref LL_RTC_SetHourFormat(). */
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint32_t AsynchPrescaler; /*!< Specifies the RTC Asynchronous Predivider value.
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               This parameter must be a number between Min_Data = 0x00 and Max_Data 
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               @ref LL_RTC_SetAsynchPrescaler(). */
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint32_t SynchPrescaler;  /*!< Specifies the RTC Synchronous Predivider value.
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               This parameter must be a number between Min_Data = 0x00 and Max_Data 
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                               @ref LL_RTC_SetSynchPrescaler(). */
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** } LL_RTC_InitTypeDef;
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  RTC Time structure definition
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 14


 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** typedef struct
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint32_t TimeFormat; /*!< Specifies the RTC AM/PM Time.
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This parameter can be a value of @ref RTC_LL_EC_TIME_FORMAT
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t Hours;       /*!< Specifies the RTC Time Hours.
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 12 
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 23 
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t Minutes;     /*!< Specifies the RTC Time Minutes.
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 59
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t Seconds;     /*!< Specifies the RTC Time Seconds.
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 59
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** } LL_RTC_TimeTypeDef;
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  RTC Date structure definition
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** typedef struct
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t WeekDay;  /*!< Specifies the RTC Date WeekDay.
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This parameter can be a value of @ref RTC_LL_EC_WEEKDAY
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t Month;    /*!< Specifies the RTC Date Month.
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This parameter can be a value of @ref RTC_LL_EC_MONTH
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t Day;      /*!< Specifies the RTC Date Day.
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This parameter must be a number between Min_Data = 1 and Max_Data = 31
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t Year;     /*!< Specifies the RTC Date Year.
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This parameter must be a number between Min_Data = 0 and Max_Data = 99
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** } LL_RTC_DateTypeDef;
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  RTC Alarm structure definition
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** typedef struct
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   LL_RTC_TimeTypeDef AlarmTime;  /*!< Specifies the RTC Alarm Time members. */
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 15


 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint32_t AlarmMask;            /*!< Specifies the RTC Alarm Masks.
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       This parameter can be a value of @ref RTC_LL_EC_ALMA_MASK
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                  */
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint32_t AlarmDateWeekDaySel;  /*!< Specifies the RTC Alarm is on day or WeekDay.
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       This parameter can be a value of @ref RTC_LL_EC_ALMA_WEEKDAY_
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                  */
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   uint8_t AlarmDateWeekDay;      /*!< Specifies the RTC Alarm Day/WeekDay.
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       If AlarmDateWeekDaySel set to day, this parameter  must be a 
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       If AlarmDateWeekDaySel set to Weekday, this parameter can be 
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                                  */
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** } LL_RTC_AlarmTypeDef;
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* USE_FULL_LL_DRIVER */
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Exported constants --------------------------------------------------------*/
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Constants RTC Exported Constants
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_FORMAT FORMAT
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_FORMAT_BIN                  0x000000000U /*!< Binary data format */
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_FORMAT_BCD                  0x000000001U /*!< BCD data format */
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_WEEKDAY_SELECTION RTC Alarm A Date WeekDay
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_DATEWEEKDAYSEL_DATE    0x00000000U             /*!< Alarm A Date is selected */
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_DATEWEEKDAYSEL_WEEKDAY RTC_ALRMAR_WDSEL        /*!< Alarm A WeekDay is selected
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* USE_FULL_LL_DRIVER */
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_GET_FLAG Get Flags Defines
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief    Flags defines which can be used with LL_RTC_ReadReg function
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 16


 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_RECALPF                 RTC_ISR_RECALPF
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP3F                  RTC_ISR_TAMP3F
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP2F                  RTC_ISR_TAMP2F
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP1F                  RTC_ISR_TAMP1F
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_TSOVF                   RTC_ISR_TSOVF
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_TSF                     RTC_ISR_TSF
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_WUTF                    RTC_ISR_WUTF
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_ALRAF                   RTC_ISR_ALRAF
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_INITF                   RTC_ISR_INITF
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_RSF                     RTC_ISR_RSF
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_INITS                   RTC_ISR_INITS
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_SHPF                    RTC_ISR_SHPF
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_WUTWF                   RTC_ISR_WUTWF
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ISR_ALRAWF                  RTC_ISR_ALRAWF
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_IT IT Defines
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief    IT defines which can be used with LL_RTC_ReadReg and  LL_RTC_WriteReg functions
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CR_TSIE                     RTC_CR_TSIE
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CR_WUTIE                    RTC_CR_WUTIE
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CR_ALRAIE                   RTC_CR_ALRAIE
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAFCR_TAMPIE               RTC_TAFCR_TAMPIE
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_WEEKDAY  WEEK DAY
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_MONDAY              ((uint8_t)0x01U) /*!< Monday    */
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_TUESDAY             ((uint8_t)0x02U) /*!< Tuesday   */
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_WEDNESDAY           ((uint8_t)0x03U) /*!< Wednesday */
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_THURSDAY            ((uint8_t)0x04U) /*!< Thrusday  */
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_FRIDAY              ((uint8_t)0x05U) /*!< Friday    */
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_SATURDAY            ((uint8_t)0x06U) /*!< Saturday  */
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_SUNDAY              ((uint8_t)0x07U) /*!< Sunday    */
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_MONTH  MONTH
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_JANUARY               ((uint8_t)0x01U)  /*!< January   */
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_FEBRUARY              ((uint8_t)0x02U)  /*!< February  */
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_MARCH                 ((uint8_t)0x03U)  /*!< March     */
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_APRIL                 ((uint8_t)0x04U)  /*!< April     */
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_MAY                   ((uint8_t)0x05U)  /*!< May       */
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_JUNE                  ((uint8_t)0x06U)  /*!< June      */
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_JULY                  ((uint8_t)0x07U)  /*!< July      */
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_AUGUST                ((uint8_t)0x08U)  /*!< August    */
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_SEPTEMBER             ((uint8_t)0x09U)  /*!< September */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 17


 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_OCTOBER               ((uint8_t)0x10U)  /*!< October   */
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_NOVEMBER              ((uint8_t)0x11U)  /*!< November  */
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_MONTH_DECEMBER              ((uint8_t)0x12U)  /*!< December  */
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_HOURFORMAT  HOUR FORMAT
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_HOURFORMAT_24HOUR           0x00000000U           /*!< 24 hour/day format */
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_HOURFORMAT_AMPM             RTC_CR_FMT            /*!< AM/PM hour format */
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALARMOUT  ALARM OUTPUT
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_DISABLE            0x00000000U             /*!< Output disabled */
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_ALMA               RTC_CR_OSEL_0           /*!< Alarm A output enabled */
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_ALMB               RTC_CR_OSEL_1           /*!< Alarm B output enabled */
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_WAKEUP             RTC_CR_OSEL             /*!< Wakeup output enabled */
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALARM_OUTPUTTYPE  ALARM OUTPUT TYPE
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN  0x00000000U                          /*!< RTC_ALARM, whe
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL   RTC_TAFCR_ALARMOUTTYPE /*!< RTC_ALARM, when mapped on PC
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_PIN PIN
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_PIN_PC13                    RTC_TAFCR_PC13MODE    /*!< PC13 is forced to push-pull o
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_PIN_PC14                    RTC_TAFCR_PC14MODE    /*!< PC14 is forced to push-pull o
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_PIN_PC15                    RTC_TAFCR_PC15MODE    /*!< PC15 is forced to push-pull o
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_OUTPUTPOLARITY_PIN  OUTPUT POLARITY PIN
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_OUTPUTPOLARITY_PIN_HIGH     0x00000000U           /*!< Pin is high when ALRAF/ALRBF/
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_OUTPUTPOLARITY_PIN_LOW      RTC_CR_POL            /*!< Pin is low when ALRAF/ALRBF/W
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TIME_FORMAT TIME FORMAT
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 18


 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TIME_FORMAT_AM_OR_24        0x00000000U           /*!< AM or 24-hour format */
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TIME_FORMAT_PM              RTC_TR_PM             /*!< PM */
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_SHIFT_SECOND  SHIFT SECOND
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_SHIFT_SECOND_DELAY          0x00000000U           /* Delay (seconds) = SUBFS / (PRED
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_SHIFT_SECOND_ADVANCE        RTC_SHIFTR_ADD1S      /* Advance (seconds) = (1 - (SUBFS
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_MASK  ALARMA MASK
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_NONE              0x00000000U             /*!< No masks applied on Alarm A
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_DATEWEEKDAY       RTC_ALRMAR_MSK4         /*!< Date/day do not care in Ala
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_HOURS             RTC_ALRMAR_MSK3         /*!< Hours do not care in Alarm 
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_MINUTES           RTC_ALRMAR_MSK2         /*!< Minutes do not care in Alar
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_SECONDS           RTC_ALRMAR_MSK1         /*!< Seconds do not care in Alar
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_ALL               (RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | R
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_TIME_FORMAT  ALARMA TIME FORMAT
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_TIME_FORMAT_AM         0x00000000U           /*!< AM or 24-hour format */
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ALMA_TIME_FORMAT_PM         RTC_ALRMAR_PM         /*!< PM */
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TIMESTAMP_EDGE  TIMESTAMP EDGE
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TIMESTAMP_EDGE_RISING       0x00000000U           /*!< RTC_TS input rising edge gene
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TIMESTAMP_EDGE_FALLING      RTC_CR_TSEDGE         /*!< RTC_TS input falling edge gen
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TS_TIME_FORMAT  TIMESTAMP TIME FORMAT
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TS_TIME_FORMAT_AM           0x00000000U           /*!< AM or 24-hour format */
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TS_TIME_FORMAT_PM           RTC_TSTR_PM           /*!< PM */
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER  TAMPER
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 19


 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_1                    RTC_TAFCR_TAMP1E /*!< RTC_TAMP1 input detection */
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_2                    RTC_TAFCR_TAMP2E /*!< RTC_TAMP2 input detection */
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_3                    RTC_TAFCR_TAMP3E /*!< RTC_TAMP3 input detection */
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_MASK  TAMPER MASK
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER1         RTC_TAFCR_TAMP1MF /*!< Tamper 1 event generates a trigge
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER2         RTC_TAFCR_TAMP2MF /*!< Tamper 2 event generates a trigge
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER3         RTC_TAFCR_TAMP3MF /*!< Tamper 3 event generates a trigge
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_NOERASE  TAMPER NO ERASE
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER1      RTC_TAFCR_TAMP1NOERASE /*!< Tamper 1 event does not eras
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER2      RTC_TAFCR_TAMP2NOERASE /*!< Tamper 2 event does not eras
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER3      RTC_TAFCR_TAMP3NOERASE /*!< Tamper 3 event does not eras
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPPRCH)
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_DURATION  TAMPER DURATION
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_1RTCCLK     0x00000000U                             /*!< Tamper pins
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_2RTCCLK     RTC_TAFCR_TAMPPRCH_0  /*!< Tamper pins are pre-charged b
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_4RTCCLK     RTC_TAFCR_TAMPPRCH_1  /*!< Tamper pins are pre-charged b
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_8RTCCLK     RTC_TAFCR_TAMPPRCH    /*!< Tamper pins are pre-charged b
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 20


 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPPRCH */
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPFLT)
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_FILTER  TAMPER FILTER
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_DISABLE       0x00000000U                              /*!< Tamper fil
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_2SAMPLE       RTC_TAFCR_TAMPFLT_0    /*!< Tamper is activated after 2 
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_4SAMPLE       RTC_TAFCR_TAMPFLT_1    /*!< Tamper is activated after 4 
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_8SAMPLE       RTC_TAFCR_TAMPFLT      /*!< Tamper is activated after 8 
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPFLT */
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPFREQ)
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_SAMPLFREQDIV  TAMPER SAMPLING FREQUENCY DIVIDER
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_32768   0x00000000U                                             
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_16384   RTC_TAFCR_TAMPFREQ_0                           /*!< Each
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_8192    RTC_TAFCR_TAMPFREQ_1                           /*!< Each
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_4096    (RTC_TAFCR_TAMPFREQ_1 | RTC_TAFCR_TAMPFREQ_0) /*!< Each 
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_2048    RTC_TAFCR_TAMPFREQ_2                           /*!< Each
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_1024    (RTC_TAFCR_TAMPFREQ_2 | RTC_TAFCR_TAMPFREQ_0) /*!< Each 
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_512     (RTC_TAFCR_TAMPFREQ_2 | RTC_TAFCR_TAMPFREQ_1) /*!< Each 
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_256     RTC_TAFCR_TAMPFREQ                             /*!< Each
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPFREQ */
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_ACTIVELEVEL  TAMPER ACTIVE LEVEL
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP1    RTC_TAFCR_TAMP1TRG /*!< RTC_TAMP1 input falling edge (if
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP2    RTC_TAFCR_TAMP2TRG /*!< RTC_TAMP2 input falling edge (if
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP3    RTC_TAFCR_TAMP3TRG /*!< RTC_TAMP3 input falling edge (if
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_WAKEUPCLOCK_DIV  WAKEUP CLOCK DIV
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_16          0x00000000U                           /*!< RTC/16 clock 
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_8           (RTC_CR_WUCKSEL_0)                    /*!< RTC/8 clock i
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_4           (RTC_CR_WUCKSEL_1)                    /*!< RTC/4 clock i
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_2           (RTC_CR_WUCKSEL_1 | RTC_CR_WUCKSEL_0) /*!< RTC/2 clock i
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_CKSPRE          (RTC_CR_WUCKSEL_2)                    /*!< ck_spre (usua
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 21


 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_CKSPRE_WUT      (RTC_CR_WUCKSEL_2 | RTC_CR_WUCKSEL_1) /*!< ck_spre (usua
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_BACKUP_SUPPORT)
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_BKP  BACKUP
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_BKP_DR0                     0x00000000U
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_BKP_DR1                     0x00000001U
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_BKP_DR2                     0x00000002U
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_BKP_DR3                     0x00000003U
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_BKP_DR4                     0x00000004U
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_BACKUP_SUPPORT */
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_OUTPUT  Calibration output
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_NONE           0x00000000U                 /*!< Calibration output disa
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_1HZ            (RTC_CR_COE | RTC_CR_COSEL) /*!< Calibration output is 1
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_512HZ          (RTC_CR_COE)                /*!< Calibration output is 5
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_INSERTPULSE  Calibration pulse insertion 
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_INSERTPULSE_NONE      0x00000000U           /*!< No RTCCLK pulses are added */
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_INSERTPULSE_SET       RTC_CALR_CALP         /*!< One RTCCLK pulse is effective
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_PERIOD  Calibration period
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_32SEC          0x00000000U           /*!< Use a 32-second calibration c
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_16SEC          RTC_CALR_CALW16       /*!< Use a 16-second calibration c
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_8SEC           RTC_CALR_CALW8        /*!< Use a 8-second calibration cy
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Exported macro ------------------------------------------------------------*/
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Macros RTC Exported Macros
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 22


 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_WRITE_READ Common Write and read registers Macros
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Write a value in RTC register
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __INSTANCE__ RTC Instance
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __REG__ Register to be written
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __VALUE__ Value to be written in the register
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Read a value in RTC register
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __INSTANCE__ RTC Instance
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __REG__ Register to be read
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Register value
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define LL_RTC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Convert Convert helper Macros
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to convert a value from 2 digit decimal format to BCD format
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __VALUE__ Byte to be converted
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Converted byte
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_CONVERT_BIN2BCD(__VALUE__) (uint8_t)((((__VALUE__) / 10U) << 4U) | ((__VALUE__) % 
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to convert a value from BCD format to 2 digit decimal format
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __VALUE__ BCD value to be converted
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Converted byte
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_CONVERT_BCD2BIN(__VALUE__) (uint8_t)(((uint8_t)((__VALUE__) & (uint8_t)0xF0U) >> (
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Date Date helper Macros
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve weekday.
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Date returned by @ref  LL_RTC_DATE_Get function.
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 23


 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_WEEKDAY(__RTC_DATE__) (((__RTC_DATE__) >> RTC_OFFSET_WEEKDAY) & 0x000000FFU)
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Year in BCD format
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Year in BCD format (0x00 . . . 0x99)
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_YEAR(__RTC_DATE__) ((__RTC_DATE__) & 0x000000FFU)
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Month in BCD format
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_MONTH(__RTC_DATE__) (((__RTC_DATE__) >>RTC_OFFSET_MONTH) & 0x000000FFU)
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Day in BCD format
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Day in BCD format (0x01 . . . 0x31)
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_DAY(__RTC_DATE__) (((__RTC_DATE__) >>RTC_OFFSET_DAY) & 0x000000FFU)
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Time Time helper Macros
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve hour in BCD format
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Hours in BCD format (0x01. . .0x12 or between Min_Data=0x00 and Max_Data=0x23)
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_HOUR(__RTC_TIME__) (((__RTC_TIME__) >> RTC_OFFSET_HOUR) & 0x000000FFU)
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve minute in BCD format
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 24


 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Minutes in BCD format (0x00. . .0x59)
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_MINUTE(__RTC_TIME__) (((__RTC_TIME__) >> RTC_OFFSET_MINUTE) & 0x000000FFU)
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Helper macro to retrieve second in BCD format
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Seconds in  format (0x00. . .0x59)
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #define __LL_RTC_GET_SECOND(__RTC_TIME__) ((__RTC_TIME__) & 0x000000FFU)
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /* Exported functions --------------------------------------------------------*/
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Functions RTC Exported Functions
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Configuration Configuration
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Hours format (24 hour/day or AM/PM hour format)
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           FMT           LL_RTC_SetHourFormat
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  HourFormat This parameter can be one of the following values:
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_24HOUR
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_AMPM
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetHourFormat(RTC_TypeDef *RTCx, uint32_t HourFormat)
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_FMT, HourFormat);
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Hours format (24 hour/day or AM/PM hour format)
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           FMT           LL_RTC_GetHourFormat
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_24HOUR
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_AMPM
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetHourFormat(RTC_TypeDef *RTCx)
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_FMT));
 150              		.loc 2 751 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 25


 151 0014 8368     		ldr	r3, [r0, #8]
 152              	.LVL5:
 153              	.LBE97:
 154              	.LBE96:
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 155              		.loc 1 476 0
 156 0016 5B06     		lsls	r3, r3, #25
 157 0018 07D4     		bmi	.L7
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(RTC_AlarmStruct->AlarmTime.Hours));
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_AlarmStruct->AlarmTime.TimeFormat));
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     else
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       RTC_AlarmStruct->AlarmTime.TimeFormat = 0x00U;
 158              		.loc 1 483 0
 159 001a 0023     		movs	r3, #0
 160 001c 1360     		str	r3, [r2]
 161 001e 04E0     		b	.L7
 162              	.L5:
 163              	.LVL6:
 164              	.LBB98:
 165              	.LBB99:
 166              		.loc 2 751 0
 167 0020 8368     		ldr	r3, [r0, #8]
 168              	.LVL7:
 169              	.LBE99:
 170              	.LBE98:
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(RTC_AlarmStruct->AlarmTime.Hours));
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(RTC_AlarmStruct->AlarmTime.Minutes));
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(RTC_AlarmStruct->AlarmTime.Seconds));
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMA_DATEWEEKDAYSEL_DATE)
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_DAY(RTC_AlarmStruct->AlarmDateWeekDay));
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     else
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_WEEKDAY(RTC_AlarmStruct->AlarmDateWeekDay));
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   else
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 171              		.loc 1 500 0
 172 0022 5B06     		lsls	r3, r3, #25
 173 0024 01D4     		bmi	.L7
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_AlarmStruct->AlarmTime.TimeFormat));
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     else
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       RTC_AlarmStruct->AlarmTime.TimeFormat = 0x00U;
 174              		.loc 1 507 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 26


 175 0026 0023     		movs	r3, #0
 176 0028 1360     		str	r3, [r2]
 177              	.L7:
 178              	.LVL8:
 179              	.LBB100:
 180              	.LBB101:
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Select the flag to be routed to RTC_ALARM output
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           OSEL          LL_RTC_SetAlarmOutEvent
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  AlarmOutput This parameter can be one of the following values:
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_DISABLE
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMA
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMB
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_WAKEUP
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutEvent(RTC_TypeDef *RTCx, uint32_t AlarmOutput)
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_OSEL, AlarmOutput);
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get the flag to be routed to RTC_ALARM output
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           OSEL          LL_RTC_GetAlarmOutEvent
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_DISABLE
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMA
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMB
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_WAKEUP
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutEvent(RTC_TypeDef *RTCx)
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_OSEL));
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set RTC_ALARM output type (ALARM in push-pull or open-drain output)
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Used only when RTC_ALARM is mapped on PC13
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   If all RTC alternate functions are disabled and PC13MODE = 1, PC13VALUE configures the
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         PC13 output data
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        ALARMOUTTYPE  LL_RTC_SetAlarmOutputType
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Output This parameter can be one of the following values:
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutputType(RTC_TypeDef *RTCx, uint32_t Output)
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAFCR, RTC_TAFCR_ALARMOUTTYPE, Output);
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 27


 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get RTC_ALARM output type (ALARM in push-pull or open-drain output)
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   used only when RTC_ALARM is mapped on PC13
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   If all RTC alternate functions are disabled and PC13MODE = 1, PC13VALUE configures the
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         PC13 output data
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        ALARMOUTTYPE  LL_RTC_GetAlarmOutputType
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutputType(RTC_TypeDef *RTCx)
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAFCR, RTC_TAFCR_ALARMOUTTYPE));
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable push-pull output on PC13, PC14 and/or PC15
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   PC13 forced to push-pull output if all RTC alternate functions are disabled
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   PC14 and PC15 forced to push-pull output if LSE is disabled
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        PC13MODE  LL_RTC_EnablePushPullMode\n
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        PC14MODE  LL_RTC_EnablePushPullMode\n
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        PC15MODE  LL_RTC_EnablePushPullMode
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  PinMask This parameter can be a combination of the following values:
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC13
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC14
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC15
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnablePushPullMode(RTC_TypeDef *RTCx, uint32_t PinMask)
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, PinMask);
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable push-pull output on PC13, PC14 and/or PC15
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   PC13, PC14 and/or PC15 are controlled by the GPIO configuration registers.
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         Consequently PC13, PC14 and/or PC15 are floating in Standby mode.
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        PC13MODE      LL_RTC_DisablePushPullMode\n
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR        PC14MODE      LL_RTC_DisablePushPullMode\n
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR        PC15MODE      LL_RTC_DisablePushPullMode
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  PinMask This parameter can be a combination of the following values:
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC13
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC14
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC15
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisablePushPullMode(RTC_TypeDef* RTCx, uint32_t PinMask)
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, PinMask);
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set PC14 and/or PC15 to high level.
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Output data configuration is possible if the LSE is disabled and PushPull output is ena
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 28


 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        PC14VALUE     LL_RTC_SetOutputPin\n
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR        PC15VALUE     LL_RTC_SetOutputPin
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  PinMask This parameter can be a combination of the following values:
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC14
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC15
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetOutputPin(RTC_TypeDef* RTCx, uint32_t PinMask)
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, (PinMask >> 1));
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set PC14 and/or PC15 to low level.
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Output data configuration is possible if the LSE is disabled and PushPull output is ena
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR        PC14VALUE     LL_RTC_ResetOutputPin\n
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR        PC15VALUE     LL_RTC_ResetOutputPin
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  PinMask This parameter can be a combination of the following values:
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC14
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC15
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ResetOutputPin(RTC_TypeDef* RTCx, uint32_t PinMask)
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, (PinMask >> 1));
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable initialization mode
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Initialization mode is used to program time and date register (RTC_TR and RTC_DR)
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         and prescaler register (RTC_PRER).
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         Counters are stopped and start counting from the new value when INIT is reset.
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          INIT          LL_RTC_EnableInitMode
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableInitMode(RTC_TypeDef *RTCx)
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   /* Set the Initialization mode */
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, RTC_INIT_MASK);
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable initialization mode (Free running mode)
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          INIT          LL_RTC_DisableInitMode
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableInitMode(RTC_TypeDef *RTCx)
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   /* Exit Initialization mode */
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (uint32_t)~RTC_ISR_INIT);
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 29


 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Output polarity (pin is low when ALRAF/ALRBF/WUTF is asserted)
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           POL           LL_RTC_SetOutputPolarity
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Polarity This parameter can be one of the following values:
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_HIGH
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_LOW
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetOutputPolarity(RTC_TypeDef *RTCx, uint32_t Polarity)
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_POL, Polarity);
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Output polarity
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           POL           LL_RTC_GetOutputPolarity
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_HIGH
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_LOW
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetOutputPolarity(RTC_TypeDef *RTCx)
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_POL));
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable Bypass the shadow registers
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_EnableShadowRegBypass
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableShadowRegBypass(RTC_TypeDef *RTCx)
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_BYPSHAD);
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable Bypass the shadow registers
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_DisableShadowRegBypass
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableShadowRegBypass(RTC_TypeDef *RTCx)
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_BYPSHAD);
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Check if Shadow registers bypass is enabled or not.
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_IsShadowRegBypassEnabled
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsShadowRegBypassEnabled(RTC_TypeDef *RTCx)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 30


 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_BYPSHAD) == (RTC_CR_BYPSHAD));
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable RTC_REFIN reference clock detection (50 or 60 Hz)
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           REFCKON       LL_RTC_EnableRefClock
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableRefClock(RTC_TypeDef *RTCx)
 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_REFCKON);
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable RTC_REFIN reference clock detection (50 or 60 Hz)
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           REFCKON       LL_RTC_DisableRefClock
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableRefClock(RTC_TypeDef *RTCx)
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_REFCKON);
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Asynchronous prescaler factor
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_A      LL_RTC_SetAsynchPrescaler
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  AsynchPrescaler Value between Min_Data = 0 and Max_Data = 0x7F
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAsynchPrescaler(RTC_TypeDef *RTCx, uint32_t AsynchPrescaler)
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->PRER, RTC_PRER_PREDIV_A, AsynchPrescaler << RTC_PRER_PREDIV_A_Pos);
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Synchronous prescaler factor
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_S      LL_RTC_SetSynchPrescaler
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  SynchPrescaler Value between Min_Data = 0 and Max_Data = 0x7FFF
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetSynchPrescaler(RTC_TypeDef *RTCx, uint32_t SynchPrescaler)
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->PRER, RTC_PRER_PREDIV_S, SynchPrescaler);
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Asynchronous prescaler factor
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_A      LL_RTC_GetAsynchPrescaler
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 31


1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data = 0 and Max_Data = 0x7F
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAsynchPrescaler(RTC_TypeDef *RTCx)
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->PRER, RTC_PRER_PREDIV_A) >> RTC_PRER_PREDIV_A_Pos);
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Synchronous prescaler factor
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_S      LL_RTC_GetSynchPrescaler
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data = 0 and Max_Data = 0x7FFF
1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetSynchPrescaler(RTC_TypeDef *RTCx)
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->PRER, RTC_PRER_PREDIV_S));
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable the write protection for RTC registers.
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll WPR          KEY           LL_RTC_EnableWriteProtection
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableWriteProtection(RTC_TypeDef *RTCx)
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_DISABLE);
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable the write protection for RTC registers.
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll WPR          KEY           LL_RTC_DisableWriteProtection
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableWriteProtection(RTC_TypeDef *RTCx)
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_1);
 181              		.loc 2 1069 0
 182 002a CA23     		movs	r3, #202
 183 002c 6362     		str	r3, [r4, #36]
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 184              		.loc 2 1070 0
 185 002e 773B     		subs	r3, r3, #119
 186 0030 6362     		str	r3, [r4, #36]
 187              	.LVL9:
 188              	.LBE101:
 189              	.LBE100:
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Minutes)));
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Seconds)));
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMA_DATEWEEKDAYSEL_DATE)
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 32


 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_DAY(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmDateWeekDay)));
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     else
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_WEEKDAY(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmDateWeekDay)));
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Select weekday selection */
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMA_DATEWEEKDAYSEL_DATE)
 190              		.loc 1 528 0
 191 0032 EB68     		ldr	r3, [r5, #12]
 192 0034 002B     		cmp	r3, #0
 193 0036 21D1     		bne	.L9
 194              	.LVL10:
 195              	.LBB102:
 196              	.LBB103:
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Time Time
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set time format (AM/24-hour or PM notation)
1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TR           PM            LL_RTC_TIME_SetFormat
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, RTC_TR_PM, TimeFormat);
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get time format (AM or PM notation)
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       before reading this bit
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TR           PM            LL_RTC_TIME_GetFormat
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 33


1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetFormat(RTC_TypeDef *RTCx)
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TR, RTC_TR_PM));
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Hours in BCD format
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert hour from binary to BCD for
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TR           HT            LL_RTC_TIME_SetHour\n
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_SetHour
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_HT | RTC_TR_HU),
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos)));
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Hours in BCD format
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       before reading this bit
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert hour from BCD to
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       Binary format
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TR           HT            LL_RTC_TIME_GetHour\n
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_GetHour
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetHour(RTC_TypeDef *RTCx)
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->TR, (RTC_TR_HT | RTC_TR_HU));
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_TR_HT) >> RTC_TR_HT_Pos) << 4U) | ((temp & RTC_TR_HU) >> RTC_TR_H
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Minutes in BCD format
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TR           MNT           LL_RTC_TIME_SetMinute\n
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_SetMinute
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 34


1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_MNT | RTC_TR_MNU),
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos))
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Minutes in BCD format
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       before reading this bit
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert minute from BCD
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       to Binary format
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TR           MNT           LL_RTC_TIME_GetMinute\n
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_GetMinute
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetMinute(RTC_TypeDef *RTCx)
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->TR, (RTC_TR_MNT | RTC_TR_MNU));
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_TR_MNT) >> RTC_TR_MNT_Pos) << 4U) | ((temp & RTC_TR_MNU) >> RTC_T
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Seconds in BCD format
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TR           ST            LL_RTC_TIME_SetSecond\n
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_SetSecond
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_ST | RTC_TR_SU),
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_TR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_TR_SU_Pos)));
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Seconds in BCD format
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       before reading this bit
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       to Binary format
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TR           ST            LL_RTC_TIME_GetSecond\n
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_GetSecond
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetSecond(RTC_TypeDef *RTCx)
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 35


1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->TR, (RTC_TR_ST | RTC_TR_SU));
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_TR_ST) >> RTC_TR_ST_Pos) << 4U) | ((temp & RTC_TR_SU) >> RTC_TR_S
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set time (hour, minute and second) in BCD format
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note TimeFormat and Hours should follow the same format
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TR           PM            LL_RTC_TIME_Config\n
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           HT            LL_RTC_TIME_Config\n
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_Config\n
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           MNT           LL_RTC_TIME_Config\n
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_Config\n
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           ST            LL_RTC_TIME_Config\n
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_Config
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_Config(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours, ui
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = Format12_24                                                                               
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos))     | \
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos)) | \
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_TR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_TR_SU_Pos));
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_PM | RTC_TR_HT | RTC_TR_HU | RTC_TR_MNT | RTC_TR_MNU | RTC_TR_ST | R
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get time (hour, minute and second) in BCD format
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       before reading this bit
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       are available to get independently each parameter.
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TR           HT            LL_RTC_TIME_Get\n
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_Get\n
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           MNT           LL_RTC_TIME_Get\n
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_Get\n
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           ST            LL_RTC_TIME_Get\n
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_Get
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds (Format: 0x00HHMMSS).
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_Get(RTC_TypeDef *RTCx)
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 36


1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->TR, (RTC_TR_HT | RTC_TR_HU | RTC_TR_MNT | RTC_TR_MNU | RTC_TR_ST | RTC_TR_S
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((((((temp & RTC_TR_HT) >> RTC_TR_HT_Pos) << 4U) | ((temp & RTC_TR_HU) >> RTC_TR
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                     (((((temp & RTC_TR_MNT) >> RTC_TR_MNT_Pos) << 4U) | ((temp & RTC_TR_MNU) >> RTC
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                     ((((temp & RTC_TR_ST) >> RTC_TR_ST_Pos) << 4U) | ((temp & RTC_TR_SU) >> RTC_TR_
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Memorize whether the daylight saving time change has been performed
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           BKP           LL_RTC_TIME_EnableDayLightStore
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_EnableDayLightStore(RTC_TypeDef *RTCx)
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_BKP);
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable memorization whether the daylight saving time change has been performed.
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           BKP           LL_RTC_TIME_DisableDayLightStore
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_DisableDayLightStore(RTC_TypeDef *RTCx)
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_BKP);
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Check if RTC Day Light Saving stored operation has been enabled or not
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           BKP           LL_RTC_TIME_IsDayLightStoreEnabled
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_IsDayLightStoreEnabled(RTC_TypeDef *RTCx)
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_BKP) == (RTC_CR_BKP));
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Subtract 1 hour (winter time change)
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           SUB1H         LL_RTC_TIME_DecHour
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_DecHour(RTC_TypeDef *RTCx)
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_SUB1H);
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Add 1 hour (summer time change)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 37


1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           ADD1H         LL_RTC_TIME_IncHour
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_IncHour(RTC_TypeDef *RTCx)
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ADD1H);
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Sub second value in the synchronous prescaler counter.
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note  You can use both SubSeconds value and SecondFraction (PREDIV_S through
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *        LL_RTC_GetSynchPrescaler function) terms returned to convert Calendar
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *        SubSeconds value in second fraction ratio with time unit following
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *        generic formula:
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *          ==> Seconds fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *        This conversion can be performed only if no shift operation is pending
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *        (ie. SHFP=0) when PREDIV_S >= SS.
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll SSR          SS            LL_RTC_TIME_GetSubSecond
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Sub second value (number between 0 and 65535)
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetSubSecond(RTC_TypeDef *RTCx)
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->SSR, RTC_SSR_SS));
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Synchronize to a remote clock with a high degree of precision.
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   This operation effectively subtracts from (delays) or advance the clock of a fraction o
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   When REFCKON is set, firmware must not write to Shift control register.
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll SHIFTR       ADD1S         LL_RTC_TIME_Synchronize\n
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         SHIFTR       SUBFS         LL_RTC_TIME_Synchronize
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  ShiftSecond This parameter can be one of the following values:
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_SHIFT_SECOND_DELAY
1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_SHIFT_SECOND_ADVANCE
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Fraction Number of Seconds Fractions (any value from 0 to 0x7FFF)
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_Synchronize(RTC_TypeDef *RTCx, uint32_t ShiftSecond, uint32_t Frac
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->SHIFTR, ShiftSecond | Fraction);
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Date Date
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Year in BCD format
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 38


1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Year from binary to BCD for
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll DR           YT            LL_RTC_DATE_SetYear\n
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_SetYear
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Year Value between Min_Data=0x00 and Max_Data=0x99
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetYear(RTC_TypeDef *RTCx, uint32_t Year)
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_YT | RTC_DR_YU),
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****              (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos)));
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Year in BCD format
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       before reading this bit
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Year from BCD to Binary for
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll DR           YT            LL_RTC_DATE_GetYear\n
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_GetYear
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x99
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetYear(RTC_TypeDef *RTCx)
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->DR, (RTC_DR_YT | RTC_DR_YU));
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_DR_YT) >> RTC_DR_YT_Pos) << 4U) | ((temp & RTC_DR_YU) >> RTC_DR_Y
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Week day
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_SetWeekDay
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, RTC_DR_WDU, WeekDay << RTC_DR_WDU_Pos);
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Week day
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       before reading this bit
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_GetWeekDay
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 39


1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetWeekDay(RTC_TypeDef *RTCx)
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->DR, RTC_DR_WDU) >> RTC_DR_WDU_Pos);
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Month in BCD format
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Month from binary to BCD fo
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll DR           MT            LL_RTC_DATE_SetMonth\n
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_SetMonth
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Month This parameter can be one of the following values:
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetMonth(RTC_TypeDef *RTCx, uint32_t Month)
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_MT | RTC_DR_MU),
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****              (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)));
1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Month in BCD format
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       before reading this bit
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Month from BCD to Binary fo
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll DR           MT            LL_RTC_DATE_GetMonth\n
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_GetMonth
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 40


1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetMonth(RTC_TypeDef *RTCx)
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->DR, (RTC_DR_MT | RTC_DR_MU));
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_DR_MT) >> RTC_DR_MT_Pos) << 4U) | ((temp & RTC_DR_MU) >> RTC_DR_M
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Day in BCD format
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll DR           DT            LL_RTC_DATE_SetDay\n
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_SetDay
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_DT | RTC_DR_DU),
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_DR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_DR_DU_Pos)));
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Day in BCD format
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       before reading this bit
1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll DR           DT            LL_RTC_DATE_GetDay\n
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_GetDay
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetDay(RTC_TypeDef *RTCx)
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->DR, (RTC_DR_DT | RTC_DR_DU));
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_DR_DT) >> RTC_DR_DT_Pos) << 4U) | ((temp & RTC_DR_DU) >> RTC_DR_D
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set date (WeekDay, Day, Month and Year) in BCD format
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_Config\n
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           MT            LL_RTC_DATE_Config\n
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_Config\n
1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           DT            LL_RTC_DATE_Config\n
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_Config\n
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           YT            LL_RTC_DATE_Config\n
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_Config
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 41


1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Month This parameter can be one of the following values:
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Year Value between Min_Data=0x00 and Max_Data=0x99
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_Config(RTC_TypeDef *RTCx, uint32_t WeekDay, uint32_t Day, uint32_t
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = (WeekDay << RTC_DR_WDU_Pos)                                                        | \
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) | \
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Day & 0xF0U) << (RTC_DR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_DR_DU_Pos));
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_WDU | RTC_DR_MT | RTC_DR_MU | RTC_DR_DT | RTC_DR_DU | RTC_DR_YT | RT
1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get date (WeekDay, Day, Month and Year) in BCD format
1602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       before reading this bit
1604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_WEEKDAY, __LL_RTC_GET_YEAR, __LL_RTC_GET_MONTH,
1605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * and __LL_RTC_GET_DAY are available to get independently each parameter.
1606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_Get\n
1607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           MT            LL_RTC_DATE_Get\n
1608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_Get\n
1609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           DT            LL_RTC_DATE_Get\n
1610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_Get\n
1611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           YT            LL_RTC_DATE_Get\n
1612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_Get
1613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Combination of WeekDay, Day, Month and Year (Format: 0xWWDDMMYY).
1615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_Get(RTC_TypeDef *RTCx)
1617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   
1620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->DR, (RTC_DR_WDU | RTC_DR_MT | RTC_DR_MU | RTC_DR_DT | RTC_DR_DU | RTC_DR_YT
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 42


1621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_DR_WDU) >> RTC_DR_WDU_Pos) << RTC_OFFSET_WEEKDAY) | \
1622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                     (((((temp & RTC_DR_DT) >> RTC_DR_DT_Pos) << 4U) | ((temp & RTC_DR_DU) >> RTC_DR
1623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                     (((((temp & RTC_DR_MT) >> RTC_DR_MT_Pos) << 4U) | ((temp & RTC_DR_MU) >> RTC_DR
1624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                     ((((temp & RTC_DR_YT) >> RTC_DR_YT_Pos) << 4U) | ((temp & RTC_DR_YU) >> RTC_DR_
1625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
1629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_ALARMA ALARMA
1632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
1633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable Alarm A
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           ALRAE         LL_RTC_ALMA_Enable
1639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_Enable(RTC_TypeDef *RTCx)
1643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ALRAE);
1645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable Alarm A
1649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           ALRAE         LL_RTC_ALMA_Disable
1651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_Disable(RTC_TypeDef *RTCx)
1655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_ALRAE);
1657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Specify the Alarm A masks.
1661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       MSK4          LL_RTC_ALMA_SetMask\n
1662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       MSK3          LL_RTC_ALMA_SetMask\n
1663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       MSK2          LL_RTC_ALMA_SetMask\n
1664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       MSK1          LL_RTC_ALMA_SetMask
1665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
1667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_NONE
1668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_DATEWEEKDAY
1669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_HOURS
1670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_MINUTES
1671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_SECONDS
1672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_ALL
1673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetMask(RTC_TypeDef *RTCx, uint32_t Mask)
1676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | RTC_ALRMAR_MSK1, M
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 43


1678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get the Alarm A masks.
1682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       MSK4          LL_RTC_ALMA_GetMask\n
1683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       MSK3          LL_RTC_ALMA_GetMask\n
1684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       MSK2          LL_RTC_ALMA_GetMask\n
1685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       MSK1          LL_RTC_ALMA_GetMask
1686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be can be a combination of the following values:
1688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_NONE
1689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_DATEWEEKDAY
1690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_HOURS
1691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_MINUTES
1692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_SECONDS
1693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_ALL
1694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetMask(RTC_TypeDef *RTCx)
1696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | RT
1698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable AlarmA Week day selection (DU[3:0] represents the week day. DT[1:0] is do not ca
1702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       WDSEL         LL_RTC_ALMA_EnableWeekday
1703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_EnableWeekday(RTC_TypeDef *RTCx)
1707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->ALRMAR, RTC_ALRMAR_WDSEL);
1709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable AlarmA Week day selection (DU[3:0] represents the date )
1713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       WDSEL         LL_RTC_ALMA_DisableWeekday
1714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_DisableWeekday(RTC_TypeDef *RTCx)
1718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->ALRMAR, RTC_ALRMAR_WDSEL);
 197              		.loc 2 1719 0
 198 0038 E269     		ldr	r2, [r4, #28]
 199              	.LVL11:
 200 003a 404B     		ldr	r3, .L14
 201 003c 1340     		ands	r3, r2
 202 003e E361     		str	r3, [r4, #28]
 203              	.LVL12:
 204              	.LBE103:
 205              	.LBE102:
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Set the date for ALARM */
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_ALMA_DisableWeekday(RTCx);
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (RTC_Format != LL_RTC_FORMAT_BIN)
 206              		.loc 1 532 0
 207 0040 002E     		cmp	r6, #0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 44


 208 0042 07D0     		beq	.L10
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       LL_RTC_ALMA_SetDay(RTCx, RTC_AlarmStruct->AlarmDateWeekDay);
 209              		.loc 1 534 0
 210 0044 2A7C     		ldrb	r2, [r5, #16]
 211              	.LVL13:
 212              	.LBB104:
 213              	.LBB105:
1720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set ALARM A Day in BCD format
1724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
1725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       DT            LL_RTC_ALMA_SetDay\n
1726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       DU            LL_RTC_ALMA_SetDay
1727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
1732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_DT | RTC_ALRMAR_DU),
 214              		.loc 2 1733 0
 215 0046 E169     		ldr	r1, [r4, #28]
 216              	.LVL14:
 217 0048 3D4B     		ldr	r3, .L14+4
 218 004a 0B40     		ands	r3, r1
 219 004c 1206     		lsls	r2, r2, #24
 220              	.LVL15:
 221 004e 1343     		orrs	r3, r2
 222 0050 E361     		str	r3, [r4, #28]
 223              	.LVL16:
 224 0052 1FE0     		b	.L11
 225              	.LVL17:
 226              	.L10:
 227              	.LBE105:
 228              	.LBE104:
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     else
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       LL_RTC_ALMA_SetDay(RTCx, __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmDateWeekDay));
 229              		.loc 1 538 0
 230 0054 2F7C     		ldrb	r7, [r5, #16]
 231 0056 0A21     		movs	r1, #10
 232              	.LVL18:
 233 0058 3800     		movs	r0, r7
 234              	.LVL19:
 235 005a FFF7FEFF 		bl	__aeabi_uidiv
 236              	.LVL20:
 237 005e 0301     		lsls	r3, r0, #4
 238 0060 9846     		mov	r8, r3
 239 0062 0A21     		movs	r1, #10
 240 0064 3800     		movs	r0, r7
 241 0066 FFF7FEFF 		bl	__aeabi_uidivmod
 242              	.LVL21:
 243 006a 4346     		mov	r3, r8
 244 006c 1943     		orrs	r1, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 45


 245              	.LVL22:
 246              	.LBB106:
 247              	.LBB107:
 248              		.loc 2 1733 0
 249 006e E069     		ldr	r0, [r4, #28]
 250 0070 334B     		ldr	r3, .L14+4
 251 0072 1840     		ands	r0, r3
 252 0074 0906     		lsls	r1, r1, #24
 253              	.LVL23:
 254 0076 0143     		orrs	r1, r0
 255 0078 E161     		str	r1, [r4, #28]
 256 007a 0BE0     		b	.L11
 257              	.LVL24:
 258              	.L9:
 259              	.LBE107:
 260              	.LBE106:
 261              	.LBB108:
 262              	.LBB109:
1708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 263              		.loc 2 1708 0
 264 007c E369     		ldr	r3, [r4, #28]
 265 007e 8022     		movs	r2, #128
 266              	.LVL25:
 267 0080 D205     		lsls	r2, r2, #23
 268 0082 1343     		orrs	r3, r2
 269 0084 E361     		str	r3, [r4, #28]
 270              	.LVL26:
 271              	.LBE109:
 272              	.LBE108:
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   else
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Set the week day for ALARM */
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_ALMA_EnableWeekday(RTCx);
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_ALMA_SetWeekDay(RTCx, RTC_AlarmStruct->AlarmDateWeekDay);
 273              		.loc 1 545 0
 274 0086 2A7C     		ldrb	r2, [r5, #16]
 275              	.LVL27:
 276              	.LBB110:
 277              	.LBB111:
1734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_ALRMAR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_ALRMAR_DU_Pos)));
1735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get ALARM A Day in BCD format
1739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
1740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       DT            LL_RTC_ALMA_GetDay\n
1741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       DU            LL_RTC_ALMA_GetDay
1742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
1744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetDay(RTC_TypeDef *RTCx)
1746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_DT | RTC_ALRMAR_DU));
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 46


1750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMAR_DT) >> RTC_ALRMAR_DT_Pos) << 4U) | ((temp & RTC_ALRMAR_DU)
1751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set ALARM A Weekday
1755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       DU            LL_RTC_ALMA_SetWeekDay
1756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
1768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_DU, WeekDay << RTC_ALRMAR_DU_Pos);
 278              		.loc 2 1769 0
 279 0088 E169     		ldr	r1, [r4, #28]
 280              	.LVL28:
 281 008a 2E4B     		ldr	r3, .L14+8
 282 008c 0B40     		ands	r3, r1
 283 008e 1206     		lsls	r2, r2, #24
 284              	.LVL29:
 285 0090 1343     		orrs	r3, r2
 286 0092 E361     		str	r3, [r4, #28]
 287              	.LVL30:
 288              	.L11:
 289              	.LBE111:
 290              	.LBE110:
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Configure the Alarm register */
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   if (RTC_Format != LL_RTC_FORMAT_BIN)
 291              		.loc 1 549 0
 292 0094 002E     		cmp	r6, #0
 293 0096 0ED0     		beq	.L12
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_ALMA_ConfigTime(RTCx, RTC_AlarmStruct->AlarmTime.TimeFormat, RTC_AlarmStruct->AlarmTime.
 294              		.loc 1 551 0
 295 0098 2B79     		ldrb	r3, [r5, #4]
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                            RTC_AlarmStruct->AlarmTime.Minutes, RTC_AlarmStruct->AlarmTime.Seconds);
 296              		.loc 1 552 0
 297 009a 6A79     		ldrb	r2, [r5, #5]
 298 009c A979     		ldrb	r1, [r5, #6]
 299              	.LVL31:
 300              	.LBB112:
 301              	.LBB113:
1770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get ALARM A Weekday
1774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       DU            LL_RTC_ALMA_GetWeekDay
1775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 47


1776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetWeekDay(RTC_TypeDef *RTCx)
1786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_DU) >> RTC_ALRMAR_DU_Pos);
1788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Alarm A time format (AM/24-hour or PM notation)
1792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       PM            LL_RTC_ALMA_SetTimeFormat
1793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
1795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
1796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
1797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetTimeFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
1800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_PM, TimeFormat);
1802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Alarm A time format (AM or PM notation)
1806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       PM            LL_RTC_ALMA_GetTimeFormat
1807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
1810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
1811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetTimeFormat(RTC_TypeDef *RTCx)
1813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_PM));
1815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set ALARM A Hours in BCD format
1819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Hours from binary to BCD fo
1820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       HT            LL_RTC_ALMA_SetHour\n
1821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_SetHour
1822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
1827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_HT | RTC_ALRMAR_HU),
1829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_ALRMAR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_ALRMAR_HU_Pos
1830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 48


1833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get ALARM A Hours in BCD format
1834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
1835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       HT            LL_RTC_ALMA_GetHour\n
1836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_GetHour
1837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
1839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetHour(RTC_TypeDef *RTCx)
1841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_HT | RTC_ALRMAR_HU));
1845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMAR_HT) >> RTC_ALRMAR_HT_Pos) << 4U) | ((temp & RTC_ALRMAR_HU)
1846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set ALARM A Minutes in BCD format
1850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
1851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       MNT           LL_RTC_ALMA_SetMinute\n
1852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_SetMinute
1853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
1858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU),
1860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_ALRMAR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMAR_M
1861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get ALARM A Minutes in BCD format
1865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
1866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       MNT           LL_RTC_ALMA_GetMinute\n
1867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_GetMinute
1868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetMinute(RTC_TypeDef *RTCx)
1872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU));
1876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMAR_MNT) >> RTC_ALRMAR_MNT_Pos) << 4U) | ((temp & RTC_ALRMAR_M
1877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set ALARM A Seconds in BCD format
1881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
1882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       ST            LL_RTC_ALMA_SetSecond\n
1883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_SetSecond
1884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
1889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 49


1890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_ST | RTC_ALRMAR_SU),
1891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_ALRMAR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMAR_SU
1892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get ALARM A Seconds in BCD format
1896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
1897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       ST            LL_RTC_ALMA_GetSecond\n
1898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_GetSecond
1899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSecond(RTC_TypeDef *RTCx)
1903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
1907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMAR_ST) >> RTC_ALRMAR_ST_Pos) << 4U) | ((temp & RTC_ALRMAR_SU)
1908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Alarm A Time (hour, minute and second) in BCD format
1912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       PM            LL_RTC_ALMA_ConfigTime\n
1913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       HT            LL_RTC_ALMA_ConfigTime\n
1914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_ConfigTime\n
1915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       MNT           LL_RTC_ALMA_ConfigTime\n
1916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_ConfigTime\n
1917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       ST            LL_RTC_ALMA_ConfigTime\n
1918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_ConfigTime
1919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
1921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
1922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
1923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_ConfigTime(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours
1929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t temp = 0U;
1931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   temp = Format12_24 | (((Hours & 0xF0U) << (RTC_ALRMAR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_ALR
 302              		.loc 2 1932 0
 303 009e 1B04     		lsls	r3, r3, #16
 304              	.LVL32:
 305 00a0 2868     		ldr	r0, [r5]
 306 00a2 0343     		orrs	r3, r0
1933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_ALRMAR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMAR_MNU_P
 307              		.loc 2 1933 0
 308 00a4 1202     		lsls	r2, r2, #8
 309              	.LVL33:
1932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_ALRMAR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMAR_MNU_P
 310              		.loc 2 1932 0
 311 00a6 1343     		orrs	r3, r2
 312 00a8 0B43     		orrs	r3, r1
 313              	.LVL34:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 50


1934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_ALRMAR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMAR_SU_Pos
1935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_PM | RTC_ALRMAR_HT | RTC_ALRMAR_HU | RTC_ALRMAR_MNT | RTC_ALR
 314              		.loc 2 1936 0
 315 00aa E169     		ldr	r1, [r4, #28]
 316              	.LVL35:
 317 00ac 264A     		ldr	r2, .L14+12
 318 00ae 0A40     		ands	r2, r1
 319 00b0 1343     		orrs	r3, r2
 320              	.LVL36:
 321 00b2 E361     		str	r3, [r4, #28]
 322              	.LVL37:
 323 00b4 34E0     		b	.L13
 324              	.LVL38:
 325              	.L12:
 326              	.LBE113:
 327              	.LBE112:
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   else
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_ALMA_ConfigTime(RTCx, RTC_AlarmStruct->AlarmTime.TimeFormat,
 328              		.loc 1 556 0
 329 00b6 2B68     		ldr	r3, [r5]
 330 00b8 9946     		mov	r9, r3
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Hours),
 331              		.loc 1 557 0
 332 00ba 2F79     		ldrb	r7, [r5, #4]
 333 00bc 0A21     		movs	r1, #10
 334 00be 3800     		movs	r0, r7
 335 00c0 FFF7FEFF 		bl	__aeabi_uidiv
 336              	.LVL39:
 337 00c4 0601     		lsls	r6, r0, #4
 338              	.LVL40:
 339 00c6 0A21     		movs	r1, #10
 340 00c8 3800     		movs	r0, r7
 341 00ca FFF7FEFF 		bl	__aeabi_uidivmod
 342              	.LVL41:
 343 00ce 3143     		orrs	r1, r6
 344 00d0 CBB2     		uxtb	r3, r1
 345 00d2 9846     		mov	r8, r3
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Minutes),
 346              		.loc 1 558 0
 347 00d4 6F79     		ldrb	r7, [r5, #5]
 348 00d6 0A21     		movs	r1, #10
 349 00d8 3800     		movs	r0, r7
 350 00da FFF7FEFF 		bl	__aeabi_uidiv
 351              	.LVL42:
 352 00de 0601     		lsls	r6, r0, #4
 353 00e0 0A21     		movs	r1, #10
 354 00e2 3800     		movs	r0, r7
 355 00e4 FFF7FEFF 		bl	__aeabi_uidivmod
 356              	.LVL43:
 357 00e8 3143     		orrs	r1, r6
 358 00ea CEB2     		uxtb	r6, r1
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Seconds));
 359              		.loc 1 559 0
 360 00ec AF79     		ldrb	r7, [r5, #6]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 51


 361 00ee 0A21     		movs	r1, #10
 362 00f0 3800     		movs	r0, r7
 363 00f2 FFF7FEFF 		bl	__aeabi_uidiv
 364              	.LVL44:
 365 00f6 0301     		lsls	r3, r0, #4
 366 00f8 9A46     		mov	r10, r3
 367 00fa 0A21     		movs	r1, #10
 368 00fc 3800     		movs	r0, r7
 369 00fe FFF7FEFF 		bl	__aeabi_uidivmod
 370              	.LVL45:
 371 0102 5346     		mov	r3, r10
 372 0104 1943     		orrs	r1, r3
 373 0106 CBB2     		uxtb	r3, r1
 374              	.LVL46:
 375              	.LBB114:
 376              	.LBB115:
1932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_ALRMAR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMAR_MNU_P
 377              		.loc 2 1932 0
 378 0108 4246     		mov	r2, r8
 379 010a 1104     		lsls	r1, r2, #16
 380 010c 4A46     		mov	r2, r9
 381 010e 1143     		orrs	r1, r2
1933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_ALRMAR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMAR_SU_Pos
 382              		.loc 2 1933 0
 383 0110 3602     		lsls	r6, r6, #8
 384              	.LVL47:
1932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_ALRMAR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMAR_MNU_P
 385              		.loc 2 1932 0
 386 0112 0E43     		orrs	r6, r1
 387 0114 1E43     		orrs	r6, r3
 388              	.LVL48:
 389              		.loc 2 1936 0
 390 0116 E169     		ldr	r1, [r4, #28]
 391 0118 0B4B     		ldr	r3, .L14+12
 392              	.LVL49:
 393 011a 1940     		ands	r1, r3
 394 011c 0E43     		orrs	r6, r1
 395              	.LVL50:
 396 011e E661     		str	r6, [r4, #28]
 397              	.LVL51:
 398              	.L13:
 399              	.LBE115:
 400              	.LBE114:
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Set ALARM mask */
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_ALMA_SetMask(RTCx, RTC_AlarmStruct->AlarmMask);
 401              		.loc 1 562 0
 402 0120 AA68     		ldr	r2, [r5, #8]
 403              	.LVL52:
 404              	.LBB116:
 405              	.LBB117:
1677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 406              		.loc 2 1677 0
 407 0122 E169     		ldr	r1, [r4, #28]
 408 0124 094B     		ldr	r3, .L14+16
 409 0126 0B40     		ands	r3, r1
 410 0128 1343     		orrs	r3, r2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 52


 411 012a E361     		str	r3, [r4, #28]
 412              	.LVL53:
 413              	.LBE117:
 414              	.LBE116:
 415              	.LBB118:
 416              	.LBB119:
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 417              		.loc 2 1058 0
 418 012c FF23     		movs	r3, #255
 419 012e 6362     		str	r3, [r4, #36]
 420              	.LVL54:
 421              	.LBE119:
 422              	.LBE118:
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   return SUCCESS;
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** }
 423              		.loc 1 568 0
 424 0130 0120     		movs	r0, #1
 425              		@ sp needed
 426              	.LVL55:
 427              	.LVL56:
 428 0132 1CBC     		pop	{r2, r3, r4}
 429 0134 9046     		mov	r8, r2
 430 0136 9946     		mov	r9, r3
 431 0138 A246     		mov	r10, r4
 432 013a F0BD     		pop	{r4, r5, r6, r7, pc}
 433              	.L15:
 434              		.align	2
 435              	.L14:
 436 013c FFFFFFBF 		.word	-1073741825
 437 0140 FFFFFFC0 		.word	-1056964609
 438 0144 FFFFFFF0 		.word	-251658241
 439 0148 808080FF 		.word	-8355712
 440 014c 7F7F7F7F 		.word	2139062143
 441              		.cfi_endproc
 442              	.LFE196:
 444              		.section	.text.LL_RTC_ALMA_StructInit,"ax",%progbits
 445              		.align	2
 446              		.global	LL_RTC_ALMA_StructInit
 447              		.code	16
 448              		.thumb_func
 450              	LL_RTC_ALMA_StructInit:
 451              	.LFB197:
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_AlarmTypeDef of ALARMA field to default value (Time = 00h:00mn:00s
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         Day = 1st day of the month/Mask = all fields are masked).
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTC_AlarmStruct pointer to a @ref LL_RTC_AlarmTypeDef structure which will be initializ
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @retval None
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** void LL_RTC_ALMA_StructInit(LL_RTC_AlarmTypeDef *RTC_AlarmStruct)
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** {
 452              		.loc 1 577 0
 453              		.cfi_startproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 53


 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457              	.LVL57:
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Alarm Time Settings : Time = 00h:00mn:00sec */
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.TimeFormat = LL_RTC_ALMA_TIME_FORMAT_AM;
 458              		.loc 1 579 0
 459 0000 0023     		movs	r3, #0
 460 0002 0360     		str	r3, [r0]
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Hours      = 0U;
 461              		.loc 1 580 0
 462 0004 0371     		strb	r3, [r0, #4]
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Minutes    = 0U;
 463              		.loc 1 581 0
 464 0006 4371     		strb	r3, [r0, #5]
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Seconds    = 0U;
 465              		.loc 1 582 0
 466 0008 8371     		strb	r3, [r0, #6]
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Alarm Day Settings : Day = 1st day of the month */
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmDateWeekDaySel = LL_RTC_ALMA_DATEWEEKDAYSEL_DATE;
 467              		.loc 1 585 0
 468 000a C360     		str	r3, [r0, #12]
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmDateWeekDay    = 1U;
 469              		.loc 1 586 0
 470 000c 0122     		movs	r2, #1
 471 000e 0274     		strb	r2, [r0, #16]
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Alarm Masks Settings : Mask =  all fields are not masked */
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmMask           = LL_RTC_ALMA_MASK_NONE;
 472              		.loc 1 589 0
 473 0010 8360     		str	r3, [r0, #8]
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** }
 474              		.loc 1 590 0
 475              		@ sp needed
 476 0012 7047     		bx	lr
 477              		.cfi_endproc
 478              	.LFE197:
 480              		.section	.text.LL_RTC_EnterInitMode,"ax",%progbits
 481              		.align	2
 482              		.global	LL_RTC_EnterInitMode
 483              		.code	16
 484              		.thumb_func
 486              	LL_RTC_EnterInitMode:
 487              	.LFB198:
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief  Enters the RTC Initialization mode.
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         @ref LL_RTC_DisableWriteProtection before calling this function.
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - SUCCESS: RTC is in Init mode
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - ERROR: RTC is not in Init mode
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** ErrorStatus LL_RTC_EnterInitMode(RTC_TypeDef *RTCx)
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 54


 488              		.loc 1 602 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 8
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493              	.LVL58:
 494 0000 82B0     		sub	sp, sp, #8
 495              	.LCFI2:
 496              		.cfi_def_cfa_offset 8
 497 0002 0100     		movs	r1, r0
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   __IO uint32_t timeout = RTC_INITMODE_TIMEOUT;
 498              		.loc 1 603 0
 499 0004 FA23     		movs	r3, #250
 500 0006 9B00     		lsls	r3, r3, #2
 501 0008 0193     		str	r3, [sp, #4]
 502              	.LVL59:
 503              	.LBB120:
 504              	.LBB121:
1937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Alarm B Time (hour, minute and second) in BCD format
1941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
1942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * are available to get independently each parameter.
1943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMAR       HT            LL_RTC_ALMA_GetTime\n
1944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_GetTime\n
1945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       MNT           LL_RTC_ALMA_GetTime\n
1946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_GetTime\n
1947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       ST            LL_RTC_ALMA_GetTime\n
1948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_GetTime
1949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
1951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetTime(RTC_TypeDef *RTCx)
1953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)((LL_RTC_ALMA_GetHour(RTCx) << RTC_OFFSET_HOUR) | (LL_RTC_ALMA_GetMinute(RTCx) <
1955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Alarm A Mask the most-significant bits starting at this bit
1959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note This register can be written only when ALRAE is reset in RTC_CR register,
1960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *       or in initialization mode.
1961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMASSR     MASKSS        LL_RTC_ALMA_SetSubSecondMask
1962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Mask Value between Min_Data=0x00 and Max_Data=0xF
1964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSubSecondMask(RTC_TypeDef *RTCx, uint32_t Mask)
1967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMASSR, RTC_ALRMASSR_MASKSS, Mask << RTC_ALRMASSR_MASKSS_Pos);
1969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Alarm A Mask the most-significant bits starting at this bit
1973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMASSR     MASKSS        LL_RTC_ALMA_GetSubSecondMask
1974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xF
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 55


1976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSubSecondMask(RTC_TypeDef *RTCx)
1978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMASSR, RTC_ALRMASSR_MASKSS) >> RTC_ALRMASSR_MASKSS_Pos);
1980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Alarm A Sub seconds value
1984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMASSR     SS            LL_RTC_ALMA_SetSubSecond
1985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Subsecond Value between Min_Data=0x00 and Max_Data=0x7FFF
1987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
1988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
1989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSubSecond(RTC_TypeDef *RTCx, uint32_t Subsecond)
1990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
1991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMASSR, RTC_ALRMASSR_SS, Subsecond);
1992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
1993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
1994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
1995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Alarm A Sub seconds value
1996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ALRMASSR     SS            LL_RTC_ALMA_GetSubSecond
1997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7FFF
1999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSubSecond(RTC_TypeDef *RTCx)
2001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMASSR, RTC_ALRMASSR_SS));
2003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
2007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Timestamp Timestamp
2010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
2011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable Timestamp
2015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           TSE           LL_RTC_TS_Enable
2017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_Enable(RTC_TypeDef *RTCx)
2021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_TSE);
2023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable Timestamp
2027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           TSE           LL_RTC_TS_Disable
2029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_Disable(RTC_TypeDef *RTCx)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 56


2033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_TSE);
2035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Time-stamp event active edge
2039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note TSE must be reset when TSEDGE is changed to avoid unwanted TSF setting
2041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           TSEDGE        LL_RTC_TS_SetActiveEdge
2042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Edge This parameter can be one of the following values:
2044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_RISING
2045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_FALLING
2046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_SetActiveEdge(RTC_TypeDef *RTCx, uint32_t Edge)
2049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_TSEDGE, Edge);
2051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Time-stamp event active edge
2055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           TSEDGE        LL_RTC_TS_GetActiveEdge
2057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_RISING
2060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_FALLING
2061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetActiveEdge(RTC_TypeDef *RTCx)
2063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_TSEDGE));
2065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Timestamp AM/PM notation (AM or 24-hour format)
2069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TSTR         PM            LL_RTC_TS_GetTimeFormat
2070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TS_TIME_FORMAT_AM
2073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TS_TIME_FORMAT_PM
2074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetTimeFormat(RTC_TypeDef *RTCx)
2076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_PM));
2078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Timestamp Hours in BCD format
2082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
2083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TSTR         HT            LL_RTC_TS_GetHour\n
2084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSTR         HU            LL_RTC_TS_GetHour
2085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
2087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetHour(RTC_TypeDef *RTCx)
2089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 57


2090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_HT | RTC_TSTR_HU) >> RTC_TSTR_HU_Pos);
2091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Timestamp Minutes in BCD format
2095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
2096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TSTR         MNT           LL_RTC_TS_GetMinute\n
2097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSTR         MNU           LL_RTC_TS_GetMinute
2098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetMinute(RTC_TypeDef *RTCx)
2102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_MNT | RTC_TSTR_MNU) >> RTC_TSTR_MNU_Pos);
2104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Timestamp Seconds in BCD format
2108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
2109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TSTR         ST            LL_RTC_TS_GetSecond\n
2110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSTR         SU            LL_RTC_TS_GetSecond
2111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetSecond(RTC_TypeDef *RTCx)
2115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_ST | RTC_TSTR_SU));
2117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Timestamp time (hour, minute and second) in BCD format
2121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
2122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * are available to get independently each parameter.
2123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TSTR         HT            LL_RTC_TS_GetTime\n
2124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSTR         HU            LL_RTC_TS_GetTime\n
2125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSTR         MNT           LL_RTC_TS_GetTime\n
2126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSTR         MNU           LL_RTC_TS_GetTime\n
2127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSTR         ST            LL_RTC_TS_GetTime\n
2128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSTR         SU            LL_RTC_TS_GetTime
2129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
2131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetTime(RTC_TypeDef *RTCx)
2133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR,
2135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****                              RTC_TSTR_HT | RTC_TSTR_HU | RTC_TSTR_MNT | RTC_TSTR_MNU | RTC_TSTR_ST 
2136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Timestamp Week day
2140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TSDR         WDU           LL_RTC_TS_GetWeekDay
2141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 58


2147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetWeekDay(RTC_TypeDef *RTCx)
2152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_WDU) >> RTC_TSDR_WDU_Pos);
2154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Timestamp Month in BCD format
2158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Month from BCD to Binary fo
2159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TSDR         MT            LL_RTC_TS_GetMonth\n
2160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSDR         MU            LL_RTC_TS_GetMonth
2161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
2164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
2165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
2166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
2167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
2168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
2169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
2170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
2171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
2172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
2173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
2174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
2175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetMonth(RTC_TypeDef *RTCx)
2177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_MT | RTC_TSDR_MU) >> RTC_TSDR_MU_Pos);
2179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Timestamp Day in BCD format
2183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
2184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TSDR         DT            LL_RTC_TS_GetDay\n
2185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSDR         DU            LL_RTC_TS_GetDay
2186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
2188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetDay(RTC_TypeDef *RTCx)
2190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_DT | RTC_TSDR_DU));
2192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Timestamp date (WeekDay, Day and Month) in BCD format
2196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_WEEKDAY, __LL_RTC_GET_MONTH,
2197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * and __LL_RTC_GET_DAY are available to get independently each parameter.
2198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TSDR         WDU           LL_RTC_TS_GetDate\n
2199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSDR         MT            LL_RTC_TS_GetDate\n
2200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSDR         MU            LL_RTC_TS_GetDate\n
2201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSDR         DT            LL_RTC_TS_GetDate\n
2202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TSDR         DU            LL_RTC_TS_GetDate
2203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 59


2204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Combination of Weekday, Day and Month
2205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetDate(RTC_TypeDef *RTCx)
2207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_WDU | RTC_TSDR_MT | RTC_TSDR_MU | RTC_TSDR_DT | R
2209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get time-stamp sub second value
2213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TSSSR        SS            LL_RTC_TS_GetSubSecond
2214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
2216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetSubSecond(RTC_TypeDef *RTCx)
2218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSSSR, RTC_TSSSR_SS));
2220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPTS)
2223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Activate timestamp on tamper detection event
2225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPTS        LL_RTC_TS_EnableOnTamper
2226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_EnableOnTamper(RTC_TypeDef *RTCx)
2230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPTS);
2232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable timestamp on tamper detection event
2236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPTS        LL_RTC_TS_DisableOnTamper
2237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_DisableOnTamper(RTC_TypeDef *RTCx)
2241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPTS);
2243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPTS */
2245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
2248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Tamper Tamper
2251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
2252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable RTC_TAMPx input detection
2256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMP1E        LL_RTC_TAMPER_Enable\n
2257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR       TAMP2E        LL_RTC_TAMPER_Enable\n
2258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR       TAMP3E        LL_RTC_TAMPER_Enable
2259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 60


2261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_1 
2262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_2 
2263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_3 (*)
2264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         
2265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_Enable(RTC_TypeDef *RTCx, uint32_t Tamper)
2269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, Tamper);
2271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Clear RTC_TAMPx input detection
2275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMP1E        LL_RTC_TAMPER_Disable\n
2276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR       TAMP2E        LL_RTC_TAMPER_Disable\n
2277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR       TAMP3E        LL_RTC_TAMPER_Disable
2278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_1 
2281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_2 
2282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_3 (*)
2283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         
2284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_Disable(RTC_TypeDef *RTCx, uint32_t Tamper)
2288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, Tamper);
2290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPPUDIS)
2293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable RTC_TAMPx pull-up disable (Disable precharge of RTC_TAMPx pins)
2295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPPUDIS     LL_RTC_TAMPER_DisablePullUp
2296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisablePullUp(RTC_TypeDef *RTCx)
2300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPPUDIS);
2302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable RTC_TAMPx pull-up disable ( Precharge RTC_TAMPx pins before sampling)
2306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPPUDIS     LL_RTC_TAMPER_EnablePullUp
2307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnablePullUp(RTC_TypeDef *RTCx)
2311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPPUDIS);
2313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPPUDIS */
2315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPPRCH)
2317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 61


2318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set RTC_TAMPx precharge duration
2319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPPRCH      LL_RTC_TAMPER_SetPrecharge
2320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Duration This parameter can be one of the following values:
2322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_1RTCCLK
2323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_2RTCCLK
2324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_4RTCCLK
2325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_8RTCCLK
2326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetPrecharge(RTC_TypeDef *RTCx, uint32_t Duration)
2329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAFCR, RTC_TAFCR_TAMPPRCH, Duration);
2331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get RTC_TAMPx precharge duration
2335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPPRCH      LL_RTC_TAMPER_GetPrecharge
2336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_1RTCCLK
2339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_2RTCCLK
2340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_4RTCCLK
2341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_8RTCCLK
2342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetPrecharge(RTC_TypeDef *RTCx)
2344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPPRCH));
2346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPPRCH */
2348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPFLT)
2350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set RTC_TAMPx filter count
2352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPFLT       LL_RTC_TAMPER_SetFilterCount
2353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  FilterCount This parameter can be one of the following values:
2355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_DISABLE
2356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_2SAMPLE
2357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_4SAMPLE
2358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_8SAMPLE
2359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetFilterCount(RTC_TypeDef *RTCx, uint32_t FilterCount)
2362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAFCR, RTC_TAFCR_TAMPFLT, FilterCount);
2364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get RTC_TAMPx filter count
2368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPFLT       LL_RTC_TAMPER_GetFilterCount
2369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_DISABLE
2372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_2SAMPLE
2373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_4SAMPLE
2374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_8SAMPLE
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 62


2375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetFilterCount(RTC_TypeDef *RTCx)
2377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPFLT));
2379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPFLT */
2381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPFREQ)
2383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Tamper sampling frequency
2385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPFREQ      LL_RTC_TAMPER_SetSamplingFreq
2386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  SamplingFreq This parameter can be one of the following values:
2388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_32768
2389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_16384
2390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_8192
2391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_4096
2392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_2048
2393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_1024
2394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_512
2395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_256
2396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetSamplingFreq(RTC_TypeDef *RTCx, uint32_t SamplingFreq)
2399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAFCR, RTC_TAFCR_TAMPFREQ, SamplingFreq);
2401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Tamper sampling frequency
2405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPFREQ      LL_RTC_TAMPER_GetSamplingFreq
2406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_32768
2409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_16384
2410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_8192
2411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_4096
2412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_2048
2413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_1024
2414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_512
2415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_256
2416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetSamplingFreq(RTC_TypeDef *RTCx)
2418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPFREQ));
2420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPFREQ */
2422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable Active level for Tamper input
2425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMP1TRG      LL_RTC_TAMPER_EnableActiveLevel\n
2426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR       TAMP2TRG      LL_RTC_TAMPER_EnableActiveLevel\n
2427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR       TAMP3TRG      LL_RTC_TAMPER_EnableActiveLevel
2428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP1 
2431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP2 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 63


2432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP3 (*)
2433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         
2434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableActiveLevel(RTC_TypeDef *RTCx, uint32_t Tamper)
2438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, Tamper);
2440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable Active level for Tamper input
2444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMP1TRG      LL_RTC_TAMPER_DisableActiveLevel\n
2445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR       TAMP2TRG      LL_RTC_TAMPER_DisableActiveLevel\n
2446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         TAFCR       TAMP3TRG      LL_RTC_TAMPER_DisableActiveLevel
2447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP1 
2450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP2 
2451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP3 (*)
2452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         
2453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableActiveLevel(RTC_TypeDef *RTCx, uint32_t Tamper)
2457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, Tamper);
2459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
2463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_WAKEUP_SUPPORT)
2466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Wakeup Wakeup
2467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
2468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Enable Wakeup timer
2472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           WUTE          LL_RTC_WAKEUP_Enable
2474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_Enable(RTC_TypeDef *RTCx)
2478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_WUTE);
2480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Disable Wakeup timer
2484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           WUTE          LL_RTC_WAKEUP_Disable
2486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 64


2489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_Disable(RTC_TypeDef *RTCx)
2490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_WUTE);
2492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Check if Wakeup timer is enabled or not
2496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           WUTE          LL_RTC_WAKEUP_IsEnabled
2497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_IsEnabled(RTC_TypeDef *RTCx)
2501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_WUTE) == (RTC_CR_WUTE));
2503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Select Wakeup clock
2507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note Bit can be written only when RTC_CR WUTE bit = 0 and RTC_ISR WUTWF bit = 1
2509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           WUCKSEL       LL_RTC_WAKEUP_SetClock
2510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  WakeupClock This parameter can be one of the following values:
2512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_16
2513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_8
2514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_4
2515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_2
2516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE
2517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE_WUT
2518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_SetClock(RTC_TypeDef *RTCx, uint32_t WakeupClock)
2521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_WUCKSEL, WakeupClock);
2523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Wakeup clock
2527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           WUCKSEL       LL_RTC_WAKEUP_GetClock
2528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_16
2531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_8
2532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_4
2533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_2
2534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE
2535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE_WUT
2536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_GetClock(RTC_TypeDef *RTCx)
2538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_WUCKSEL));
2540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Wakeup auto-reload value
2544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note Bit can be written only when WUTWF is set to 1 in RTC_ISR
2545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll WUTR         WUT           LL_RTC_WAKEUP_SetAutoReload
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 65


2546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Value Value between Min_Data=0x00 and Max_Data=0xFFFF
2548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_SetAutoReload(RTC_TypeDef *RTCx, uint32_t Value)
2551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->WUTR, RTC_WUTR_WUT, Value);
2553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Wakeup auto-reload value
2557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll WUTR         WUT           LL_RTC_WAKEUP_GetAutoReload
2558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
2560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_GetAutoReload(RTC_TypeDef *RTCx)
2562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->WUTR, RTC_WUTR_WUT));
2564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
2568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_WAKEUP_SUPPORT */
2570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_BACKUP_SUPPORT)
2572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Backup_Registers Backup_Registers
2573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
2574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Writes a data in a specified RTC Backup data register.
2578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll BKPxR        BKP           LL_RTC_BAK_SetRegister
2579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  BackupRegister This parameter can be one of the following values:
2581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR0
2582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR1
2583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR2
2584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR3
2585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR4
2586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Data Value between Min_Data=0x00 and Max_Data=0xFFFFFFFF
2587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_BAK_SetRegister(RTC_TypeDef *RTCx, uint32_t BackupRegister, uint32_t Da
2590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t tmp = 0U;
2592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   tmp = (uint32_t)(&(RTCx->BKP0R));
2594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   tmp += (BackupRegister * 4U);
2595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   /* Write the specified register */
2597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
2598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Reads data from the specified RTC Backup data Register.
2602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll BKPxR        BKP           LL_RTC_BAK_GetRegister
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 66


2603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  BackupRegister This parameter can be one of the following values:
2605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR0
2606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR1
2607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR2
2608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR3
2609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR4
2610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFFFFFF
2611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_BAK_GetRegister(RTC_TypeDef *RTCx, uint32_t BackupRegister)
2613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   register uint32_t tmp = 0U;
2615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   tmp = (uint32_t)(&(RTCx->BKP0R));
2617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   tmp += (BackupRegister * 4U);
2618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   /* Read the specified register */
2620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (*(__IO uint32_t *)tmp);
2621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
2625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_BACKUP_SUPPORT */
2627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Calibration Calibration
2629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
2630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Calibration output frequency (1 Hz or 512 Hz)
2634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note Bits are write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           COE           LL_RTC_CAL_SetOutputFreq\n
2636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         CR           COSEL         LL_RTC_CAL_SetOutputFreq
2637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Frequency This parameter can be one of the following values:
2639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_NONE
2640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_1HZ
2641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_512HZ
2642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetOutputFreq(RTC_TypeDef *RTCx, uint32_t Frequency)
2645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_COE | RTC_CR_COSEL, Frequency);
2647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Calibration output frequency (1 Hz or 512 Hz)
2651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CR           COE           LL_RTC_CAL_GetOutputFreq\n
2652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         CR           COSEL         LL_RTC_CAL_GetOutputFreq
2653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_NONE
2656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_1HZ
2657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_512HZ
2658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetOutputFreq(RTC_TypeDef *RTCx)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 67


2660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_COE | RTC_CR_COSEL));
2662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Insert or not One RTCCLK pulse every 2exp11 pulses (frequency increased by 488.5 ppm)
2666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note Bit can be written only when RECALPF is set to 0 in RTC_ISR
2668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CALR         CALP          LL_RTC_CAL_SetPulse
2669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Pulse This parameter can be one of the following values:
2671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_INSERTPULSE_NONE
2672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_INSERTPULSE_SET
2673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetPulse(RTC_TypeDef *RTCx, uint32_t Pulse)
2676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALR, RTC_CALR_CALP, Pulse);
2678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Check if one RTCCLK has been inserted or not every 2exp11 pulses (frequency increased b
2682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CALR         CALP          LL_RTC_CAL_IsPulseInserted
2683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_IsPulseInserted(RTC_TypeDef *RTCx)
2687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->CALR, RTC_CALR_CALP) == (RTC_CALR_CALP));
2689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set the calibration cycle period
2693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit can be written only when RECALPF is set to 0 in RTC_ISR
2695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CALR         CALW8         LL_RTC_CAL_SetPeriod\n
2696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         CALR         CALW16        LL_RTC_CAL_SetPeriod
2697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  Period This parameter can be one of the following values:
2699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_32SEC
2700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_16SEC
2701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_8SEC
2702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetPeriod(RTC_TypeDef *RTCx, uint32_t Period)
2705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALR, RTC_CALR_CALW8 | RTC_CALR_CALW16, Period);
2707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get the calibration cycle period
2711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CALR         CALW8         LL_RTC_CAL_GetPeriod\n
2712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         CALR         CALW16        LL_RTC_CAL_GetPeriod
2713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_32SEC
2716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_16SEC
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 68


2717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_8SEC
2718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetPeriod(RTC_TypeDef *RTCx)
2720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CALR, RTC_CALR_CALW8 | RTC_CALR_CALW16));
2722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Set Calibration minus
2726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @note   Bit can be written only when RECALPF is set to 0 in RTC_ISR
2728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CALR         CALM          LL_RTC_CAL_SetMinus
2729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  CalibMinus Value between Min_Data=0x00 and Max_Data=0x1FF
2731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetMinus(RTC_TypeDef *RTCx, uint32_t CalibMinus)
2734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALR, RTC_CALR_CALM, CalibMinus);
2736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Calibration minus
2740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll CALR         CALM          LL_RTC_CAL_GetMinus
2741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data= 0x1FF
2743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetMinus(RTC_TypeDef *RTCx)
2745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CALR, RTC_CALR_CALM));
2747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @}
2751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_FLAG_Management FLAG_Management
2754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @{
2755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Recalibration pending Flag
2759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          RECALPF       LL_RTC_IsActiveFlag_RECALP
2760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_RECALP(RTC_TypeDef *RTCx)
2764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_RECALPF) == (RTC_ISR_RECALPF));
2766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
2769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get RTC_TAMP3 detection flag
2771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          TAMP3F        LL_RTC_IsActiveFlag_TAMP3
2772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 69


2774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP3(RTC_TypeDef *RTCx)
2776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TAMP3F) == (RTC_ISR_TAMP3F));
2778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
2780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
2782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get RTC_TAMP2 detection flag
2784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          TAMP2F        LL_RTC_IsActiveFlag_TAMP2
2785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP2(RTC_TypeDef *RTCx)
2789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TAMP2F) == (RTC_ISR_TAMP2F));
2791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
2793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
2795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get RTC_TAMP1 detection flag
2797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          TAMP1F        LL_RTC_IsActiveFlag_TAMP1
2798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP1(RTC_TypeDef *RTCx)
2802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TAMP1F) == (RTC_ISR_TAMP1F));
2804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
2806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Time-stamp overflow flag
2809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          TSOVF         LL_RTC_IsActiveFlag_TSOV
2810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TSOV(RTC_TypeDef *RTCx)
2814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TSOVF) == (RTC_ISR_TSOVF));
2816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Time-stamp flag
2820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          TSF           LL_RTC_IsActiveFlag_TS
2821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TS(RTC_TypeDef *RTCx)
2825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TSF) == (RTC_ISR_TSF));
2827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_WAKEUP_SUPPORT)
2830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 70


2831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Wakeup timer flag
2832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          WUTF          LL_RTC_IsActiveFlag_WUT
2833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_WUT(RTC_TypeDef *RTCx)
2837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_WUTF) == (RTC_ISR_WUTF));
2839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_WAKEUP_SUPPORT */
2841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Alarm A flag
2844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          ALRAF         LL_RTC_IsActiveFlag_ALRA
2845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ALRA(RTC_TypeDef *RTCx)
2849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_ALRAF) == (RTC_ISR_ALRAF));
2851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
2854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Clear RTC_TAMP3 detection flag
2856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          TAMP3F        LL_RTC_ClearFlag_TAMP3
2857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP3(RTC_TypeDef *RTCx)
2861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TAMP3F | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INI
2863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
2865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
2867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Clear RTC_TAMP2 detection flag
2869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          TAMP2F        LL_RTC_ClearFlag_TAMP2
2870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP2(RTC_TypeDef *RTCx)
2874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TAMP2F | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INI
2876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
2878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
2880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Clear RTC_TAMP1 detection flag
2882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          TAMP1F        LL_RTC_ClearFlag_TAMP1
2883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP1(RTC_TypeDef *RTCx)
2887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 71


2888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TAMP1F | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INI
2889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
2891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Clear Time-stamp overflow flag
2894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          TSOVF         LL_RTC_ClearFlag_TSOV
2895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TSOV(RTC_TypeDef *RTCx)
2899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TSOVF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT
2901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Clear Time-stamp flag
2905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          TSF           LL_RTC_ClearFlag_TS
2906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TS(RTC_TypeDef *RTCx)
2910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TSF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT))
2912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #if defined(RTC_WAKEUP_SUPPORT)
2915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Clear Wakeup timer flag
2917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          WUTF          LL_RTC_ClearFlag_WUT
2918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_WUT(RTC_TypeDef *RTCx)
2922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_WUTF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT)
2924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** #endif /* RTC_WAKEUP_SUPPORT */
2926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Clear Alarm A flag
2929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          ALRAF         LL_RTC_ClearFlag_ALRA
2930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_ALRA(RTC_TypeDef *RTCx)
2934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_ALRAF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT
2936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Initialization flag
2940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          INITF         LL_RTC_IsActiveFlag_INIT
2941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_INIT(RTC_TypeDef *RTCx)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 72


2945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_INITF) == (RTC_ISR_INITF));
 505              		.loc 2 2946 0
 506 000a C368     		ldr	r3, [r0, #12]
 507              	.LVL60:
 508              	.LBE121:
 509              	.LBE120:
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ErrorStatus status = SUCCESS;
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   uint32_t tmp = 0U;
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Check the parameter */
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Check if the Initialization mode is set */
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   if (LL_RTC_IsActiveFlag_INIT(RTCx) == 0U)
 510              		.loc 1 611 0
 511 000c 5B06     		lsls	r3, r3, #25
 512 000e 21D4     		bmi	.L23
 513              	.LVL61:
 514              	.LBB122:
 515              	.LBB123:
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 516              		.loc 2 901 0
 517 0010 0123     		movs	r3, #1
 518 0012 5B42     		rsbs	r3, r3, #0
 519 0014 C360     		str	r3, [r0, #12]
 520              	.LVL62:
 521              	.LBE123:
 522              	.LBE122:
 523              	.LBB124:
 524              	.LBB125:
 525              		.loc 2 2946 0
 526 0016 C368     		ldr	r3, [r0, #12]
 527 0018 4022     		movs	r2, #64
 528 001a 1340     		ands	r3, r2
 529 001c 5A1E     		subs	r2, r3, #1
 530 001e 9341     		sbcs	r3, r3, r2
 531 0020 DBB2     		uxtb	r3, r3
 532              	.LVL63:
 533              	.LBE125:
 534              	.LBE124:
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ErrorStatus status = SUCCESS;
 535              		.loc 1 604 0
 536 0022 0120     		movs	r0, #1
 537              	.LVL64:
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Set the Initialization mode */
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_EnableInitMode(RTCx);
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     tmp = LL_RTC_IsActiveFlag_INIT(RTCx);
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     while ((timeout != 0U) && (tmp != 1U))
 538              		.loc 1 618 0
 539 0024 10E0     		b	.L19
 540              	.LVL65:
 541              	.L22:
 542              	.LBB126:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 73


 543              	.LBB127:
 544              		.file 3 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @file    stm32f0xx_ll_cortex.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @brief   Header file of CORTEX LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   @verbatim
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ==============================================================================
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****                      ##### How to use this driver #####
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****     [..]
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****     The LL CORTEX driver contains a set of generic APIs that can be
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****     used by user:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****       (+) SYSTICK configuration used by @ref LL_mDelay and @ref LL_Init1msTick
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****           functions
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****       (+) Low power mode configuration (SCB register of Cortex-MCU)
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****       (+) API to access to MCU info (CPUID register)
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   @endverbatim
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ******************************************************************************
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @attention
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * Redistribution and use in source and binary forms, with or without modification,
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * are permitted provided that the following conditions are met:
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *      this list of conditions and the following disclaimer.
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *      this list of conditions and the following disclaimer in the documentation
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *      and/or other materials provided with the distribution.
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *      may be used to endorse or promote products derived from this software
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *      without specific prior written permission.
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   *
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   ******************************************************************************
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #ifndef __STM32F0xx_LL_CORTEX_H
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #define __STM32F0xx_LL_CORTEX_H
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #ifdef __cplusplus
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** extern "C" {
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #endif
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 74


  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Includes ------------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #include "stm32f0xx.h"
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @addtogroup STM32F0xx_LL_Driver
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL CORTEX
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Private types -------------------------------------------------------------*/
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Private variables ---------------------------------------------------------*/
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Private constants ---------------------------------------------------------*/
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Private macros ------------------------------------------------------------*/
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Exported types ------------------------------------------------------------*/
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Exported constants --------------------------------------------------------*/
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Constants CORTEX Exported Constants
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CLKSOURCE_HCLK SYSTICK Clock Source
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK_DIV8     0x00000000U                 /*!< AHB clock divided by 8 
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK          SysTick_CTRL_CLKSOURCE_Msk  /*!< AHB clock selected as S
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @}
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @}
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Exported macro ------------------------------------------------------------*/
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /* Exported functions --------------------------------------------------------*/
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Functions CORTEX Exported Functions
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EF_SYSTICK SYSTICK
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @{
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** 
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** /**
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @brief  This function checks if the Systick counter flag is active or not.
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @note   It can be used in timeout function on application side.
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @rmtoll STK_CTRL     COUNTFLAG     LL_SYSTICK_IsActiveCounterFlag
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   * @retval State of bit (1 or 0).
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   */
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** __STATIC_INLINE uint32_t LL_SYSTICK_IsActiveCounterFlag(void)
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h **** {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 75


 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_cortex.h ****   return ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) == (SysTick_CTRL_COUNTFLAG_Msk));
 545              		.loc 3 113 0
 546 0026 0D4B     		ldr	r3, .L25
 547              	.LVL66:
 548 0028 1B68     		ldr	r3, [r3]
 549              	.LBE127:
 550              	.LBE126:
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       if (LL_SYSTICK_IsActiveCounterFlag() == 1U)
 551              		.loc 1 620 0
 552 002a DB03     		lsls	r3, r3, #15
 553 002c 02D5     		bpl	.L20
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       {
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****         timeout --;
 554              		.loc 1 622 0
 555 002e 019B     		ldr	r3, [sp, #4]
 556 0030 013B     		subs	r3, r3, #1
 557 0032 0193     		str	r3, [sp, #4]
 558              	.L20:
 559              	.LVL67:
 560              	.LBB128:
 561              	.LBB129:
 562              		.loc 2 2946 0
 563 0034 CB68     		ldr	r3, [r1, #12]
 564 0036 4022     		movs	r2, #64
 565 0038 1340     		ands	r3, r2
 566 003a 5A1E     		subs	r2, r3, #1
 567 003c 9341     		sbcs	r3, r3, r2
 568 003e DBB2     		uxtb	r3, r3
 569              	.LVL68:
 570              	.LBE129:
 571              	.LBE128:
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       }
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       tmp = LL_RTC_IsActiveFlag_INIT(RTCx);
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       if (timeout == 0U)
 572              		.loc 1 625 0
 573 0040 019A     		ldr	r2, [sp, #4]
 574 0042 002A     		cmp	r2, #0
 575 0044 00D1     		bne	.L19
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       {
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****         status = ERROR;
 576              		.loc 1 627 0
 577 0046 0020     		movs	r0, #0
 578              	.LVL69:
 579              	.L19:
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 580              		.loc 1 618 0
 581 0048 019A     		ldr	r2, [sp, #4]
 582 004a 002A     		cmp	r2, #0
 583 004c 03D0     		beq	.L18
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 584              		.loc 1 618 0 is_stmt 0 discriminator 1
 585 004e 012B     		cmp	r3, #1
 586 0050 E9D1     		bne	.L22
 587 0052 00E0     		b	.L18
 588              	.LVL70:
 589              	.L23:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 76


 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   uint32_t tmp = 0U;
 590              		.loc 1 604 0 is_stmt 1
 591 0054 0120     		movs	r0, #1
 592              	.LVL71:
 593              	.L18:
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       }
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   return status;
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** }
 594              		.loc 1 632 0
 595 0056 02B0     		add	sp, sp, #8
 596              		@ sp needed
 597 0058 7047     		bx	lr
 598              	.L26:
 599 005a C046     		.align	2
 600              	.L25:
 601 005c 10E000E0 		.word	-536813552
 602              		.cfi_endproc
 603              	.LFE198:
 605              		.section	.text.LL_RTC_Init,"ax",%progbits
 606              		.align	2
 607              		.global	LL_RTC_Init
 608              		.code	16
 609              		.thumb_func
 611              	LL_RTC_Init:
 612              	.LFB190:
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 613              		.loc 1 215 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              	.LVL72:
 618 0000 70B5     		push	{r4, r5, r6, lr}
 619              	.LCFI3:
 620              		.cfi_def_cfa_offset 16
 621              		.cfi_offset 4, -16
 622              		.cfi_offset 5, -12
 623              		.cfi_offset 6, -8
 624              		.cfi_offset 14, -4
 625 0002 0400     		movs	r4, r0
 626 0004 0D00     		movs	r5, r1
 627              	.LVL73:
 628              	.LBB130:
 629              	.LBB131:
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 630              		.loc 2 1069 0
 631 0006 CA23     		movs	r3, #202
 632 0008 4362     		str	r3, [r0, #36]
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 633              		.loc 2 1070 0
 634 000a 773B     		subs	r3, r3, #119
 635 000c 4362     		str	r3, [r0, #36]
 636              	.LVL74:
 637              	.LBE131:
 638              	.LBE130:
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 77


 639              		.loc 1 228 0
 640 000e FFF7FEFF 		bl	LL_RTC_EnterInitMode
 641              	.LVL75:
 642 0012 0028     		cmp	r0, #0
 643 0014 17D0     		beq	.L29
 644              	.LVL76:
 645              	.LBB132:
 646              	.LBB133:
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 647              		.loc 2 738 0
 648 0016 A368     		ldr	r3, [r4, #8]
 649 0018 4022     		movs	r2, #64
 650 001a 9343     		bics	r3, r2
 651 001c 2A68     		ldr	r2, [r5]
 652 001e 1343     		orrs	r3, r2
 653 0020 A360     		str	r3, [r4, #8]
 654              	.LVL77:
 655              	.LBE133:
 656              	.LBE132:
 657              	.LBB134:
 658              	.LBB135:
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 659              		.loc 2 1025 0
 660 0022 2369     		ldr	r3, [r4, #16]
 661 0024 DB0B     		lsrs	r3, r3, #15
 662 0026 DB03     		lsls	r3, r3, #15
 663 0028 AA68     		ldr	r2, [r5, #8]
 664 002a 1343     		orrs	r3, r2
 665 002c 2361     		str	r3, [r4, #16]
 666              	.LVL78:
 667              	.LBE135:
 668              	.LBE134:
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 669              		.loc 1 235 0
 670 002e 6A68     		ldr	r2, [r5, #4]
 671              	.LVL79:
 672              	.LBB136:
 673              	.LBB137:
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 674              		.loc 2 1013 0
 675 0030 2169     		ldr	r1, [r4, #16]
 676 0032 074B     		ldr	r3, .L30
 677 0034 0B40     		ands	r3, r1
 678 0036 1204     		lsls	r2, r2, #16
 679              	.LVL80:
 680 0038 1343     		orrs	r3, r2
 681 003a 2361     		str	r3, [r4, #16]
 682              	.LVL81:
 683              	.LBE137:
 684              	.LBE136:
 685              	.LBB138:
 686              	.LBB139:
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 687              		.loc 2 913 0
 688 003c 8123     		movs	r3, #129
 689 003e 5B42     		rsbs	r3, r3, #0
 690 0040 E360     		str	r3, [r4, #12]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 78


 691              	.LVL82:
 692              	.LBE139:
 693              	.LBE138:
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 694              		.loc 1 240 0
 695 0042 0120     		movs	r0, #1
 696 0044 00E0     		b	.L28
 697              	.LVL83:
 698              	.L29:
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 699              		.loc 1 216 0
 700 0046 0020     		movs	r0, #0
 701              	.LVL84:
 702              	.L28:
 703              	.LBB140:
 704              	.LBB141:
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 705              		.loc 2 1058 0
 706 0048 FF23     		movs	r3, #255
 707 004a 6362     		str	r3, [r4, #36]
 708              	.LVL85:
 709              	.LBE141:
 710              	.LBE140:
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 711              		.loc 1 246 0
 712              		@ sp needed
 713              	.LVL86:
 714              	.LVL87:
 715 004c 70BD     		pop	{r4, r5, r6, pc}
 716              	.L31:
 717 004e C046     		.align	2
 718              	.L30:
 719 0050 FFFF80FF 		.word	-8323073
 720              		.cfi_endproc
 721              	.LFE190:
 723              		.section	.text.LL_RTC_ExitInitMode,"ax",%progbits
 724              		.align	2
 725              		.global	LL_RTC_ExitInitMode
 726              		.code	16
 727              		.thumb_func
 729              	LL_RTC_ExitInitMode:
 730              	.LFB199:
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief  Exit the RTC Initialization mode.
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @note   When the initialization sequence is complete, the calendar restarts
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         counting after 4 RTCCLK cycles.
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         @ref LL_RTC_DisableWriteProtection before calling this function.
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - SUCCESS: RTC exited from in Init mode
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - ERROR: Not applicable
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** ErrorStatus LL_RTC_ExitInitMode(RTC_TypeDef *RTCx)
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** {
 731              		.loc 1 646 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 79


 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		@ link register save eliminated.
 736              	.LVL88:
 737              	.LBB142:
 738              	.LBB143:
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 739              		.loc 2 913 0
 740 0000 8123     		movs	r3, #129
 741 0002 5B42     		rsbs	r3, r3, #0
 742 0004 C360     		str	r3, [r0, #12]
 743              	.LVL89:
 744              	.LBE143:
 745              	.LBE142:
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Check the parameter */
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Disable initialization mode */
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_DisableInitMode(RTCx);
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   return SUCCESS;
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** }
 746              		.loc 1 654 0
 747 0006 0120     		movs	r0, #1
 748              	.LVL90:
 749              		@ sp needed
 750 0008 7047     		bx	lr
 751              		.cfi_endproc
 752              	.LFE199:
 754 000a C046     		.section	.text.LL_RTC_WaitForSynchro,"ax",%progbits
 755              		.align	2
 756              		.global	LL_RTC_WaitForSynchro
 757              		.code	16
 758              		.thumb_func
 760              	LL_RTC_WaitForSynchro:
 761              	.LFB200:
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** /**
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @brief  Waits until the RTC Time and Day registers (RTC_TR and RTC_DR) are
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         synchronized with RTC APB clock.
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         @ref LL_RTC_DisableWriteProtection before calling this function.
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         the software must first clear the RSF flag.
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         The software must then wait until it is set again before reading
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         the calendar, which means that the calendar registers have been
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - SUCCESS: RTC registers are synchronised
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   *          - ERROR: RTC registers are not synchronised
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   */
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** ErrorStatus LL_RTC_WaitForSynchro(RTC_TypeDef *RTCx)
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** {
 762              		.loc 1 673 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 80


 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 8
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 767              	.LVL91:
 768 0000 82B0     		sub	sp, sp, #8
 769              	.LCFI4:
 770              		.cfi_def_cfa_offset 8
 771 0002 0200     		movs	r2, r0
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   __IO uint32_t timeout = RTC_SYNCHRO_TIMEOUT;
 772              		.loc 1 674 0
 773 0004 FA23     		movs	r3, #250
 774 0006 9B00     		lsls	r3, r3, #2
 775 0008 0193     		str	r3, [sp, #4]
 776              	.LVL92:
 777              	.LBB144:
 778              	.LBB145:
2947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Get Registers synchronization flag
2951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          RSF           LL_RTC_IsActiveFlag_RS
2952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_RS(RTC_TypeDef *RTCx)
2956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_RSF) == (RTC_ISR_RSF));
2958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
2959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** 
2960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** /**
2961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @brief  Clear Registers synchronization flag
2962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @rmtoll ISR          RSF           LL_RTC_ClearFlag_RS
2963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   * @retval None
2965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   */
2966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_RS(RTC_TypeDef *RTCx)
2967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** {
2968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_RSF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT))
 779              		.loc 2 2968 0
 780 000a C368     		ldr	r3, [r0, #12]
 781 000c 8021     		movs	r1, #128
 782 000e 0B40     		ands	r3, r1
 783 0010 2239     		subs	r1, r1, #34
 784 0012 FF39     		subs	r1, r1, #255
 785 0014 0B43     		orrs	r3, r1
 786 0016 C360     		str	r3, [r0, #12]
 787              	.LVL93:
 788              	.LBE145:
 789              	.LBE144:
 790              	.LBB146:
 791              	.LBB147:
2957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 792              		.loc 2 2957 0
 793 0018 C368     		ldr	r3, [r0, #12]
 794 001a C131     		adds	r1, r1, #193
 795 001c 0B40     		ands	r3, r1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 81


 796 001e 591E     		subs	r1, r3, #1
 797 0020 8B41     		sbcs	r3, r3, r1
 798 0022 DBB2     		uxtb	r3, r3
 799              	.LVL94:
 800              	.LBE147:
 801              	.LBE146:
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ErrorStatus status = SUCCESS;
 802              		.loc 1 675 0
 803 0024 0120     		movs	r0, #1
 804              	.LVL95:
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   uint32_t tmp = 0U;
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Check the parameter */
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Clear RSF flag */
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   LL_RTC_ClearFlag_RS(RTCx);
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   /* Wait the registers to be synchronised */
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   tmp = LL_RTC_IsActiveFlag_RS(RTCx);
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   while ((timeout != 0U) && (tmp != 0U))
 805              		.loc 1 686 0
 806 0026 10E0     		b	.L34
 807              	.LVL96:
 808              	.L38:
 809              	.LBB148:
 810              	.LBB149:
 811              		.loc 3 113 0
 812 0028 1C4B     		ldr	r3, .L46
 813              	.LVL97:
 814 002a 1B68     		ldr	r3, [r3]
 815              	.LBE149:
 816              	.LBE148:
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (LL_SYSTICK_IsActiveCounterFlag() == 1U)
 817              		.loc 1 688 0
 818 002c DB03     		lsls	r3, r3, #15
 819 002e 02D5     		bpl	.L35
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       timeout--;
 820              		.loc 1 690 0
 821 0030 019B     		ldr	r3, [sp, #4]
 822 0032 013B     		subs	r3, r3, #1
 823 0034 0193     		str	r3, [sp, #4]
 824              	.L35:
 825              	.LVL98:
 826              	.LBB150:
 827              	.LBB151:
2957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 828              		.loc 2 2957 0
 829 0036 D368     		ldr	r3, [r2, #12]
 830 0038 2021     		movs	r1, #32
 831 003a 0B40     		ands	r3, r1
 832 003c 591E     		subs	r1, r3, #1
 833 003e 8B41     		sbcs	r3, r3, r1
 834 0040 DBB2     		uxtb	r3, r3
 835              	.LVL99:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 82


 836              	.LBE151:
 837              	.LBE150:
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     tmp = LL_RTC_IsActiveFlag_RS(RTCx);
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     if (timeout == 0U)
 838              		.loc 1 693 0
 839 0042 0199     		ldr	r1, [sp, #4]
 840 0044 0029     		cmp	r1, #0
 841 0046 00D1     		bne	.L34
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       status = ERROR;
 842              		.loc 1 695 0
 843 0048 0020     		movs	r0, #0
 844              	.LVL100:
 845              	.L34:
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 846              		.loc 1 686 0
 847 004a 0199     		ldr	r1, [sp, #4]
 848 004c 0029     		cmp	r1, #0
 849 004e 01D0     		beq	.L37
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 850              		.loc 1 686 0 is_stmt 0 discriminator 1
 851 0050 002B     		cmp	r3, #0
 852 0052 E9D1     		bne	.L38
 853              	.L37:
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   if (status != ERROR)
 854              		.loc 1 699 0 is_stmt 1
 855 0054 0028     		cmp	r0, #0
 856 0056 1FD0     		beq	.L39
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     timeout = RTC_SYNCHRO_TIMEOUT;
 857              		.loc 1 701 0
 858 0058 FA23     		movs	r3, #250
 859              	.LVL101:
 860 005a 9B00     		lsls	r3, r3, #2
 861 005c 0193     		str	r3, [sp, #4]
 862              	.LVL102:
 863              	.LBB152:
 864              	.LBB153:
2957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 865              		.loc 2 2957 0
 866 005e D368     		ldr	r3, [r2, #12]
 867 0060 2021     		movs	r1, #32
 868 0062 0B40     		ands	r3, r1
 869 0064 591E     		subs	r1, r3, #1
 870 0066 8B41     		sbcs	r3, r3, r1
 871 0068 DBB2     		uxtb	r3, r3
 872              	.LVL103:
 873              	.LBE153:
 874              	.LBE152:
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     tmp = LL_RTC_IsActiveFlag_RS(RTCx);
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     while ((timeout != 0U) && (tmp != 1U))
 875              		.loc 1 703 0
 876 006a 10E0     		b	.L40
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 83


 877              	.LVL104:
 878              	.L43:
 879              	.LBB154:
 880              	.LBB155:
 881              		.loc 3 113 0
 882 006c 0B4B     		ldr	r3, .L46
 883              	.LVL105:
 884 006e 1B68     		ldr	r3, [r3]
 885              	.LBE155:
 886              	.LBE154:
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       if (LL_SYSTICK_IsActiveCounterFlag() == 1U)
 887              		.loc 1 705 0
 888 0070 DB03     		lsls	r3, r3, #15
 889 0072 02D5     		bpl	.L41
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       {
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****         timeout--;
 890              		.loc 1 707 0
 891 0074 019B     		ldr	r3, [sp, #4]
 892 0076 013B     		subs	r3, r3, #1
 893 0078 0193     		str	r3, [sp, #4]
 894              	.L41:
 895              	.LVL106:
 896              	.LBB156:
 897              	.LBB157:
2957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 898              		.loc 2 2957 0
 899 007a D368     		ldr	r3, [r2, #12]
 900 007c 2021     		movs	r1, #32
 901 007e 0B40     		ands	r3, r1
 902 0080 591E     		subs	r1, r3, #1
 903 0082 8B41     		sbcs	r3, r3, r1
 904 0084 DBB2     		uxtb	r3, r3
 905              	.LVL107:
 906              	.LBE157:
 907              	.LBE156:
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       }
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       tmp = LL_RTC_IsActiveFlag_RS(RTCx);
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       if (timeout == 0U)
 908              		.loc 1 710 0
 909 0086 0199     		ldr	r1, [sp, #4]
 910 0088 0029     		cmp	r1, #0
 911 008a 00D1     		bne	.L40
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       {
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****         status = ERROR;
 912              		.loc 1 712 0
 913 008c 0020     		movs	r0, #0
 914              	.LVL108:
 915              	.L40:
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 916              		.loc 1 703 0
 917 008e 0199     		ldr	r1, [sp, #4]
 918 0090 0029     		cmp	r1, #0
 919 0092 01D0     		beq	.L39
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 920              		.loc 1 703 0 is_stmt 0 discriminator 1
 921 0094 012B     		cmp	r3, #1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 84


 922 0096 E9D1     		bne	.L43
 923              	.L39:
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       }
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   return (status);
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** }
 924              		.loc 1 718 0 is_stmt 1
 925 0098 02B0     		add	sp, sp, #8
 926              		@ sp needed
 927 009a 7047     		bx	lr
 928              	.L47:
 929              		.align	2
 930              	.L46:
 931 009c 10E000E0 		.word	-536813552
 932              		.cfi_endproc
 933              	.LFE200:
 935              		.section	.text.LL_RTC_DeInit,"ax",%progbits
 936              		.align	2
 937              		.global	LL_RTC_DeInit
 938              		.code	16
 939              		.thumb_func
 941              	LL_RTC_DeInit:
 942              	.LFB189:
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 943              		.loc 1 156 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947              	.LVL109:
 948 0000 10B5     		push	{r4, lr}
 949              	.LCFI5:
 950              		.cfi_def_cfa_offset 8
 951              		.cfi_offset 4, -8
 952              		.cfi_offset 14, -4
 953 0002 0400     		movs	r4, r0
 954              	.LVL110:
 955              	.LBB158:
 956              	.LBB159:
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 957              		.loc 2 1069 0
 958 0004 CA23     		movs	r3, #202
 959 0006 4362     		str	r3, [r0, #36]
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 960              		.loc 2 1070 0
 961 0008 773B     		subs	r3, r3, #119
 962 000a 4362     		str	r3, [r0, #36]
 963              	.LVL111:
 964              	.LBE159:
 965              	.LBE158:
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 966              		.loc 1 166 0
 967 000c FFF7FEFF 		bl	LL_RTC_EnterInitMode
 968              	.LVL112:
 969 0010 0028     		cmp	r0, #0
 970 0012 10D0     		beq	.L50
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 85


 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #if defined(RTC_WAKEUP_SUPPORT)
 971              		.loc 1 169 0
 972 0014 0023     		movs	r3, #0
 973 0016 2360     		str	r3, [r4]
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 974              		.loc 1 173 0
 975 0018 094A     		ldr	r2, .L51
 976 001a 6260     		str	r2, [r4, #4]
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** #endif /* RTC_WAKEUP_SUPPORT */
 977              		.loc 1 178 0
 978 001c A360     		str	r3, [r4, #8]
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMAR,   0x00000000U);
 979              		.loc 1 180 0
 980 001e 094A     		ldr	r2, .L51+4
 981 0020 2261     		str	r2, [r4, #16]
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, SHIFTR,   0x00000000U);
 982              		.loc 1 181 0
 983 0022 E361     		str	r3, [r4, #28]
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, CALR,     0x00000000U);
 984              		.loc 1 182 0
 985 0024 E362     		str	r3, [r4, #44]
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMASSR, 0x00000000U);
 986              		.loc 1 183 0
 987 0026 E363     		str	r3, [r4, #60]
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 988              		.loc 1 184 0
 989 0028 6364     		str	r3, [r4, #68]
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 990              		.loc 1 187 0
 991 002a E360     		str	r3, [r4, #12]
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 992              		.loc 1 190 0
 993 002c 2364     		str	r3, [r4, #64]
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 994              		.loc 1 193 0
 995 002e 2000     		movs	r0, r4
 996 0030 FFF7FEFF 		bl	LL_RTC_WaitForSynchro
 997              	.LVL113:
 998 0034 00E0     		b	.L49
 999              	.LVL114:
 1000              	.L50:
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 1001              		.loc 1 157 0
 1002 0036 0020     		movs	r0, #0
 1003              	.LVL115:
 1004              	.L49:
 1005              	.LBB160:
 1006              	.LBB161:
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1007              		.loc 2 1058 0
 1008 0038 FF23     		movs	r3, #255
 1009 003a 6362     		str	r3, [r4, #36]
 1010              	.LVL116:
 1011              	.LBE161:
 1012              	.LBE160:
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 1013              		.loc 1 200 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 86


 1014              		@ sp needed
 1015              	.LVL117:
 1016 003c 10BD     		pop	{r4, pc}
 1017              	.L52:
 1018 003e C046     		.align	2
 1019              	.L51:
 1020 0040 01210000 		.word	8449
 1021 0044 FF007F00 		.word	8323327
 1022              		.cfi_endproc
 1023              	.LFE189:
 1025              		.section	.text.LL_RTC_TIME_Init,"ax",%progbits
 1026              		.align	2
 1027              		.global	LL_RTC_TIME_Init
 1028              		.code	16
 1029              		.thumb_func
 1031              	LL_RTC_TIME_Init:
 1032              	.LFB192:
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 1033              		.loc 1 274 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              	.LVL118:
 1038 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1039              	.LCFI6:
 1040              		.cfi_def_cfa_offset 24
 1041              		.cfi_offset 3, -24
 1042              		.cfi_offset 4, -20
 1043              		.cfi_offset 5, -16
 1044              		.cfi_offset 6, -12
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 4F46     		mov	r7, r9
 1048 0004 4646     		mov	r6, r8
 1049 0006 C0B4     		push	{r6, r7}
 1050              	.LCFI7:
 1051              		.cfi_def_cfa_offset 32
 1052              		.cfi_offset 8, -32
 1053              		.cfi_offset 9, -28
 1054 0008 0400     		movs	r4, r0
 1055 000a 0E00     		movs	r6, r1
 1056 000c 1500     		movs	r5, r2
 1057              	.LVL119:
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 1058              		.loc 1 281 0
 1059 000e 0029     		cmp	r1, #0
 1060 0010 05D1     		bne	.L54
 1061              	.LVL120:
 1062              	.LBB162:
 1063              	.LBB163:
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1064              		.loc 2 751 0
 1065 0012 8368     		ldr	r3, [r0, #8]
 1066              	.LVL121:
 1067              	.LBE163:
 1068              	.LBE162:
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 87


 1069              		.loc 1 283 0
 1070 0014 5B06     		lsls	r3, r3, #25
 1071 0016 07D4     		bmi	.L55
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(RTC_TimeStruct->Hours));
 1072              		.loc 1 290 0
 1073 0018 0023     		movs	r3, #0
 1074 001a 1360     		str	r3, [r2]
 1075 001c 04E0     		b	.L55
 1076              	.L54:
 1077              	.LVL122:
 1078              	.LBB164:
 1079              	.LBB165:
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1080              		.loc 2 751 0
 1081 001e 8368     		ldr	r3, [r0, #8]
 1082              	.LVL123:
 1083              	.LBE165:
 1084              	.LBE164:
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 1085              		.loc 1 298 0
 1086 0020 5B06     		lsls	r3, r3, #25
 1087 0022 01D4     		bmi	.L55
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Hours)));
 1088              		.loc 1 305 0
 1089 0024 0023     		movs	r3, #0
 1090 0026 1360     		str	r3, [r2]
 1091              	.L55:
 1092              	.LVL124:
 1093              	.LBB166:
 1094              	.LBB167:
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 1095              		.loc 2 1069 0
 1096 0028 CA23     		movs	r3, #202
 1097 002a 6362     		str	r3, [r4, #36]
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1098              		.loc 2 1070 0
 1099 002c 773B     		subs	r3, r3, #119
 1100 002e 6362     		str	r3, [r4, #36]
 1101              	.LVL125:
 1102              	.LBE167:
 1103              	.LBE166:
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 1104              		.loc 1 316 0
 1105 0030 2000     		movs	r0, r4
 1106              	.LVL126:
 1107 0032 FFF7FEFF 		bl	LL_RTC_EnterInitMode
 1108              	.LVL127:
 1109 0036 0028     		cmp	r0, #0
 1110 0038 50D0     		beq	.L59
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 1111              		.loc 1 319 0
 1112 003a 002E     		cmp	r6, #0
 1113 003c 0ED0     		beq	.L57
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                          RTC_TimeStruct->Minutes, RTC_TimeStruct->Seconds);
 1114              		.loc 1 321 0
 1115 003e 2868     		ldr	r0, [r5]
 1116 0040 2B79     		ldrb	r3, [r5, #4]
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 88


 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 1117              		.loc 1 322 0
 1118 0042 6A79     		ldrb	r2, [r5, #5]
 1119 0044 A979     		ldrb	r1, [r5, #6]
 1120              	.LVL128:
 1121              	.LBB168:
 1122              	.LBB169:
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos)) | \
 1123              		.loc 2 1254 0
 1124 0046 1B04     		lsls	r3, r3, #16
 1125              	.LVL129:
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos))     | \
 1126              		.loc 2 1253 0
 1127 0048 0343     		orrs	r3, r0
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_TR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_TR_SU_Pos));
 1128              		.loc 2 1255 0
 1129 004a 1202     		lsls	r2, r2, #8
 1130              	.LVL130:
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos)) | \
 1131              		.loc 2 1254 0
 1132 004c 1343     		orrs	r3, r2
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos))     | \
 1133              		.loc 2 1253 0
 1134 004e 0B43     		orrs	r3, r1
 1135              	.LVL131:
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1136              		.loc 2 1257 0
 1137 0050 2168     		ldr	r1, [r4]
 1138              	.LVL132:
 1139 0052 274A     		ldr	r2, .L61
 1140 0054 0A40     		ands	r2, r1
 1141 0056 1343     		orrs	r3, r2
 1142              	.LVL133:
 1143 0058 2360     		str	r3, [r4]
 1144              	.LVL134:
 1145 005a 34E0     		b	.L58
 1146              	.LVL135:
 1147              	.L57:
 1148              	.LBE169:
 1149              	.LBE168:
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct->Minutes),
 1150              		.loc 1 326 0
 1151 005c 2B68     		ldr	r3, [r5]
 1152 005e 9846     		mov	r8, r3
 1153 0060 2E79     		ldrb	r6, [r5, #4]
 1154              	.LVL136:
 1155 0062 0A21     		movs	r1, #10
 1156 0064 3000     		movs	r0, r6
 1157 0066 FFF7FEFF 		bl	__aeabi_uidiv
 1158              	.LVL137:
 1159 006a 0701     		lsls	r7, r0, #4
 1160 006c 0A21     		movs	r1, #10
 1161 006e 3000     		movs	r0, r6
 1162 0070 FFF7FEFF 		bl	__aeabi_uidivmod
 1163              	.LVL138:
 1164 0074 3943     		orrs	r1, r7
 1165 0076 CFB2     		uxtb	r7, r1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 89


 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct->Seconds));
 1166              		.loc 1 327 0
 1167 0078 6E79     		ldrb	r6, [r5, #5]
 1168 007a 0A21     		movs	r1, #10
 1169 007c 3000     		movs	r0, r6
 1170 007e FFF7FEFF 		bl	__aeabi_uidiv
 1171              	.LVL139:
 1172 0082 0301     		lsls	r3, r0, #4
 1173 0084 9946     		mov	r9, r3
 1174 0086 0A21     		movs	r1, #10
 1175 0088 3000     		movs	r0, r6
 1176 008a FFF7FEFF 		bl	__aeabi_uidivmod
 1177              	.LVL140:
 1178 008e 4B46     		mov	r3, r9
 1179 0090 1943     		orrs	r1, r3
 1180 0092 CEB2     		uxtb	r6, r1
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 1181              		.loc 1 328 0
 1182 0094 AD79     		ldrb	r5, [r5, #6]
 1183              	.LVL141:
 1184 0096 0A21     		movs	r1, #10
 1185 0098 2800     		movs	r0, r5
 1186 009a FFF7FEFF 		bl	__aeabi_uidiv
 1187              	.LVL142:
 1188 009e 0301     		lsls	r3, r0, #4
 1189 00a0 9946     		mov	r9, r3
 1190 00a2 0A21     		movs	r1, #10
 1191 00a4 2800     		movs	r0, r5
 1192 00a6 FFF7FEFF 		bl	__aeabi_uidivmod
 1193              	.LVL143:
 1194 00aa 4B46     		mov	r3, r9
 1195 00ac 1943     		orrs	r1, r3
 1196 00ae CBB2     		uxtb	r3, r1
 1197              	.LVL144:
 1198              	.LBB170:
 1199              	.LBB171:
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos)) | \
 1200              		.loc 2 1254 0
 1201 00b0 3F04     		lsls	r7, r7, #16
 1202              	.LVL145:
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos))     | \
 1203              		.loc 2 1253 0
 1204 00b2 4246     		mov	r2, r8
 1205 00b4 1743     		orrs	r7, r2
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_TR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_TR_SU_Pos));
 1206              		.loc 2 1255 0
 1207 00b6 3602     		lsls	r6, r6, #8
 1208              	.LVL146:
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos)) | \
 1209              		.loc 2 1254 0
 1210 00b8 3E43     		orrs	r6, r7
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos))     | \
 1211              		.loc 2 1253 0
 1212 00ba 1E43     		orrs	r6, r3
 1213              	.LVL147:
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1214              		.loc 2 1257 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 90


 1215 00bc 2768     		ldr	r7, [r4]
 1216 00be 0C4B     		ldr	r3, .L61
 1217              	.LVL148:
 1218 00c0 1F40     		ands	r7, r3
 1219 00c2 3E43     		orrs	r6, r7
 1220              	.LVL149:
 1221 00c4 2660     		str	r6, [r4]
 1222              	.LVL150:
 1223              	.L58:
 1224              	.LBE171:
 1225              	.LBE170:
 1226              	.LBB172:
 1227              	.LBB173:
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1228              		.loc 2 913 0
 1229 00c6 8122     		movs	r2, #129
 1230 00c8 5242     		rsbs	r2, r2, #0
 1231 00ca 0A4B     		ldr	r3, .L61+4
 1232 00cc DA60     		str	r2, [r3, #12]
 1233              	.LVL151:
 1234              	.LBE173:
 1235              	.LBE172:
 1236              	.LBB174:
 1237              	.LBB175:
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1238              		.loc 2 975 0
 1239 00ce A368     		ldr	r3, [r4, #8]
 1240              	.LVL152:
 1241              	.LBE175:
 1242              	.LBE174:
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 1243              		.loc 1 335 0
 1244 00d0 9B06     		lsls	r3, r3, #26
 1245 00d2 05D4     		bmi	.L60
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 1246              		.loc 1 337 0
 1247 00d4 2000     		movs	r0, r4
 1248 00d6 FFF7FEFF 		bl	LL_RTC_WaitForSynchro
 1249              	.LVL153:
 1250 00da 02E0     		b	.L56
 1251              	.LVL154:
 1252              	.L59:
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 1253              		.loc 1 275 0
 1254 00dc 0020     		movs	r0, #0
 1255 00de 00E0     		b	.L56
 1256              	.LVL155:
 1257              	.L60:
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 1258              		.loc 1 341 0
 1259 00e0 0120     		movs	r0, #1
 1260              	.LVL156:
 1261              	.L56:
 1262              	.LBB176:
 1263              	.LBB177:
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1264              		.loc 2 1058 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 91


 1265 00e2 FF23     		movs	r3, #255
 1266 00e4 6362     		str	r3, [r4, #36]
 1267              	.LVL157:
 1268              	.LBE177:
 1269              	.LBE176:
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 1270              		.loc 1 348 0
 1271              		@ sp needed
 1272              	.LVL158:
 1273 00e6 0CBC     		pop	{r2, r3}
 1274 00e8 9046     		mov	r8, r2
 1275 00ea 9946     		mov	r9, r3
 1276 00ec F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1277              	.L62:
 1278 00ee C046     		.align	2
 1279              	.L61:
 1280 00f0 808080FF 		.word	-8355712
 1281 00f4 00280040 		.word	1073752064
 1282              		.cfi_endproc
 1283              	.LFE192:
 1285              		.section	.text.LL_RTC_DATE_Init,"ax",%progbits
 1286              		.align	2
 1287              		.global	LL_RTC_DATE_Init
 1288              		.code	16
 1289              		.thumb_func
 1291              	LL_RTC_DATE_Init:
 1292              	.LFB194:
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 1293              		.loc 1 377 0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 1297              	.LVL159:
 1298 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1299              	.LCFI8:
 1300              		.cfi_def_cfa_offset 24
 1301              		.cfi_offset 3, -24
 1302              		.cfi_offset 4, -20
 1303              		.cfi_offset 5, -16
 1304              		.cfi_offset 6, -12
 1305              		.cfi_offset 7, -8
 1306              		.cfi_offset 14, -4
 1307 0002 4F46     		mov	r7, r9
 1308 0004 4646     		mov	r6, r8
 1309 0006 C0B4     		push	{r6, r7}
 1310              	.LCFI9:
 1311              		.cfi_def_cfa_offset 32
 1312              		.cfi_offset 8, -32
 1313              		.cfi_offset 9, -28
 1314 0008 0400     		movs	r4, r0
 1315 000a 0E00     		movs	r6, r1
 1316 000c 1500     		movs	r5, r2
 1317              	.LVL160:
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 1318              		.loc 1 384 0
 1319 000e 0029     		cmp	r1, #0
 1320 0010 06D1     		bne	.L64
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 92


 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 1321              		.loc 1 384 0 is_stmt 0 discriminator 1
 1322 0012 5378     		ldrb	r3, [r2, #1]
 1323 0014 DA06     		lsls	r2, r3, #27
 1324 0016 03D5     		bpl	.L64
 1325              	.LVL161:
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   }
 1326              		.loc 1 386 0 is_stmt 1
 1327 0018 1022     		movs	r2, #16
 1328 001a 9343     		bics	r3, r2
 1329 001c 0A33     		adds	r3, r3, #10
 1330 001e 6B70     		strb	r3, [r5, #1]
 1331              	.L64:
 1332              	.LVL162:
 1333              	.LBB178:
 1334              	.LBB179:
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 1335              		.loc 2 1069 0
 1336 0020 CA23     		movs	r3, #202
 1337 0022 6362     		str	r3, [r4, #36]
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1338              		.loc 2 1070 0
 1339 0024 773B     		subs	r3, r3, #119
 1340 0026 6362     		str	r3, [r4, #36]
 1341              	.LVL163:
 1342              	.LBE179:
 1343              	.LBE178:
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****   {
 1344              		.loc 1 406 0
 1345 0028 2000     		movs	r0, r4
 1346              	.LVL164:
 1347 002a FFF7FEFF 		bl	LL_RTC_EnterInitMode
 1348              	.LVL165:
 1349 002e 0028     		cmp	r0, #0
 1350 0030 52D0     		beq	.L68
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 1351              		.loc 1 409 0
 1352 0032 002E     		cmp	r6, #0
 1353 0034 0FD0     		beq	.L66
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 1354              		.loc 1 411 0
 1355 0036 2B78     		ldrb	r3, [r5]
 1356 0038 A878     		ldrb	r0, [r5, #2]
 1357 003a 6A78     		ldrb	r2, [r5, #1]
 1358 003c E978     		ldrb	r1, [r5, #3]
 1359              	.LVL166:
 1360              	.LBB180:
 1361              	.LBB181:
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
 1362              		.loc 2 1592 0
 1363 003e 5B03     		lsls	r3, r3, #13
 1364              	.LVL167:
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) | \
 1365              		.loc 2 1593 0
 1366 0040 0904     		lsls	r1, r1, #16
 1367              	.LVL168:
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 93


 1368              		.loc 2 1592 0
 1369 0042 0B43     		orrs	r3, r1
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Day & 0xF0U) << (RTC_DR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_DR_DU_Pos));
 1370              		.loc 2 1594 0
 1371 0044 1202     		lsls	r2, r2, #8
 1372              	.LVL169:
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) | \
 1373              		.loc 2 1593 0
 1374 0046 1343     		orrs	r3, r2
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
 1375              		.loc 2 1592 0
 1376 0048 0343     		orrs	r3, r0
 1377              	.LVL170:
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1378              		.loc 2 1597 0
 1379 004a 6168     		ldr	r1, [r4, #4]
 1380 004c 274A     		ldr	r2, .L70
 1381 004e 0A40     		ands	r2, r1
 1382 0050 1343     		orrs	r3, r2
 1383              	.LVL171:
 1384 0052 6360     		str	r3, [r4, #4]
 1385              	.LVL172:
 1386 0054 35E0     		b	.L67
 1387              	.LVL173:
 1388              	.L66:
 1389              	.LBE181:
 1390              	.LBE180:
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_DateStruct->Month), __LL_RTC_CONVERT_BIN2BCD(
 1391              		.loc 1 415 0
 1392 0056 2B78     		ldrb	r3, [r5]
 1393 0058 9846     		mov	r8, r3
 1394 005a AE78     		ldrb	r6, [r5, #2]
 1395              	.LVL174:
 1396 005c 0A21     		movs	r1, #10
 1397 005e 3000     		movs	r0, r6
 1398 0060 FFF7FEFF 		bl	__aeabi_uidiv
 1399              	.LVL175:
 1400 0064 0701     		lsls	r7, r0, #4
 1401 0066 0A21     		movs	r1, #10
 1402 0068 3000     		movs	r0, r6
 1403 006a FFF7FEFF 		bl	__aeabi_uidivmod
 1404              	.LVL176:
 1405 006e 3943     		orrs	r1, r7
 1406 0070 CFB2     		uxtb	r7, r1
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 1407              		.loc 1 416 0
 1408 0072 6E78     		ldrb	r6, [r5, #1]
 1409 0074 0A21     		movs	r1, #10
 1410 0076 3000     		movs	r0, r6
 1411 0078 FFF7FEFF 		bl	__aeabi_uidiv
 1412              	.LVL177:
 1413 007c 0301     		lsls	r3, r0, #4
 1414 007e 9946     		mov	r9, r3
 1415 0080 0A21     		movs	r1, #10
 1416 0082 3000     		movs	r0, r6
 1417 0084 FFF7FEFF 		bl	__aeabi_uidivmod
 1418              	.LVL178:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 94


 1419 0088 4B46     		mov	r3, r9
 1420 008a 1943     		orrs	r1, r3
 1421 008c CEB2     		uxtb	r6, r1
 1422 008e ED78     		ldrb	r5, [r5, #3]
 1423              	.LVL179:
 1424 0090 0A21     		movs	r1, #10
 1425 0092 2800     		movs	r0, r5
 1426 0094 FFF7FEFF 		bl	__aeabi_uidiv
 1427              	.LVL180:
 1428 0098 0301     		lsls	r3, r0, #4
 1429 009a 9946     		mov	r9, r3
 1430 009c 0A21     		movs	r1, #10
 1431 009e 2800     		movs	r0, r5
 1432 00a0 FFF7FEFF 		bl	__aeabi_uidivmod
 1433              	.LVL181:
 1434 00a4 4B46     		mov	r3, r9
 1435 00a6 1943     		orrs	r1, r3
 1436 00a8 CAB2     		uxtb	r2, r1
 1437              	.LVL182:
 1438              	.LBB182:
 1439              	.LBB183:
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
 1440              		.loc 2 1592 0
 1441 00aa 4346     		mov	r3, r8
 1442 00ac 5B03     		lsls	r3, r3, #13
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) | \
 1443              		.loc 2 1593 0
 1444 00ae 1204     		lsls	r2, r2, #16
 1445              	.LVL183:
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
 1446              		.loc 2 1592 0
 1447 00b0 1343     		orrs	r3, r2
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Day & 0xF0U) << (RTC_DR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_DR_DU_Pos));
 1448              		.loc 2 1594 0
 1449 00b2 3602     		lsls	r6, r6, #8
 1450              	.LVL184:
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) | \
 1451              		.loc 2 1593 0
 1452 00b4 3343     		orrs	r3, r6
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
 1453              		.loc 2 1592 0
 1454 00b6 3B43     		orrs	r3, r7
 1455              	.LVL185:
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1456              		.loc 2 1597 0
 1457 00b8 6768     		ldr	r7, [r4, #4]
 1458              	.LVL186:
 1459 00ba 0C4A     		ldr	r2, .L70
 1460 00bc 3A40     		ands	r2, r7
 1461 00be 1343     		orrs	r3, r2
 1462              	.LVL187:
 1463 00c0 6360     		str	r3, [r4, #4]
 1464              	.LVL188:
 1465              	.L67:
 1466              	.LBE183:
 1467              	.LBE182:
 1468              	.LBB184:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 95


 1469              	.LBB185:
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1470              		.loc 2 913 0
 1471 00c2 8122     		movs	r2, #129
 1472 00c4 5242     		rsbs	r2, r2, #0
 1473 00c6 0A4B     		ldr	r3, .L70+4
 1474 00c8 DA60     		str	r2, [r3, #12]
 1475              	.LVL189:
 1476              	.LBE185:
 1477              	.LBE184:
 1478              	.LBB186:
 1479              	.LBB187:
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1480              		.loc 2 975 0
 1481 00ca A368     		ldr	r3, [r4, #8]
 1482              	.LVL190:
 1483              	.LBE187:
 1484              	.LBE186:
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     {
 1485              		.loc 1 423 0
 1486 00cc 9B06     		lsls	r3, r3, #26
 1487 00ce 05D4     		bmi	.L69
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 1488              		.loc 1 425 0
 1489 00d0 2000     		movs	r0, r4
 1490 00d2 FFF7FEFF 		bl	LL_RTC_WaitForSynchro
 1491              	.LVL191:
 1492 00d6 02E0     		b	.L65
 1493              	.LVL192:
 1494              	.L68:
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 1495              		.loc 1 378 0
 1496 00d8 0020     		movs	r0, #0
 1497 00da 00E0     		b	.L65
 1498              	.LVL193:
 1499              	.L69:
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c ****     }
 1500              		.loc 1 429 0
 1501 00dc 0120     		movs	r0, #1
 1502              	.LVL194:
 1503              	.L65:
 1504              	.LBB188:
 1505              	.LBB189:
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rtc.h **** }
 1506              		.loc 2 1058 0
 1507 00de FF23     		movs	r3, #255
 1508 00e0 6362     		str	r3, [r4, #36]
 1509              	.LVL195:
 1510              	.LBE189:
 1511              	.LBE188:
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_rtc.c **** 
 1512              		.loc 1 436 0
 1513              		@ sp needed
 1514              	.LVL196:
 1515 00e2 0CBC     		pop	{r2, r3}
 1516 00e4 9046     		mov	r8, r2
 1517 00e6 9946     		mov	r9, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 96


 1518 00e8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1519              	.L71:
 1520 00ea C046     		.align	2
 1521              	.L70:
 1522 00ec C00000FF 		.word	-16777024
 1523 00f0 00280040 		.word	1073752064
 1524              		.cfi_endproc
 1525              	.LFE194:
 1527              		.text
 1528              	.Letext0:
 1529              		.file 4 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 1530              		.file 5 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 1531              		.file 6 "Drivers/CMSIS/Include/core_cm0.h"
 1532              		.file 7 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f070x6.h"
 1533              		.file 8 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccM4RwII.s 			page 97


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_ll_rtc.c
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:20     .text.LL_RTC_StructInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:25     .text.LL_RTC_StructInit:00000000 LL_RTC_StructInit
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:50     .text.LL_RTC_TIME_StructInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:55     .text.LL_RTC_TIME_StructInit:00000000 LL_RTC_TIME_StructInit
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:79     .text.LL_RTC_DATE_StructInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:84     .text.LL_RTC_DATE_StructInit:00000000 LL_RTC_DATE_StructInit
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:111    .text.LL_RTC_ALMA_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:116    .text.LL_RTC_ALMA_Init:00000000 LL_RTC_ALMA_Init
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:436    .text.LL_RTC_ALMA_Init:0000013c $d
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:445    .text.LL_RTC_ALMA_StructInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:450    .text.LL_RTC_ALMA_StructInit:00000000 LL_RTC_ALMA_StructInit
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:481    .text.LL_RTC_EnterInitMode:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:486    .text.LL_RTC_EnterInitMode:00000000 LL_RTC_EnterInitMode
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:601    .text.LL_RTC_EnterInitMode:0000005c $d
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:606    .text.LL_RTC_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:611    .text.LL_RTC_Init:00000000 LL_RTC_Init
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:719    .text.LL_RTC_Init:00000050 $d
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:724    .text.LL_RTC_ExitInitMode:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:729    .text.LL_RTC_ExitInitMode:00000000 LL_RTC_ExitInitMode
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:755    .text.LL_RTC_WaitForSynchro:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:760    .text.LL_RTC_WaitForSynchro:00000000 LL_RTC_WaitForSynchro
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:931    .text.LL_RTC_WaitForSynchro:0000009c $d
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:936    .text.LL_RTC_DeInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:941    .text.LL_RTC_DeInit:00000000 LL_RTC_DeInit
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:1020   .text.LL_RTC_DeInit:00000040 $d
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:1026   .text.LL_RTC_TIME_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:1031   .text.LL_RTC_TIME_Init:00000000 LL_RTC_TIME_Init
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:1280   .text.LL_RTC_TIME_Init:000000f0 $d
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:1286   .text.LL_RTC_DATE_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:1291   .text.LL_RTC_DATE_Init:00000000 LL_RTC_DATE_Init
C:\Users\strag\AppData\Local\Temp\ccM4RwII.s:1522   .text.LL_RTC_DATE_Init:000000ec $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
__aeabi_uidivmod
