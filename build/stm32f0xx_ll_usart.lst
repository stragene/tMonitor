ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f0xx_ll_usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.LL_USART_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	LL_USART_DeInit
  22              		.code	16
  23              		.thumb_func
  25              	LL_USART_DeInit:
  26              	.LFB307:
  27              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @file    stm32f0xx_ll_usart.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @brief   USART LL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 2


  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USE_FULL_LL_DRIVER)
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Includes ------------------------------------------------------------------*/
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #include "stm32f0xx_ll_usart.h"
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #include "stm32f0xx_ll_rcc.h"
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #include "stm32f0xx_ll_bus.h"
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #ifdef  USE_FULL_ASSERT
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #include "stm32_assert.h"
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #else
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define assert_param(expr) ((void)0U)
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (USART4) || defined (USART5
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /** @addtogroup USART_LL
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /** @addtogroup USART_LL_Private_Constants
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @{
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @}
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Private macros ------------------------------------------------------------*/
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /** @addtogroup USART_LL_Private_Macros
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @{
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* __BAUDRATE__ The maximum Baud Rate is derived from the maximum clock available
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****  *              divided by the smallest oversampling used on the USART (i.e. 8)    */
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_BAUDRATE(__BAUDRATE__) ((__BAUDRATE__) <= 6000000U)
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* __VALUE__ In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_BRR_MIN(__VALUE__) ((__VALUE__) >= 16U)
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* __VALUE__ BRR content must be lower than or equal to 0xFFFF. */
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_BRR_MAX(__VALUE__) ((__VALUE__) <= 0x0000FFFFU)
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_DIRECTION(__VALUE__) (((__VALUE__) == LL_USART_DIRECTION_NONE) \
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_DIRECTION_RX) \
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_DIRECTION_TX) \
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_DIRECTION_TX_RX))
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 3


  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_PARITY(__VALUE__) (((__VALUE__) == LL_USART_PARITY_NONE) \
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                     || ((__VALUE__) == LL_USART_PARITY_EVEN) \
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                     || ((__VALUE__) == LL_USART_PARITY_ODD))
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART_7BITS_SUPPORT)
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_DATAWIDTH(__VALUE__) (((__VALUE__) == LL_USART_DATAWIDTH_7B) \
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_DATAWIDTH_8B) \
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_DATAWIDTH_9B))
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #else
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_DATAWIDTH(__VALUE__) (((__VALUE__) == LL_USART_DATAWIDTH_8B) \
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_DATAWIDTH_9B))
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_OVERSAMPLING(__VALUE__) (((__VALUE__) == LL_USART_OVERSAMPLING_16) \
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_OVERSAMPLING_8))
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_LASTBITCLKOUTPUT(__VALUE__) (((__VALUE__) == LL_USART_LASTCLKPULSE_NO_OUTPUT) \
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                               || ((__VALUE__) == LL_USART_LASTCLKPULSE_OUTPUT))
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_CLOCKPHASE(__VALUE__) (((__VALUE__) == LL_USART_PHASE_1EDGE) \
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                         || ((__VALUE__) == LL_USART_PHASE_2EDGE))
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_CLOCKPOLARITY(__VALUE__) (((__VALUE__) == LL_USART_POLARITY_LOW) \
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_POLARITY_HIGH))
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_CLOCKOUTPUT(__VALUE__) (((__VALUE__) == LL_USART_CLOCK_DISABLE) \
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                          || ((__VALUE__) == LL_USART_CLOCK_ENABLE))
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART_SMARTCARD_SUPPORT)
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_STOPBITS(__VALUE__) (((__VALUE__) == LL_USART_STOPBITS_0_5) \
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                       || ((__VALUE__) == LL_USART_STOPBITS_1) \
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                       || ((__VALUE__) == LL_USART_STOPBITS_1_5) \
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                       || ((__VALUE__) == LL_USART_STOPBITS_2))
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #else
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_STOPBITS(__VALUE__) (((__VALUE__) == LL_USART_STOPBITS_1) \
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                       || ((__VALUE__) == LL_USART_STOPBITS_2))
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #define IS_LL_USART_HWCONTROL(__VALUE__) (((__VALUE__) == LL_USART_HWCONTROL_NONE) \
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_HWCONTROL_RTS) \
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_HWCONTROL_CTS) \
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_HWCONTROL_RTS_CTS))
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @}
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Private function prototypes -----------------------------------------------*/
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /* Exported functions --------------------------------------------------------*/
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /** @addtogroup USART_LL_Exported_Functions
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @{
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /** @addtogroup USART_LL_EF_Init
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @{
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 4


 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @brief  De-initialize USART registers (Registers restored to their default values).
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param  USARTx USART Instance
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @retval An ErrorStatus enumeration value:
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *          - SUCCESS: USART registers are de-initialized
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *          - ERROR: USART registers are not de-initialized
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** ErrorStatus LL_USART_DeInit(USART_TypeDef *USARTx)
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** {
  28              		.loc 1 155 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ErrorStatus status = SUCCESS;
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Check the parameters */
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_UART_INSTANCE(USARTx));
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   if (USARTx == USART1)
  34              		.loc 1 161 0
  35 0000 0F4B     		ldr	r3, .L5
  36 0002 9842     		cmp	r0, r3
  37 0004 0BD1     		bne	.L2
  38              	.LVL1:
  39              	.LBB22:
  40              	.LBB23:
  41              		.file 2 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @file    stm32f0xx_ll_bus.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @verbatim                
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write 
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****     [..]  
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 5


  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * are permitted provided that the following conditions are met:
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *      this list of conditions and the following disclaimer.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *      this list of conditions and the following disclaimer in the documentation
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *      and/or other materials provided with the distribution.
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *      may be used to endorse or promote products derived from this software
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *      without specific prior written permission.
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   ******************************************************************************
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifndef __STM32F0xx_LL_BUS_H
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define __STM32F0xx_LL_BUS_H
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #ifdef __cplusplus
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** extern "C" {
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #include "stm32f0xx.h"
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @addtogroup STM32F0xx_LL_Driver
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(RCC)
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 6


  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DMA2)
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHBENR_DMA2EN
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DMA2*/
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBENR_SRAMEN
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLITFEN
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOA          RCC_AHBENR_GPIOAEN
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOB          RCC_AHBENR_GPIOBEN
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOC          RCC_AHBENR_GPIOCEN
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOD)
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOD          RCC_AHBENR_GPIODEN
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOD*/
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(GPIOE)
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOE          RCC_AHBENR_GPIOEEN
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*GPIOE*/
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOF          RCC_AHBENR_GPIOFEN
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TSC)
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TSC*/
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM2)
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM2*/
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM6)
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM6*/
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM7)
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM7*/
 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM14          RCC_APB1ENR_TIM14EN
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(SPI2)
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*SPI2*/
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART2)
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART2 */
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART3)
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART3 */
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART4)
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 7


 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART4 */
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART5)
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USART5 */
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(I2C2)
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*I2C2*/
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USB)
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /* USB */
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CAN)
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN            RCC_APB1ENR_CANEN
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CAN*/
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CRS)
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CRS*/
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(DAC)
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*DAC*/
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(CEC)
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APB1ENR_CECEN
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*CEC*/
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ADC1           RCC_APB2ENR_ADC1EN
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART8)
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART8         RCC_APB2ENR_USART8EN
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART8*/
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART7)
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART7         RCC_APB2ENR_USART7EN
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART7*/
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(USART6)
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART6         RCC_APB2ENR_USART6EN
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*USART6*/
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_USART1         RCC_APB2ENR_USART1EN
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #if defined(TIM15)
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #endif /*TIM15*/
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 8


 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_EnableClock\n
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_EnableClock\n
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_EnableClock\n
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_EnableClock\n
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_EnableClock\n
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_EnableClock\n
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_EnableClock\n
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_EnableClock\n
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_EnableClock\n
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_EnableClock
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 9


 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_IsEnabledClock\n
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_IsEnabledClock\n
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_IsEnabledClock\n
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_IsEnabledClock\n
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_IsEnabledClock\n
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_IsEnabledClock\n
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_IsEnabledClock\n
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_IsEnabledClock\n
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_IsEnabledClock
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->AHBENR, Periphs) == Periphs);
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_DisableClock\n
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_DisableClock\n
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_DisableClock\n
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOAEN       LL_AHB1_GRP1_DisableClock\n
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOBEN       LL_AHB1_GRP1_DisableClock\n
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOCEN       LL_AHB1_GRP1_DisableClock\n
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIODEN       LL_AHB1_GRP1_DisableClock\n
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOEEN       LL_AHB1_GRP1_DisableClock\n
 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       GPIOFEN       LL_AHB1_GRP1_DisableClock\n
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBENR       TSCEN         LL_AHB1_GRP1_DisableClock
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 10


 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ForceReset\n
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ForceReset\n
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ForceReset\n
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ForceReset\n
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ForceReset\n
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ForceReset\n
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll AHBRSTR      GPIOARST      LL_AHB1_GRP1_ReleaseReset\n
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOBRST      LL_AHB1_GRP1_ReleaseReset\n
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOCRST      LL_AHB1_GRP1_ReleaseReset\n
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIODRST      LL_AHB1_GRP1_ReleaseReset\n
 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOERST      LL_AHB1_GRP1_ReleaseReset\n
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      GPIOFRST      LL_AHB1_GRP1_ReleaseReset\n
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD (*)
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE (*)
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 11


 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1_GRP1 APB1 GRP1
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock (available in register 1).
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_EnableClock\n
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_EnableClock\n
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_EnableClock\n
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_EnableClock\n
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_EnableClock\n
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_EnableClock\n
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_EnableClock\n
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_EnableClock\n
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_EnableClock\n
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_EnableClock\n
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_EnableClock\n
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_EnableClock\n
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_EnableClock\n
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_EnableClock\n
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_EnableClock\n
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_EnableClock\n
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_EnableClock\n
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_EnableClock\n
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_EnableClock
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 12


 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not (available in register 1).
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_IsEnabledClock\n
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_IsEnabledClock\n
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_IsEnabledClock\n
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_IsEnabledClock\n
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_IsEnabledClock
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 13


 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->APB1ENR, Periphs) == Periphs);
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock (available in register 1).
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1ENR      TIM2EN        LL_APB1_GRP1_DisableClock\n
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_DisableClock\n
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_DisableClock\n
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_DisableClock\n
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_DisableClock\n
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_DisableClock\n
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_DisableClock\n
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_DisableClock\n
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_DisableClock\n
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART4EN      LL_APB1_GRP1_DisableClock\n
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USART5EN      LL_APB1_GRP1_DisableClock\n
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_DisableClock\n
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_DisableClock\n
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_DisableClock\n
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CANEN         LL_APB1_GRP1_DisableClock\n
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CRSEN         LL_APB1_GRP1_DisableClock\n
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_DisableClock\n
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_DisableClock\n
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_DisableClock
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 14


 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset (available in register 1).
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ForceReset\n
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ForceReset\n
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ForceReset\n
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ForceReset\n
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ForceReset\n
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ForceReset\n
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ForceReset\n
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ForceReset\n
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ForceReset\n
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART4RST     LL_APB1_GRP1_ForceReset\n
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART5RST     LL_APB1_GRP1_ForceReset\n
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ForceReset\n
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ForceReset\n
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ForceReset\n
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CANRST        LL_APB1_GRP1_ForceReset\n
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CRSRST        LL_APB1_GRP1_ForceReset\n
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ForceReset\n
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ForceReset\n
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ForceReset
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset (available in register 1).
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ReleaseReset\n
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 15


 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ReleaseReset\n
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ReleaseReset\n
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ReleaseReset\n
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART4RST     LL_APB1_GRP1_ReleaseReset\n
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USART5RST     LL_APB1_GRP1_ReleaseReset\n
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ReleaseReset\n
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CANRST        LL_APB1_GRP1_ReleaseReset\n
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CRSRST        LL_APB1_GRP1_ReleaseReset\n
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ReleaseReset\n
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ReleaseReset
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2 (*)
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2 (*)
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN (*)
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @}
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1_GRP2 APB1 GRP2
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @{
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   */
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock (available in register 2).
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB1_GRP2_EnableClock\n
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      ADC1EN        LL_APB1_GRP2_EnableClock\n
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART8EN      LL_APB1_GRP2_EnableClock\n
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 16


 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART7EN      LL_APB1_GRP2_EnableClock\n
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART6EN      LL_APB1_GRP2_EnableClock\n
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB1_GRP2_EnableClock\n
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB1_GRP2_EnableClock\n
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB1_GRP2_EnableClock\n
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB1_GRP2_EnableClock\n
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB1_GRP2_EnableClock\n
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB1_GRP2_EnableClock\n
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      DBGMCUEN      LL_APB1_GRP2_EnableClock
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_EnableClock(uint32_t Periphs)
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   (void)tmpreg;
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not (available in register 2).
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB1_GRP2_IsEnabledClock\n
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      ADC1EN        LL_APB1_GRP2_IsEnabledClock\n
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART8EN      LL_APB1_GRP2_IsEnabledClock\n
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART7EN      LL_APB1_GRP2_IsEnabledClock\n
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART6EN      LL_APB1_GRP2_IsEnabledClock\n
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB1_GRP2_IsEnabledClock\n
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB1_GRP2_IsEnabledClock\n
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB1_GRP2_IsEnabledClock\n
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB1_GRP2_IsEnabledClock\n
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB1_GRP2_IsEnabledClock\n
 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB1_GRP2_IsEnabledClock\n
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      DBGMCUEN      LL_APB1_GRP2_IsEnabledClock
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 17


 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP2_IsEnabledClock(uint32_t Periphs)
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   return (READ_BIT(RCC->APB2ENR, Periphs) == Periphs);
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock (available in register 2).
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB1_GRP2_DisableClock\n
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      ADC1EN        LL_APB1_GRP2_DisableClock\n
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART8EN      LL_APB1_GRP2_DisableClock\n
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART7EN      LL_APB1_GRP2_DisableClock\n
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART6EN      LL_APB1_GRP2_DisableClock\n
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB1_GRP2_DisableClock\n
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB1_GRP2_DisableClock\n
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB1_GRP2_DisableClock\n
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB1_GRP2_DisableClock\n
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB1_GRP2_DisableClock\n
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB1_GRP2_DisableClock\n
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2ENR      DBGMCUEN      LL_APB1_GRP2_DisableClock
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_DisableClock(uint32_t Periphs)
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2ENR, Periphs);
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset (available in register 2).
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB1_GRP2_ForceReset\n
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     ADC1RST       LL_APB1_GRP2_ForceReset\n
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART8RST     LL_APB1_GRP2_ForceReset\n
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART7RST     LL_APB1_GRP2_ForceReset\n
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART6RST     LL_APB1_GRP2_ForceReset\n
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 18


 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM1RST       LL_APB1_GRP2_ForceReset\n
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB1_GRP2_ForceReset\n
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB1_GRP2_ForceReset\n
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM15RST      LL_APB1_GRP2_ForceReset\n
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM16RST      LL_APB1_GRP2_ForceReset\n
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM17RST      LL_APB1_GRP2_ForceReset\n
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     DBGMCURST     LL_APB1_GRP2_ForceReset
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ALL
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_ForceReset(uint32_t Periphs)
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   SET_BIT(RCC->APB2RSTR, Periphs);
  42              		.loc 2 796 0
  43 0006 0F4B     		ldr	r3, .L5+4
  44 0008 DA68     		ldr	r2, [r3, #12]
  45 000a 8021     		movs	r1, #128
  46 000c C901     		lsls	r1, r1, #7
  47 000e 0A43     		orrs	r2, r1
  48 0010 DA60     		str	r2, [r3, #12]
  49              	.LVL2:
  50              	.LBE23:
  51              	.LBE22:
  52              	.LBB24:
  53              	.LBB25:
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** 
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** /**
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset (available in register 2).
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB1_GRP2_ReleaseReset\n
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     ADC1RST       LL_APB1_GRP2_ReleaseReset\n
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART8RST     LL_APB1_GRP2_ReleaseReset\n
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART7RST     LL_APB1_GRP2_ReleaseReset\n
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART6RST     LL_APB1_GRP2_ReleaseReset\n
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM1RST       LL_APB1_GRP2_ReleaseReset\n
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB1_GRP2_ReleaseReset\n
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB1_GRP2_ReleaseReset\n
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM15RST      LL_APB1_GRP2_ReleaseReset\n
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM16RST      LL_APB1_GRP2_ReleaseReset\n
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     TIM17RST      LL_APB1_GRP2_ReleaseReset\n
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         APB2RSTR     DBGMCURST     LL_APB1_GRP2_ReleaseReset
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 19


 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ALL
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SYSCFG
 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_ADC1
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART8 (*)
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART7 (*)
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART6 (*)
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM1
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_SPI1
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_USART1
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM15 (*)
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM16
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_TIM17
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP2_PERIPH_DBGMCU
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   * @retval None
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** */
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP2_ReleaseReset(uint32_t Periphs)
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** {
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2RSTR, Periphs);
  54              		.loc 2 833 0
  55 0012 D968     		ldr	r1, [r3, #12]
  56 0014 0C4A     		ldr	r2, .L5+8
  57 0016 0A40     		ands	r2, r1
  58 0018 DA60     		str	r2, [r3, #12]
  59              	.LBE25:
  60              	.LBE24:
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  61              		.loc 1 156 0
  62 001a 0120     		movs	r0, #1
  63              	.LVL3:
  64 001c 0FE0     		b	.L3
  65              	.LVL4:
  66              	.L2:
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ForceReset(LL_APB1_GRP2_PERIPH_USART1);
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ReleaseReset(LL_APB1_GRP2_PERIPH_USART1);
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART2)
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART2)
  67              		.loc 1 170 0
  68 001e 0B4B     		ldr	r3, .L5+12
  69 0020 9842     		cmp	r0, r3
  70 0022 0BD1     		bne	.L4
  71              	.LVL5:
  72              	.LBB26:
  73              	.LBB27:
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
  74              		.loc 2 588 0
  75 0024 074B     		ldr	r3, .L5+4
  76 0026 1A69     		ldr	r2, [r3, #16]
  77 0028 8021     		movs	r1, #128
  78 002a 8902     		lsls	r1, r1, #10
  79 002c 0A43     		orrs	r2, r1
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 20


  80 002e 1A61     		str	r2, [r3, #16]
  81              	.LVL6:
  82              	.LBE27:
  83              	.LBE26:
  84              	.LBB28:
  85              	.LBB29:
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_bus.h **** }
  86              		.loc 2 639 0
  87 0030 1969     		ldr	r1, [r3, #16]
  88 0032 074A     		ldr	r2, .L5+16
  89 0034 0A40     		ands	r2, r1
  90 0036 1A61     		str	r2, [r3, #16]
  91              	.LBE29:
  92              	.LBE28:
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
  93              		.loc 1 156 0
  94 0038 0120     		movs	r0, #1
  95              	.LVL7:
  96 003a 00E0     		b	.L3
  97              	.LVL8:
  98              	.L4:
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_USART2);
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_USART2);
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART2 */
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART3)
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART3)
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_USART3);
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_USART3);
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART3 */
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART4)
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART4)
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_USART4);
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_USART4);
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART4 */
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART5)
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART5)
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_USART5);
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_USART5);
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 21


 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART5 */
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART6)
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART6)
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ForceReset(LL_APB1_GRP2_PERIPH_USART6);
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ReleaseReset(LL_APB1_GRP2_PERIPH_USART6);
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART6 */
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART7)
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART7)
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ForceReset(LL_APB1_GRP2_PERIPH_USART7);
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ReleaseReset(LL_APB1_GRP2_PERIPH_USART7);
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART7 */
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART8)
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else if (USARTx == USART8)
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Force reset of USART clock */
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ForceReset(LL_APB1_GRP2_PERIPH_USART8);
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Release reset of USART clock */
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_APB1_GRP2_ReleaseReset(LL_APB1_GRP2_PERIPH_USART8);
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART8 */
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     status = ERROR;
  99              		.loc 1 241 0
 100 003c 0020     		movs	r0, #0
 101              	.LVL9:
 102              	.L3:
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   return (status);
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** }
 103              		.loc 1 245 0
 104              		@ sp needed
 105 003e 7047     		bx	lr
 106              	.L6:
 107              		.align	2
 108              	.L5:
 109 0040 00380140 		.word	1073821696
 110 0044 00100240 		.word	1073876992
 111 0048 FFBFFFFF 		.word	-16385
 112 004c 00440040 		.word	1073759232
 113 0050 FFFFFDFF 		.word	-131073
 114              		.cfi_endproc
 115              	.LFE307:
 117              		.global	__aeabi_uidiv
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 22


 118              		.section	.text.LL_USART_Init,"ax",%progbits
 119              		.align	2
 120              		.global	LL_USART_Init
 121              		.code	16
 122              		.thumb_func
 124              	LL_USART_Init:
 125              	.LFB308:
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @brief  Initialize USART registers according to the specified
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         parameters in USART_InitStruct.
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @note   As some bits in USART configuration registers can only be written when the USART is dis
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         USART IP should be in disabled state prior calling this function. Otherwise, ERROR resu
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @note   Baud rate value stored in USART_InitStruct BaudRate field, should be valid (different f
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param  USARTx USART Instance
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param  USART_InitStruct pointer to a LL_USART_InitTypeDef structure
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         that contains the configuration information for the specified USART peripheral.
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @retval An ErrorStatus enumeration value:
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *          - SUCCESS: USART registers are initialized according to USART_InitStruct content
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *          - ERROR: Problem occurred during USART Registers initialization
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** ErrorStatus LL_USART_Init(USART_TypeDef *USARTx, LL_USART_InitTypeDef *USART_InitStruct)
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** {
 126              		.loc 1 261 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 16
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              	.LVL10:
 131 0000 30B5     		push	{r4, r5, lr}
 132              	.LCFI0:
 133              		.cfi_def_cfa_offset 12
 134              		.cfi_offset 4, -12
 135              		.cfi_offset 5, -8
 136              		.cfi_offset 14, -4
 137 0002 85B0     		sub	sp, sp, #20
 138              	.LCFI1:
 139              		.cfi_def_cfa_offset 32
 140 0004 0400     		movs	r4, r0
 141 0006 0D00     		movs	r5, r1
 142              	.LVL11:
 143              	.LBB30:
 144              	.LBB31:
 145              		.file 3 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h"
   1:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @file    stm32f0xx_ll_usart.h
   4:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @attention
   8:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
  11:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *      this list of conditions and the following disclaimer.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 23


  15:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *      without specific prior written permission.
  21:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
  22:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
  33:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   ******************************************************************************
  34:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  35:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  36:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #ifndef __STM32F0xx_LL_USART_H
  38:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define __STM32F0xx_LL_USART_H
  39:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  40:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #ifdef __cplusplus
  41:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** extern "C" {
  42:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
  43:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  44:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #include "stm32f0xx.h"
  46:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  47:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @addtogroup STM32F0xx_LL_Driver
  48:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  49:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  50:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  51:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (USART4) || defined (USART5
  52:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  53:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL USART
  54:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  57:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  60:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Private_Constants USART Private Constants
  62:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  63:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  64:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
  65:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
  66:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  67:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  68:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  69:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  70:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  71:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 24


  72:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  73:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
  74:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
  75:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  76:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  77:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  78:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  79:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  80:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  81:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
  82:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  83:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  84:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
  85:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  86:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
  87:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** typedef struct
  88:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
  89:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  90:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  91:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  92:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  93:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  94:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
  95:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  96:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  97:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
  98:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
  99:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
 100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
 104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
 105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
 109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
 110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** } LL_USART_InitTypeDef;
 124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** typedef struct
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 25


 129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLEAR_FLAG Clear Flags Defines
 169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_WriteReg function
 170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_PECF                       USART_ICR_PECF                /*!< Parity error fla
 173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_FECF                       USART_ICR_FECF                /*!< Framing error fl
 174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_NCF                        USART_ICR_NCF                 /*!< Noise detected f
 175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_ORECF                      USART_ICR_ORECF               /*!< Overrun error fl
 176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_IDLECF                     USART_ICR_IDLECF              /*!< Idle line detect
 177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_TCCF                       USART_ICR_TCCF                /*!< Transmission com
 178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
 179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_LBDCF                      USART_ICR_LBDCF               /*!< LIN break detect
 180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_CTSCF                      USART_ICR_CTSCF               /*!< CTS flag */
 182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_RTOCF                      USART_ICR_RTOCF               /*!< Receiver timeout
 183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_EOBCF                      USART_ICR_EOBCF               /*!< End of block fla
 185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 26


 186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_CMCF                       USART_ICR_CMCF                /*!< Character match 
 187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
 188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ICR_WUCF                       USART_ICR_WUCF                /*!< Wakeup from Stop
 189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_PE                         USART_ISR_PE                  /*!< Parity error fla
 199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_FE                         USART_ISR_FE                  /*!< Framing error fl
 200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_NE                         USART_ISR_NE                  /*!< Noise detected f
 201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_ORE                        USART_ISR_ORE                 /*!< Overrun error fl
 202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_IDLE                       USART_ISR_IDLE                /*!< Idle line detect
 203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_RXNE                       USART_ISR_RXNE                /*!< Read data regist
 204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_TC                         USART_ISR_TC                  /*!< Transmission com
 205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_TXE                        USART_ISR_TXE                 /*!< Transmit data re
 206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
 207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_LBDF                       USART_ISR_LBDF                /*!< LIN break detect
 208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_CTSIF                      USART_ISR_CTSIF               /*!< CTS interrupt fl
 210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_CTS                        USART_ISR_CTS                 /*!< CTS flag */
 211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_RTOF                       USART_ISR_RTOF                /*!< Receiver timeout
 212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_EOBF                       USART_ISR_EOBF                /*!< End of block fla
 214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_ABRE                       USART_ISR_ABRE                /*!< Auto baud rate e
 216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_ABRF                       USART_ISR_ABRF                /*!< Auto baud rate f
 217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_BUSY                       USART_ISR_BUSY                /*!< Busy flag */
 218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_CMF                        USART_ISR_CMF                 /*!< Character match 
 219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_SBKF                       USART_ISR_SBKF                /*!< Send break flag 
 220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_RWU                        USART_ISR_RWU                 /*!< Receiver wakeup 
 221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
 222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_WUF                        USART_ISR_WUF                 /*!< Wakeup from Stop
 223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_TEACK                      USART_ISR_TEACK               /*!< Transmit enable 
 224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ISR_REACK                      USART_ISR_REACK               /*!< Receive enable a
 225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_CMIE                       USART_CR1_CMIE                /*!< Character match 
 240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_RTOIE                      USART_CR1_RTOIE               /*!< Receiver timeout
 241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR1_EOBIE                      USART_CR1_EOBIE               /*!< End of Block int
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 27


 243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
 245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
 250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CR3_WUFIE                      USART_CR3_WUFIE               /*!< Wakeup from Stop
 251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_7BITS_SUPPORT)
 290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_7B                   USART_CR1_M1            /*!< 7 bits word length : S
 291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M0            /*!< 9 bits word length : S
 293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #else
 294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M             /*!< 9 bits word length : S
 296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 28


 300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
 353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_SMARTCARD_SUPPORT)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 29


 357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXRX TX RX Pins Swap
 365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXRX_STANDARD                  0x00000000U           /*!< TX/RX pins are used as d
 368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXRX_SWAPPED                   (USART_CR2_SWAP)      /*!< TX and RX pins functions
 369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
 374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_STANDARD           0x00000000U           /*!< RX pin signal works usin
 377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_INVERTED           (USART_CR2_RXINV)     /*!< RX pin signal values are
 378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_STANDARD           0x00000000U           /*!< TX pin signal works usin
 386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_INVERTED           (USART_CR2_TXINV)     /*!< TX pin signal values are
 387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BINARY_LOGIC Binary Data Inversion
 392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_POSITIVE          0x00000000U           /*!< Logical data from the da
 395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_NEGATIVE          USART_CR2_DATAINV     /*!< Logical data from the da
 396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BITORDER Bit Order
 401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BITORDER_LSBFIRST              0x00000000U           /*!< data is transmitted/rece
 404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_BITORDER_MSBFIRST              USART_CR2_MSBFIRST    /*!< data is transmitted/rece
 405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_AUTOBAUD_DETECT_ON Autobaud Detection
 410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_STARTBIT    0x00000000U                                 /*!< Me
 413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE USART_CR2_ABRMODE_0                         /*!< Fa
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 30


 414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_FABR_SUPPORT)
 415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME    USART_CR2_ABRMODE_1                         /*!< 0x
 416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_55_FRAME    (USART_CR2_ABRMODE_1 | USART_CR2_ABRMODE_0) /*!< 0x
 417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_ADDRESS_DETECT Address Length Detection
 423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_4B              0x00000000U           /*!< 4-bit address detection 
 426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_7B              USART_CR2_ADDM7       /*!< 7-bit address detection 
 427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
 443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP_ON Wakeup Activation
 444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_ADDRESS              0x00000000U                             /*!< Wake u
 447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_STARTBIT             USART_CR3_WUS_1                         /*!< Wake u
 448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_RXNE                 (USART_CR3_WUS_0 | USART_CR3_WUS_1)     /*!< Wake u
 449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_IRDA_SUPPORT)
 455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_LIN_SUPPORT)
 466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 31


 471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DE_POLARITY Driver Enable Polarity
 477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_HIGH               0x00000000U           /*!< DE signal is active high
 480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_LOW                USART_CR3_DEP         /*!< DE signal is active low 
 481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DMA_REG_DATA DMA Register Data
 486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_TRANSMIT          0x00000000U          /*!< Get address of data regis
 489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_RECEIVE           0x00000001U          /*!< Get address of data regis
 490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Write a value in USART register
 509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __REG__ Register to be written
 511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Read a value in USART register
 518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __REG__ Register to be read
 520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Register value
 521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 32


 528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__) ((((__PERIPHCLK__)*2) + ((__BAUDRATE_
 539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__) (((__PERIPHCLK__) + ((__BAUDRATE__)/
 548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @}
 555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @{
 565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART Enable
 569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         flags, in the USARTx_ISR are set to their default values.
 583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 33


 585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE));
 146              		.loc 3 600 0
 147 0008 0368     		ldr	r3, [r0]
 148              	.LVL12:
 149              	.LBE31:
 150              	.LBE30:
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ErrorStatus status = ERROR;
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(STM32F030x8) || defined(STM32F030xC) || defined(STM32F042x6) || defined(STM32F048xx) ||
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   LL_RCC_ClocksTypeDef RCC_Clocks;
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Check the parameters */
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_UART_INSTANCE(USARTx));
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_BAUDRATE(USART_InitStruct->BaudRate));
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_DATAWIDTH(USART_InitStruct->DataWidth));
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_STOPBITS(USART_InitStruct->StopBits));
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_PARITY(USART_InitStruct->Parity));
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_DIRECTION(USART_InitStruct->TransferDirection));
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_HWCONTROL(USART_InitStruct->HardwareFlowControl));
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_OVERSAMPLING(USART_InitStruct->OverSampling));
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* USART needs to be in disabled state, in order to be able to configure some bits in
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      CRx registers */
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   if (LL_USART_IsEnabled(USARTx) == 0U)
 151              		.loc 1 280 0
 152 000a DB07     		lsls	r3, r3, #31
 153 000c 49D4     		bmi	.L12
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /*---------------------------- USART CR1 Configuration ---------------------
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * Configure USARTx CR1 (USART Word Length, Parity, Mode and Oversampling bits) with parameters
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - DataWidth:          USART_CR1_M bits according to USART_InitStruct->DataWidth value
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - Parity:             USART_CR1_PCE, USART_CR1_PS bits according to USART_InitStruct->Parity
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - TransferDirection:  USART_CR1_TE, USART_CR1_RE bits according to USART_InitStruct->Transfe
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - Oversampling:       USART_CR1_OVER8 bit according to USART_InitStruct->OverSampling value.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      */
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     MODIFY_REG(USARTx->CR1,
 154              		.loc 1 289 0
 155 000e 0168     		ldr	r1, [r0]
 156              	.LVL13:
 157 0010 274B     		ldr	r3, .L16
 158 0012 1940     		ands	r1, r3
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 34


 159 0014 6B68     		ldr	r3, [r5, #4]
 160 0016 EA68     		ldr	r2, [r5, #12]
 161 0018 1343     		orrs	r3, r2
 162 001a 2A69     		ldr	r2, [r5, #16]
 163 001c 1343     		orrs	r3, r2
 164 001e AA69     		ldr	r2, [r5, #24]
 165 0020 1A43     		orrs	r2, r3
 166 0022 0B00     		movs	r3, r1
 167 0024 1343     		orrs	r3, r2
 168 0026 0360     		str	r3, [r0]
 169              	.LVL14:
 170              	.LBB32:
 171              	.LBB33:
 601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
 604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART enabled in STOP Mode.
 606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When this function is enabled, USART is able to wake up the MCU from Stop mode, provide
 607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         USART clock selection is HSI or LSE in RCC.
 608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_EnableInStopMode
 611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableInStopMode(USART_TypeDef *USARTx)
 615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UESM);
 617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  USART disabled in STOP Mode.
 621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   When this function is disabled, USART is not able to wake up the MCU from Stop mode
 622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_DisableInStopMode
 625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableInStopMode(USART_TypeDef *USARTx)
 629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UESM);
 631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled in STOP Mode (able to wake up MCU from Stop mode or not)
 635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_IsEnabledInStopMode
 638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledInStopMode(USART_TypeDef *USARTx)
 642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM));
 644:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 35


 645:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
 646:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 647:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 648:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 649:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 650:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 651:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 652:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 653:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 654:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 655:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RE);
 656:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 657:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 658:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 659:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Receiver Disable
 660:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 661:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 662:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 663:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 664:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 665:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 666:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 667:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 668:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 669:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 670:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Transmitter Enable
 671:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 672:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 673:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 674:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 675:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 676:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 677:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_TE);
 678:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 679:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 680:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 681:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Transmitter Disable
 682:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 683:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 684:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 685:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 686:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 687:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 688:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 689:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 690:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 691:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 692:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 693:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         of Transmitter and Receiver
 694:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 695:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 696:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 697:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 698:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 699:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 700:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 701:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 36


 702:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 703:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 704:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 705:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 706:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 707:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 708:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 709:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 710:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 711:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 712:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 713:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 714:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 715:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 716:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 717:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 718:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 719:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 720:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 721:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 722:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 723:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 724:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 725:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 726:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 727:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 728:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 729:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 730:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 731:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 732:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 733:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 734:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 735:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 736:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 737:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 738:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 739:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 740:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 741:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 742:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 743:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 744:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 745:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 746:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 747:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 748:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 749:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 750:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 751:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 752:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 753:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 754:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 755:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 756:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 757:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 758:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 37


 759:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 760:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 761:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 762:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 763:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 764:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 765:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 766:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 767:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 768:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 769:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 770:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 771:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 772:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 773:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 774:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 775:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 776:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 777:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 778:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 779:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 780:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 781:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 782:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 783:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 784:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 785:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 786:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 787:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 788:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_SetDataWidth\n
 789:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M1            LL_USART_SetDataWidth
 790:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 791:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 792:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B (*)
 793:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 794:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 795:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
 796:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
 797:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 798:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 799:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 800:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 801:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 802:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 803:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 804:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 805:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 806:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_GetDataWidth\n
 807:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M1            LL_USART_GetDataWidth
 808:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 809:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 810:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B (*)
 811:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 812:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 813:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
 814:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
 815:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 38


 816:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 817:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 818:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
 819:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 820:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 821:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 822:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Allow switch between Mute Mode and Active mode
 823:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_EnableMuteMode
 824:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 825:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 826:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 827:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableMuteMode(USART_TypeDef *USARTx)
 828:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 829:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_MME);
 830:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 831:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 832:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 833:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
 834:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_DisableMuteMode
 835:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 836:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 837:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 838:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableMuteMode(USART_TypeDef *USARTx)
 839:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 840:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_MME);
 841:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 842:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 843:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 844:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
 845:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_IsEnabledMuteMode
 846:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 847:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 848:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 849:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledMuteMode(USART_TypeDef *USARTx)
 850:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 851:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_MME) == (USART_CR1_MME));
 852:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 853:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 854:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 855:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
 856:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
 857:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 858:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
 859:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 860:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 861:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 862:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 863:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
 864:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 865:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
 866:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 867:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 868:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 869:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Oversampling mode
 870:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
 871:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 872:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 39


 873:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 874:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 875:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 876:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
 877:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 878:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
 879:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 880:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 881:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 882:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
 883:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 884:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 885:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
 886:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 887:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
 888:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 889:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 890:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 891:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 892:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
 893:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 894:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
 895:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 896:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 897:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 898:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
 899:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
 900:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 901:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 902:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
 903:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 904:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 905:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 906:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 907:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 908:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
 909:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 910:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
 911:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 912:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 913:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 914:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
 915:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 916:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 917:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
 918:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 919:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
 920:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 921:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 922:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 923:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 924:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
 925:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 926:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
 927:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 928:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 929:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 40


 930:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
 931:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 932:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 933:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
 934:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 935:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 936:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 937:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 938:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 939:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
 940:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 941:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
 942:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 943:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 944:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 945:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
 946:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 947:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 948:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
 949:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 950:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 951:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 952:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 953:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 954:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 955:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
 956:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 957:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
 958:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 959:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 960:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 961:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
 962:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 963:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 964:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
 965:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
 966:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 967:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 968:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 969:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 970:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
 971:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
 972:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
 973:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 974:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
 975:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
 976:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
 977:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 978:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 979:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 980:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
 981:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
 982:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
 983:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
 984:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
 985:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
 986:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 41


 987:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
 988:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 989:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 990:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
 991:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 992:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 993:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
 994:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 995:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 996:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
 997:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
 998:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
 999:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1000:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
1001:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1002:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1003:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1004:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
1005:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1006:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1007:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
1008:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1009:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1010:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1011:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
1012:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1013:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1014:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1015:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1016:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1017:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
1018:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1019:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1020:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
1021:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1022:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1023:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1024:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
1025:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
1027:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1028:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1029:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1030:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
1031:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1032:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1033:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
1034:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1035:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1036:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1037:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
1038:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1039:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN));
1040:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1041:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1042:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1043:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set the length of the stop bits
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 42


1044:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
1045:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1046:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1047:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5 (*)
1048:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1049:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5 (*)
1050:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1051:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1052:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1053:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1054:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1055:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
1056:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1057:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 172              		.loc 3 1057 0
 173 0028 4268     		ldr	r2, [r0, #4]
 174 002a 224B     		ldr	r3, .L16+4
 175 002c 1340     		ands	r3, r2
 176 002e AA68     		ldr	r2, [r5, #8]
 177 0030 1343     		orrs	r3, r2
 178 0032 4360     		str	r3, [r0, #4]
 179              	.LVL15:
 180              	.LBE33:
 181              	.LBE32:
 182              	.LBB34:
 183              	.LBB35:
1058:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1059:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1060:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1061:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
1062:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
1063:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1064:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1065:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5 (*)
1066:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1067:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5 (*)
1068:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1069:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1070:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1071:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1072:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
1073:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1074:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
1075:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1076:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1077:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1078:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
1079:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1080:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
1081:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
1082:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
1083:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
1084:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
1085:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M0            LL_USART_ConfigCharacter\n
1086:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR1          M1            LL_USART_ConfigCharacter\n
1087:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
1088:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 43


1089:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1090:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B (*)
1091:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1092:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1093:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1094:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1095:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1096:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1097:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1098:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5 (*)
1099:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1100:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5 (*)
1101:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1102:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1103:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1104:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1105:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1106:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
1107:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                               uint32_t StopBits)
1108:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1109:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
1110:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1111:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1112:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1113:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1114:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure TX/RX pins swapping setting.
1115:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_SetTXRXSwap
1116:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1117:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  SwapConfig This parameter can be one of the following values:
1118:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1119:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1120:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1121:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1122:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXRXSwap(USART_TypeDef *USARTx, uint32_t SwapConfig)
1123:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1124:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_SWAP, SwapConfig);
1125:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1126:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1127:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1128:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
1129:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_GetTXRXSwap
1130:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1131:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1132:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1133:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1134:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1135:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXRXSwap(USART_TypeDef *USARTx)
1136:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1137:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_SWAP));
1138:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1139:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1140:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1141:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure RX pin active level logic
1142:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_SetRXPinLevel
1143:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1144:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1145:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 44


1146:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1147:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1148:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1149:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1150:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1151:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_RXINV, PinInvMethod);
1152:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1153:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1154:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1155:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve RX pin active level logic configuration
1156:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_GetRXPinLevel
1157:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1158:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1159:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1160:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1161:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1162:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXPinLevel(USART_TypeDef *USARTx)
1163:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1164:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_RXINV));
1165:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1166:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1167:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1168:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure TX pin active level logic
1169:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_SetTXPinLevel
1170:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1171:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1172:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1173:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1174:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1175:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1176:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1177:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1178:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_TXINV, PinInvMethod);
1179:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1180:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1181:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1182:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve TX pin active level logic configuration
1183:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_GetTXPinLevel
1184:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1185:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1186:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1187:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1188:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1189:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXPinLevel(USART_TypeDef *USARTx)
1190:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1191:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_TXINV));
1192:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1193:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1194:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1195:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure Binary data logic.
1196:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
1197:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
1198:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_SetBinaryDataLogic
1199:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1200:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  DataLogic This parameter can be one of the following values:
1201:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1202:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 45


1203:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1204:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1205:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBinaryDataLogic(USART_TypeDef *USARTx, uint32_t DataLogic)
1206:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1207:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_DATAINV, DataLogic);
1208:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1209:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1210:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1211:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Retrieve Binary data configuration
1212:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_GetBinaryDataLogic
1213:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1214:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1215:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1216:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1217:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1218:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBinaryDataLogic(USART_TypeDef *USARTx)
1219:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1220:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_DATAINV));
1221:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1222:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1223:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1224:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
1225:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1226:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1227:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_SetTransferBitOrder
1228:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1229:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  BitOrder This parameter can be one of the following values:
1230:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1231:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1232:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1233:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1234:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferBitOrder(USART_TypeDef *USARTx, uint32_t BitOrder)
1235:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1236:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
1237:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1238:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1239:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1240:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
1241:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1242:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1243:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_GetTransferBitOrder
1244:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1245:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1246:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1247:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1248:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1249:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferBitOrder(USART_TypeDef *USARTx)
1250:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1251:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_MSBFIRST));
1252:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1253:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1254:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1255:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Auto Baud-Rate Detection
1256:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1257:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1258:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_EnableAutoBaudRate
1259:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 46


1260:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1261:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1262:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableAutoBaudRate(USART_TypeDef *USARTx)
1263:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1264:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_ABREN);
1265:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1266:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1267:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1268:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Auto Baud-Rate Detection
1269:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1270:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1271:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_DisableAutoBaudRate
1272:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1273:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1274:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1275:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableAutoBaudRate(USART_TypeDef *USARTx)
1276:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1277:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_ABREN);
1278:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1279:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1280:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1281:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Auto Baud-Rate Detection mechanism is enabled
1282:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1283:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1284:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_IsEnabledAutoBaud
1285:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1286:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1287:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1288:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledAutoBaud(USART_TypeDef *USARTx)
1289:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1290:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_ABREN) == (USART_CR2_ABREN));
1291:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1292:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1293:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1294:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Auto Baud-Rate mode bits
1295:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1296:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1297:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_SetAutoBaudRateMode
1298:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1299:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  AutoBaudRateMode This parameter can be one of the following values:
1300:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1301:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1302:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME (*)
1303:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME (*)
1304:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1305:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1306:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1307:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1308:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetAutoBaudRateMode(USART_TypeDef *USARTx, uint32_t AutoBaudRateMode)
1309:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1310:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ABRMODE, AutoBaudRateMode);
1311:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1312:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1313:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1314:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Auto Baud-Rate mode
1315:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1316:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 47


1317:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_GetAutoBaudRateMode
1318:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1319:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1320:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1321:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1322:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME (*)
1323:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME (*)
1324:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *
1325:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (*) Values not available on all devices
1326:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1327:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetAutoBaudRateMode(USART_TypeDef *USARTx)
1328:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1329:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ABRMODE));
1330:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1331:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1332:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1333:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Receiver Timeout
1334:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_EnableRxTimeout
1335:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1336:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1337:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1338:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRxTimeout(USART_TypeDef *USARTx)
1339:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1340:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_RTOEN);
1341:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1342:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1343:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1344:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Receiver Timeout
1345:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_DisableRxTimeout
1346:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1347:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1348:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1349:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRxTimeout(USART_TypeDef *USARTx)
1350:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1351:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_RTOEN);
1352:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1353:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1354:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1355:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Receiver Timeout feature is enabled
1356:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_IsEnabledRxTimeout
1357:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1358:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1359:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1360:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledRxTimeout(USART_TypeDef *USARTx)
1361:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1362:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_RTOEN) == (USART_CR2_RTOEN));
1363:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1364:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1365:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1366:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Set Address of the USART node.
1367:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
1368:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         for wake up with address mark detection.
1369:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
1370:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (b7-b4 should be set to 0)
1371:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
1372:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
1373:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         for wake up with 7-bit address mark detection.
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 48


1374:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
1375:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         It may also be used for character detection during normal reception,
1376:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
1377:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
1378:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         value and CMF flag is set on match)
1379:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_ConfigNodeAddress\n
1380:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR2          ADDM7         LL_USART_ConfigNodeAddress
1381:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1382:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  AddressLen This parameter can be one of the following values:
1383:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1384:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1385:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  NodeAddress 4 or 7 bit Address of the USART node.
1386:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1387:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1388:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigNodeAddress(USART_TypeDef *USARTx, uint32_t AddressLen, uint32_
1389:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1390:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
1391:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_CR2_ADD_Pos)));
1392:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1393:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1394:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1395:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return 8 bit Address of the USART node as set in ADD field of CR2.
1396:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
1397:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
1398:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
1399:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
1400:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
1401:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1402:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
1403:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1404:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
1405:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1406:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD) >> USART_CR2_ADD_Pos);
1407:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1408:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1409:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1410:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
1411:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR2          ADDM7         LL_USART_GetNodeAddressLen
1412:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1413:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1414:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1415:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1416:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1417:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddressLen(USART_TypeDef *USARTx)
1418:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1419:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADDM7));
1420:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1421:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1422:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1423:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
1424:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1425:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1426:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
1427:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1428:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1429:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1430:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 49


1431:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1432:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
1433:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1434:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1435:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1436:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
1437:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1438:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1439:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
1440:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1441:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1442:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1443:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1444:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1445:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
1446:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1447:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1448:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1449:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
1450:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1451:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1452:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
1453:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1454:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1455:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1456:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1457:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1458:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
1459:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1460:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1461:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1462:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
1463:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1464:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1465:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
1466:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1467:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1468:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1469:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1470:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1471:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
1472:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1473:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1474:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1475:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
1476:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1477:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1478:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
1479:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
1480:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1481:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1482:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1483:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1484:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1485:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1486:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1487:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 50


1488:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
1489:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1490:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
 184              		.loc 3 1490 0
 185 0034 8268     		ldr	r2, [r0, #8]
 186 0036 204B     		ldr	r3, .L16+8
 187 0038 1340     		ands	r3, r2
 188 003a 6A69     		ldr	r2, [r5, #20]
 189 003c 1343     		orrs	r3, r2
 190 003e 8360     		str	r3, [r0, #8]
 191              	.LVL16:
 192              	.LBE35:
 193              	.LBE34:
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                (USART_CR1_M | USART_CR1_PCE | USART_CR1_PS |
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                 USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                (USART_InitStruct->DataWidth | USART_InitStruct->Parity |
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                 USART_InitStruct->TransferDirection | USART_InitStruct->OverSampling));
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /*---------------------------- USART CR2 Configuration ---------------------
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * Configure USARTx CR2 (Stop bits) with parameters:
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - Stop Bits:          USART_CR2_STOP bits according to USART_InitStruct->StopBits value.
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - CLKEN, CPOL, CPHA and LBCL bits are to be configured using LL_USART_ClockInit().
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      */
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_USART_SetStopBitsLength(USARTx, USART_InitStruct->StopBits);
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /*---------------------------- USART CR3 Configuration ---------------------
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * Configure USARTx CR3 (Hardware Flow Control) with parameters:
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * - HardwareFlowControl: USART_CR3_RTSE, USART_CR3_CTSE bits according to USART_InitStruct->Ha
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      */
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     LL_USART_SetHWFlowCtrl(USARTx, USART_InitStruct->HardwareFlowControl);
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /*---------------------------- USART BRR Configuration ---------------------
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      * Retrieve Clock frequency used for USART Peripheral
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      */
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     if (USARTx == USART1)
 194              		.loc 1 311 0
 195 0040 1E4B     		ldr	r3, .L16+12
 196 0042 9842     		cmp	r0, r3
 197 0044 03D1     		bne	.L9
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = LL_RCC_GetUSARTClockFreq(LL_RCC_USART1_CLKSOURCE);
 198              		.loc 1 313 0
 199 0046 0020     		movs	r0, #0
 200              	.LVL17:
 201 0048 FFF7FEFF 		bl	LL_RCC_GetUSARTClockFreq
 202              	.LVL18:
 203 004c 08E0     		b	.L10
 204              	.LVL19:
 205              	.L9:
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART2)
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART2)
 206              		.loc 1 316 0
 207 004e 1C4B     		ldr	r3, .L16+16
 208 0050 9842     		cmp	r0, r3
 209 0052 04D1     		bne	.L13
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 51


 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined (RCC_CFGR3_USART2SW)
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = LL_RCC_GetUSARTClockFreq(LL_RCC_USART2_CLKSOURCE);
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #else
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART2 clock is PCLK */
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 210              		.loc 1 322 0
 211 0054 01A8     		add	r0, sp, #4
 212              	.LVL20:
 213 0056 FFF7FEFF 		bl	LL_RCC_GetSystemClocksFreq
 214              	.LVL21:
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 215              		.loc 1 323 0
 216 005a 0398     		ldr	r0, [sp, #12]
 217              	.LVL22:
 218 005c 00E0     		b	.L10
 219              	.LVL23:
 220              	.L13:
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(STM32F030x8) || defined(STM32F030xC) || defined(STM32F042x6) || defined(STM32F048xx) ||
 221              		.loc 1 263 0
 222 005e 0020     		movs	r0, #0
 223              	.LVL24:
 224              	.L10:
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART2 */
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART3)
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART3)
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined (RCC_CFGR3_USART3SW)
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = LL_RCC_GetUSARTClockFreq(LL_RCC_USART3_CLKSOURCE);
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #else
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART3 clock is PCLK */
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART3 */
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART4)
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART4)
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART4 clock is PCLK */
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART4 */
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART5)
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART5)
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART5 clock is PCLK */
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART5 */
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART6)
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART6)
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART6 clock is PCLK */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 52


 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART6 */
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART7)
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART7)
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART7 clock is PCLK */
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART7 */
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #if defined(USART8)
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else if (USARTx == USART8)
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* USART8 clock is PCLK */
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** #endif /* USART8 */
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* Nothing to do, as error code is already assigned to ERROR value */
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* Configure the USART Baud Rate :
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        - valid baud rate value (different from 0) is required
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        - Peripheral clock as returned by RCC service, should be valid (different from 0).
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     if ((periphclk != LL_RCC_PERIPH_FREQUENCY_NO)
 225              		.loc 1 388 0
 226 0060 0028     		cmp	r0, #0
 227 0062 20D0     		beq	.L14
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****         && (USART_InitStruct->BaudRate != 0U))
 228              		.loc 1 389 0
 229 0064 2968     		ldr	r1, [r5]
 230 0066 0029     		cmp	r1, #0
 231 0068 1FD0     		beq	.L15
 232              	.LVL25:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       status = SUCCESS;
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_USART_SetBaudRate(USARTx,
 233              		.loc 1 392 0
 234 006a AA69     		ldr	r2, [r5, #24]
 235              	.LVL26:
 236              	.LBB36:
 237              	.LBB37:
1491:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1492:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1493:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1494:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1495:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1496:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1497:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
1498:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
1499:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1500:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 53


1501:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1502:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1503:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1504:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1505:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1506:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
1507:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1508:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1509:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1510:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1511:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1512:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable One bit sampling method
1513:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
1514:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1515:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1516:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1517:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
1518:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1519:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1520:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1521:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1522:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1523:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable One bit sampling method
1524:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
1525:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1526:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1527:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1528:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
1529:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1530:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1531:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1532:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1533:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1534:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1535:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
1536:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1537:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1538:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1539:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1540:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1541:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT));
1542:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1543:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1544:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1545:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Enable Overrun detection
1546:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_EnableOverrunDetect
1547:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1548:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1549:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1550:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOverrunDetect(USART_TypeDef *USARTx)
1551:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1552:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1553:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1554:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1555:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1556:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Disable Overrun detection
1557:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_DisableOverrunDetect
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 54


1558:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1559:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1560:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1561:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOverrunDetect(USART_TypeDef *USARTx)
1562:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1563:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1564:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1565:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1566:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1567:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Indicate if Overrun detection is enabled
1568:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_IsEnabledOverrunDetect
1569:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1570:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1571:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1572:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOverrunDetect(USART_TypeDef *USARTx)
1573:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1574:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS);
1575:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1576:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1577:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #if defined(USART_WUSM_SUPPORT)
1578:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1579:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1580:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1581:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1582:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_SetWKUPType
1583:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1584:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  Type This parameter can be one of the following values:
1585:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1586:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1587:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1588:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1589:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1590:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWKUPType(USART_TypeDef *USARTx, uint32_t Type)
1591:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1592:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_WUS, Type);
1593:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1594:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1595:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1596:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1597:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1598:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1599:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_GetWKUPType
1600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1601:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1602:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1603:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1604:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1605:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1606:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWKUPType(USART_TypeDef *USARTx)
1607:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1608:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_WUS));
1609:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
1610:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** #endif
1611:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1612:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** /**
1613:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1614:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 55


1615:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1616:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1617:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         (Baud rate value != 0)
1618:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1619:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1620:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  USARTx USART Instance
1621:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1622:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1623:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1624:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1625:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1626:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   * @retval None
1627:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   */
1628:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1629:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****                                           uint32_t BaudRate)
1630:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** {
1631:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   register uint32_t usartdiv = 0x0U;
1632:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   register uint32_t brrtemp = 0x0U;
1633:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** 
1634:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
 238              		.loc 3 1634 0
 239 006c 8023     		movs	r3, #128
 240 006e 1B02     		lsls	r3, r3, #8
 241 0070 9A42     		cmp	r2, r3
 242 0072 0DD1     		bne	.L11
1635:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1636:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
 243              		.loc 3 1636 0
 244 0074 4000     		lsls	r0, r0, #1
 245              	.LVL27:
 246 0076 4B08     		lsrs	r3, r1, #1
 247 0078 C018     		adds	r0, r0, r3
 248 007a FFF7FEFF 		bl	__aeabi_uidiv
 249              	.LVL28:
1637:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
 250              		.loc 3 1637 0
 251 007e 114B     		ldr	r3, .L16+20
 252 0080 0340     		ands	r3, r0
 253              	.LVL29:
1638:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 254              		.loc 3 1638 0
 255 0082 4008     		lsrs	r0, r0, #1
 256              	.LVL30:
 257 0084 0722     		movs	r2, #7
 258 0086 1040     		ands	r0, r2
 259 0088 1843     		orrs	r0, r3
 260              	.LVL31:
1639:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = brrtemp;
 261              		.loc 3 1639 0
 262 008a E060     		str	r0, [r4, #12]
 263              	.LBE37:
 264              	.LBE36:
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_USART_SetBaudRate(USARTx,
 265              		.loc 1 391 0
 266 008c 0120     		movs	r0, #1
 267              	.LVL32:
 268 008e 0DE0     		b	.L8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 56


 269              	.LVL33:
 270              	.L11:
 271              	.LBB39:
 272              	.LBB38:
1640:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   }
1641:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   else
1642:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****   {
1643:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
 273              		.loc 3 1643 0
 274 0090 4B08     		lsrs	r3, r1, #1
 275 0092 C018     		adds	r0, r0, r3
 276              	.LVL34:
 277 0094 FFF7FEFF 		bl	__aeabi_uidiv
 278              	.LVL35:
 279 0098 0004     		lsls	r0, r0, #16
 280 009a 000C     		lsrs	r0, r0, #16
 281 009c E060     		str	r0, [r4, #12]
 282              	.LBE38:
 283              	.LBE39:
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_USART_SetBaudRate(USARTx,
 284              		.loc 1 391 0
 285 009e 0120     		movs	r0, #1
 286 00a0 04E0     		b	.L8
 287              	.LVL36:
 288              	.L12:
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 289              		.loc 1 262 0
 290 00a2 0020     		movs	r0, #0
 291              	.LVL37:
 292 00a4 02E0     		b	.L8
 293              	.LVL38:
 294              	.L14:
 295 00a6 0020     		movs	r0, #0
 296              	.LVL39:
 297 00a8 00E0     		b	.L8
 298              	.LVL40:
 299              	.L15:
 300 00aa 0020     		movs	r0, #0
 301              	.LVL41:
 302              	.L8:
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                            periphclk,
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                            USART_InitStruct->OverSampling,
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                            USART_InitStruct->BaudRate);
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* Check BRR is greater than or equal to 16d */
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       assert_param(IS_LL_USART_BRR_MIN(USARTx->BRR));
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* Check BRR is greater than or equal to 16d */
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       assert_param(IS_LL_USART_BRR_MAX(USARTx->BRR));
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Endif (=> USART not in Disabled state => return ERROR) */
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   return (status);
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** }
 303              		.loc 1 407 0
 304 00ac 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 57


 305              		@ sp needed
 306              	.LVL42:
 307              	.LVL43:
 308 00ae 30BD     		pop	{r4, r5, pc}
 309              	.L17:
 310              		.align	2
 311              	.L16:
 312 00b0 F369FFEF 		.word	-268473869
 313 00b4 FFCFFFFF 		.word	-12289
 314 00b8 FFFCFFFF 		.word	-769
 315 00bc 00380140 		.word	1073821696
 316 00c0 00440040 		.word	1073759232
 317 00c4 F0FF0000 		.word	65520
 318              		.cfi_endproc
 319              	.LFE308:
 321              		.section	.text.LL_USART_StructInit,"ax",%progbits
 322              		.align	2
 323              		.global	LL_USART_StructInit
 324              		.code	16
 325              		.thumb_func
 327              	LL_USART_StructInit:
 328              	.LFB309:
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @brief Set each @ref LL_USART_InitTypeDef field to default value.
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param USART_InitStruct pointer to a @ref LL_USART_InitTypeDef structure
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *                          whose fields will be set to default values.
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @retval None
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** void LL_USART_StructInit(LL_USART_InitTypeDef *USART_InitStruct)
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** {
 329              		.loc 1 417 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334              	.LVL44:
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Set USART_InitStruct fields to default values */
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->BaudRate            = 9600U;
 335              		.loc 1 419 0
 336 0000 9623     		movs	r3, #150
 337 0002 9B01     		lsls	r3, r3, #6
 338 0004 0360     		str	r3, [r0]
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->DataWidth           = LL_USART_DATAWIDTH_8B;
 339              		.loc 1 420 0
 340 0006 0023     		movs	r3, #0
 341 0008 4360     		str	r3, [r0, #4]
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->StopBits            = LL_USART_STOPBITS_1;
 342              		.loc 1 421 0
 343 000a 8360     		str	r3, [r0, #8]
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->Parity              = LL_USART_PARITY_NONE ;
 344              		.loc 1 422 0
 345 000c C360     		str	r3, [r0, #12]
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->TransferDirection   = LL_USART_DIRECTION_TX_RX;
 346              		.loc 1 423 0
 347 000e 0C22     		movs	r2, #12
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 58


 348 0010 0261     		str	r2, [r0, #16]
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 349              		.loc 1 424 0
 350 0012 4361     		str	r3, [r0, #20]
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_InitStruct->OverSampling        = LL_USART_OVERSAMPLING_16;
 351              		.loc 1 425 0
 352 0014 8361     		str	r3, [r0, #24]
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** }
 353              		.loc 1 426 0
 354              		@ sp needed
 355 0016 7047     		bx	lr
 356              		.cfi_endproc
 357              	.LFE309:
 359              		.section	.text.LL_USART_ClockInit,"ax",%progbits
 360              		.align	2
 361              		.global	LL_USART_ClockInit
 362              		.code	16
 363              		.thumb_func
 365              	LL_USART_ClockInit:
 366              	.LFB310:
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @brief  Initialize USART Clock related settings according to the
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         specified parameters in the USART_ClockInitStruct.
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @note   As some bits in USART configuration registers can only be written when the USART is dis
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         USART IP should be in disabled state prior calling this function. Otherwise, ERROR resu
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param  USARTx USART Instance
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param  USART_ClockInitStruct pointer to a @ref LL_USART_ClockInitTypeDef structure
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *         that contains the Clock configuration information for the specified USART peripheral.
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @retval An ErrorStatus enumeration value:
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *          - SUCCESS: USART registers related to Clock settings are initialized according to USAR
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *          - ERROR: Problem occurred during USART Registers initialization
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** ErrorStatus LL_USART_ClockInit(USART_TypeDef *USARTx, LL_USART_ClockInitTypeDef *USART_ClockInitStr
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** {
 367              		.loc 1 441 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL45:
 372 0000 10B5     		push	{r4, lr}
 373              	.LCFI2:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
 377              	.LVL46:
 378              	.LBB40:
 379              	.LBB41:
 600:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 380              		.loc 3 600 0
 381 0002 0368     		ldr	r3, [r0]
 382              	.LVL47:
 383              	.LBE41:
 384              	.LBE40:
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ErrorStatus status = SUCCESS;
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Check USART Instance and Clock signal output parameters */
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 59


 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_UART_INSTANCE(USARTx));
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   assert_param(IS_LL_USART_CLOCKOUTPUT(USART_ClockInitStruct->ClockOutput));
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* USART needs to be in disabled state, in order to be able to configure some bits in
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****      CRx registers */
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   if (LL_USART_IsEnabled(USARTx) == 0U)
 385              		.loc 1 450 0
 386 0004 DB07     		lsls	r3, r3, #31
 387 0006 17D4     		bmi	.L22
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /*---------------------------- USART CR2 Configuration -----------------------*/
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     /* If Clock signal has to be output */
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     if (USART_ClockInitStruct->ClockOutput == LL_USART_CLOCK_DISABLE)
 388              		.loc 1 454 0
 389 0008 0B68     		ldr	r3, [r1]
 390 000a 002B     		cmp	r3, #0
 391 000c 05D1     		bne	.L21
 392              	.LVL48:
 393              	.LBB42:
 394              	.LBB43:
1026:Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_usart.h **** }
 395              		.loc 3 1026 0
 396 000e 4268     		ldr	r2, [r0, #4]
 397 0010 0A4B     		ldr	r3, .L23
 398 0012 1340     		ands	r3, r2
 399 0014 4360     		str	r3, [r0, #4]
 400              	.LBE43:
 401              	.LBE42:
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   ErrorStatus status = SUCCESS;
 402              		.loc 1 442 0
 403 0016 0120     		movs	r0, #1
 404              	.LVL49:
 405 0018 0FE0     		b	.L20
 406              	.LVL50:
 407              	.L21:
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* Deactivate Clock signal delivery :
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        * - Disable Clock Output:        USART_CR2_CLKEN cleared
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        */
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       LL_USART_DisableSCLKOutput(USARTx);
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     else
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     {
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* Ensure USART instance is USART capable */
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       assert_param(IS_USART_INSTANCE(USARTx));
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /* Check clock related parameters */
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       assert_param(IS_LL_USART_CLOCKPOLARITY(USART_ClockInitStruct->ClockPolarity));
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       assert_param(IS_LL_USART_CLOCKPHASE(USART_ClockInitStruct->ClockPhase));
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       assert_param(IS_LL_USART_LASTBITCLKOUTPUT(USART_ClockInitStruct->LastBitClockPulse));
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       /*---------------------------- USART CR2 Configuration -----------------------
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        * Configure USARTx CR2 (Clock signal related bits) with parameters:
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        * - Enable Clock Output:         USART_CR2_CLKEN set
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        * - Clock Polarity:              USART_CR2_CPOL bit according to USART_ClockInitStruct->Cloc
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        * - Clock Phase:                 USART_CR2_CPHA bit according to USART_ClockInitStruct->Cloc
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        * - Last Bit Clock Pulse Output: USART_CR2_LBCL bit according to USART_ClockInitStruct->Last
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 60


 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****        */
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****       MODIFY_REG(USARTx->CR2,
 408              		.loc 1 478 0
 409 001a 4468     		ldr	r4, [r0, #4]
 410 001c 084B     		ldr	r3, .L23+4
 411 001e 1C40     		ands	r4, r3
 412 0020 4B68     		ldr	r3, [r1, #4]
 413 0022 8A68     		ldr	r2, [r1, #8]
 414 0024 1343     		orrs	r3, r2
 415 0026 CA68     		ldr	r2, [r1, #12]
 416 0028 1343     		orrs	r3, r2
 417 002a 2343     		orrs	r3, r4
 418 002c 8022     		movs	r2, #128
 419 002e 1201     		lsls	r2, r2, #4
 420 0030 1343     		orrs	r3, r2
 421 0032 4360     		str	r3, [r0, #4]
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 422              		.loc 1 442 0
 423 0034 0120     		movs	r0, #1
 424              	.LVL51:
 425 0036 00E0     		b	.L20
 426              	.LVL52:
 427              	.L22:
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                  USART_CR2_CLKEN | USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL,
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                  USART_CR2_CLKEN | USART_ClockInitStruct->ClockPolarity |
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****                  USART_ClockInitStruct->ClockPhase | USART_ClockInitStruct->LastBitClockPulse);
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     }
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Else (USART not in Disabled state => return ERROR */
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   else
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   {
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****     status = ERROR;
 428              		.loc 1 487 0
 429 0038 0020     		movs	r0, #0
 430              	.LVL53:
 431              	.L20:
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   }
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   return (status);
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** }
 432              		.loc 1 491 0
 433              		@ sp needed
 434 003a 10BD     		pop	{r4, pc}
 435              	.L24:
 436              		.align	2
 437              	.L23:
 438 003c FFF7FFFF 		.word	-2049
 439 0040 FFF0FFFF 		.word	-3841
 440              		.cfi_endproc
 441              	.LFE310:
 443              		.section	.text.LL_USART_ClockStructInit,"ax",%progbits
 444              		.align	2
 445              		.global	LL_USART_ClockStructInit
 446              		.code	16
 447              		.thumb_func
 449              	LL_USART_ClockStructInit:
 450              	.LFB311:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 61


 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** 
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** /**
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @brief Set each field of a @ref LL_USART_ClockInitTypeDef type structure to default value.
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @param USART_ClockInitStruct pointer to a @ref LL_USART_ClockInitTypeDef structure
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   *                               whose fields will be set to default values.
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   * @retval None
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   */
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** void LL_USART_ClockStructInit(LL_USART_ClockInitTypeDef *USART_ClockInitStruct)
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** {
 451              		.loc 1 500 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              		@ link register save eliminated.
 456              	.LVL54:
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   /* Set LL_USART_ClockInitStruct fields with default values */
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_ClockInitStruct->ClockOutput       = LL_USART_CLOCK_DISABLE;
 457              		.loc 1 502 0
 458 0000 0023     		movs	r3, #0
 459 0002 0360     		str	r3, [r0]
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_ClockInitStruct->ClockPolarity     = LL_USART_POLARITY_LOW;            /* Not relevant when
 460              		.loc 1 503 0
 461 0004 4360     		str	r3, [r0, #4]
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_ClockInitStruct->ClockPhase        = LL_USART_PHASE_1EDGE;             /* Not relevant when
 462              		.loc 1 504 0
 463 0006 8360     		str	r3, [r0, #8]
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c ****   USART_ClockInitStruct->LastBitClockPulse = LL_USART_LASTCLKPULSE_NO_OUTPUT;  /* Not relevant when
 464              		.loc 1 505 0
 465 0008 C360     		str	r3, [r0, #12]
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_ll_usart.c **** }
 466              		.loc 1 506 0
 467              		@ sp needed
 468 000a 7047     		bx	lr
 469              		.cfi_endproc
 470              	.LFE311:
 472              		.text
 473              	.Letext0:
 474              		.file 4 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 475              		.file 5 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 476              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f070x6.h"
 477              		.file 7 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 478              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_ll_rcc.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccRPreAB.s 			page 62


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_ll_usart.c
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:20     .text.LL_USART_DeInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:25     .text.LL_USART_DeInit:00000000 LL_USART_DeInit
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:109    .text.LL_USART_DeInit:00000040 $d
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:119    .text.LL_USART_Init:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:124    .text.LL_USART_Init:00000000 LL_USART_Init
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:312    .text.LL_USART_Init:000000b0 $d
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:322    .text.LL_USART_StructInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:327    .text.LL_USART_StructInit:00000000 LL_USART_StructInit
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:360    .text.LL_USART_ClockInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:365    .text.LL_USART_ClockInit:00000000 LL_USART_ClockInit
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:438    .text.LL_USART_ClockInit:0000003c $d
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:444    .text.LL_USART_ClockStructInit:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccRPreAB.s:449    .text.LL_USART_ClockStructInit:00000000 LL_USART_ClockStructInit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
LL_RCC_GetUSARTClockFreq
LL_RCC_GetSystemClocksFreq
